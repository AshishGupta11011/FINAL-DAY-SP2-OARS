{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Bookings/Components/booking-deatils/booking-deatils.component.ts","./src/app/Bookings/Components/booking-deatils/booking-deatils.component.html","./src/app/Bookings/Services/booking-data.service.ts","./src/app/Bookings/pipes/safe/safe.pipe.ts","./src/app/Customers/Components/admin/admin.component.ts","./src/app/Customers/Components/admin/admin.component.html","./src/app/Customers/Components/booking/booking.component.ts","./src/app/Customers/Components/booking/booking.component.html","./src/app/Customers/Components/login-customer/login-customer.component.ts","./src/app/Customers/Components/login-customer/login-customer.component.html","./src/app/Customers/Components/page-not-found/page-not-found.component.ts","./src/app/Customers/Components/page-not-found/page-not-found.component.html","./src/app/Customers/Components/profile/profile.component.ts","./src/app/Customers/Components/profile/profile.component.html","./src/app/Customers/Components/register-customer/register-customer.component.ts","./src/app/Customers/Components/register-customer/register-customer.component.html","./src/app/Customers/Models/Customer.ts","./src/app/Customers/Models/User.ts","./src/app/Customers/Services/Authenticate.service.ts","./src/app/Customers/Services/Guard/auth.guard.ts","./src/app/Customers/Services/Interceptor/token-interceptor.service.ts","./src/app/Customers/Services/Register.service.ts","./src/app/Passengers/Components/passenger-list/passenger-list.component.ts","./src/app/Passengers/Components/passenger-list/passenger-list.component.html","./src/app/Passengers/Components/passenger/passenger.component.ts","./src/app/Passengers/Components/passenger/passenger.component.html","./src/app/Passengers/Services/passenger.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAEW;;;;;;;ICyBxD,2EAEE;IAAA,uFAA2B;IAAA,4DAAO;;;IASpC,2EAEE;IAAA,4FACF;IAAA,4DAAO;;;IAUP,2EAEE;IAAA,4FAAgC;IAAA,4DAAO;;;IAQzC,2EAEE;IAAA,+EAAmB;IAAA,4DAAO;;;IAS5B,2EAEE;IAAA,iFAAqB;IAAA,4DAAO;;;;;IArExC,wEACE;IAAA,yEACE;IAAA,wEAAoC;IAAA,mFAAwB;IAAA,4DAAK;IAEjE,0EAEE;IAAA,yEACE;IAAA,2EAAoD;IAAA,uEAAY;IAAA,4DAAQ;IACxE,2EAAyD;IAAA,qEAAU;IAAA,4DAAQ;IAC3E,4EAA4D;IAAA,6EAAiB;IAAA,4DAAQ;IACrF,4EAAmD;IAAA,kEAAM;IAAA,4DAAQ;IACjE,6EAAuD;IAAA,uEAAW;IAAA,4DAAQ;IAC5E,4DAAM;IAEN,0EACE;IAAA,2EACE;IAAA,wEAMA;IAAA,uIAEE;IACJ,4DAAM;IAEN,2EACE;IAAA,wEAKA;IAAA,uIAEE;IAEJ,4DAAM;IACN,2EACE;IAAA,wEAKA;IAAA,wFAAgF;IAChF,uFAAiD;IACjD,uIAEE;IACJ,4DAAM;IACN,2EACE;IAAA,wEAKA;IAAA,uIAEE;IACJ,4DAAM;IAEN,2EACE;IAAA,wEAKA;IAAA,uIAEE;IACJ,4DAAM;IACR,4DAAM;IACN,0EACE;IAGA,2EACE;IAAA,8EAAkE;IAA1B,yUAAyB;IAAC,2EAAe;IAAA,4DAAS;IAC5F,4DAAM;IACR,4DAAM;IACN,uEACE;IAAA,wDACF;;IAAA,4DAAM;IAMR,4DAAO;IACT,4DAAM;IACR,qEAAe;;;;IAtFL,0DAAqB;IAArB,qFAAqB;IAanB,2DAGI;IAHJ,qSAGI;IAGJ,0DAA+G;IAA/G,8LAA+G;IAMjF,0DAG1B;IAH0B,yTAG1B;IAEJ,0DAA8H;IAA9H,6MAA8H;IAKhH,0DAAgC;IAAhC,8EAAgC;IAKf,0DAAsB;IAAtB,oEAAsB;IAGrD,0DAAoI;IAApI,mNAAoI;IAKpI,0DAGF;IAHE,iSAGF;IAEE,0DAA4G;IAA5G,2LAA4G;IAMhF,0DAG5B;IAH4B,iTAG5B;IAEA,0DAAwH;IAAxH,uMAAwH;IAa5H,0DACF;IADE,mKACF;;;IAUN,wEACE;IAAA,yEACE;IAAA,wEAAoC;IAAA,gFAAqB;IAAA,4DAAK;IAC9D,sEACE;IAAA,iEACF;IAAA,4DAAM;IACN,sEACE;IAAA,sEAAM;IAAA,uDAAuC;IAAA,4DAAM;IACnD,sEAAM;IAAA,wDAA0C;IAAA,4DAAM;IACtD,uEAAM;IAAA,wDAAkD;IAAA,4DAAM;IAC9D,uEAAM;IAAA,wDAAgC;IAAA,4DAAM;IAC5C,uEAAM;IAAA,wDAA+C;IAAA,4DAAM;IAE7D,4DAAM;IAER,4DAAM;IAER,qEAAe;;;IAVH,0DAAuC;IAAvC,qHAAuC;IACvC,0DAA0C;IAA1C,wHAA0C;IAC1C,0DAAkD;IAAlD,gIAAkD;IAClD,0DAAgC;IAAhC,8GAAgC;IAChC,0DAA+C;IAA/C,6HAA+C;;AD9FtD,MAAM,uBAAuB;IAelC,aAAa;IACb,YAAoB,eAAmC;QAAnC,oBAAe,GAAf,eAAe,CAAoB;QAfvD,sBAAiB,GAAY,IAAI,CAAC;QAClC,uBAAkB,GAAY,IAAI,CAAC;QACnC,uBAAkB,GAAY,IAAI,CAAC;QAcjC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAElB,iBAAiB;QACjB,IAAI,CAAC,aAAa,GAAG,IAAI,wDAAS,CAAC;YAEjC,QAAQ,EAAE,IAAI,0DAAW,CAAC,GAAG,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpD,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YACjC,MAAM,EAAE,IAAI,0DAAW,CAAC,KAAK,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrD,WAAW,EAAE,IAAI,0DAAW,CAAC,KAAK,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC1D,aAAa,EAAE,IAAI,0DAAW,CAAC,0BAA0B,CAAC;YAC1D,WAAW,EAAE,IAAI,0DAAW,CAAC,0BAA0B,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC9E,SAAS,EAAE,IAAI,0DAAW,CAAC,CAAC,EAAC,CAAC,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACpE,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACjC,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAEpC,CAAC,CAAC;QAEH,eAAe;QACf,IAAI,CAAC,OAAO,GAAG,IAAI,wDAAS,CAAC;YAE3B,QAAQ,EAAE,IAAI,0DAAW,CAAC,GAAG,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpD,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC5B,MAAM,EAAE,IAAI,0DAAW,CAAC,KAAK,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrD,WAAW,EAAE,IAAI,0DAAW,CAAC,KAAK,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC1D,aAAa,EAAE,IAAI,0DAAW,CAAC,0BAA0B,CAAC;YAC1D,aAAa,EAAE,IAAI,0DAAW,CAAC,0BAA0B,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAChF,SAAS,EAAE,IAAI,0DAAW,CAAC,CAAC,EAAC,CAAC,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACpE,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YACjC,UAAU,EAAE,IAAI,0DAAW,CAAC,GAAG,CAAC;SAEjC,CAAC,CAAC;IAGL,CAAC;IAED,QAAQ;IAGR,CAAC;IAED,yDAAyD;IACzD,4CAA4C;IAC5C,kCAAkC;IAClC,YAAY;QAGV,oBAAoB;QACpB,IAAG,IAAI,CAAC,iBAAiB,EACrB;YAAC,IAAI,CAAC,aAAa,EAAE,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;SAC3B;;YAEJ,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;IAE3C,CAAC;IAED,yDAAyD;IACzD,aAAa;QAGX,oBAAoB;QACpB,IAAG,IAAI,CAAC,kBAAkB,EACtB;YAAC,IAAI,CAAC,aAAa,EAAE,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;SAC3B;;YAEJ,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;IAE3C,CAAC;IAGD,sBAAsB;IACtB,aAAa;QAEX,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,EAAE;YAC9B,iFAAiF;YACjF,IAAI,CAAC,eAAe,CAAC,0BAA0B,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,CAAC;iBACpF,SAAS,CACR,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAC3B,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CACzB;YACH,mBAAmB;YACnB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;SACtB;aACI;YACH,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;SAC7B;IAEH,CAAC;IAED,aAAa;QACX,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,EAAE;YAC9B,oDAAoD;YACpD,OAAO,CAAC,GAAG,CACT,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAE,IAAI;gBAC7C,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,GAAE,IAAI;gBACvD,oBAAoB,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa,GAAE,IAAI;gBAC7D,oBAAoB,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa,GAAE,IAAI;gBAC7D,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAGnD,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,CACvE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAC3B,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CACzB;YACH,iBAAiB;YACjB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;SACtB;aACI;YACH,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;SAC7B;IACH,CAAC;;8FAlIU,uBAAuB;uGAAvB,uBAAuB;QCdpC,yEAEE;QAGA,uIACE;QA2FF,sIACE;QAkBJ,4DAAM;;QA/GW,0DAA0B;QAA1B,wFAA0B;QA4F3B,0DAA0B;QAA1B,wFAA0B;;6FDnF7B,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEA;AACE;;;AAMtC,MAAM,kBAAkB;IAE7B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAE1C,cAAS,GAAW,yBAAyB,CAAC;IAFA,CAAC;IAI/C,uBAAuB;IACvB,0BAA0B,CAAC,WAAmB;QAC5C,8IAA8I;QAC9I,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,2BAA2B,WAAW,EAAE,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAE5H,CAAC;IACD,sBAAsB;IACtB,uBAAuB,CAAC,QAAgB;QACtC,8IAA8I;QAC9I,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,wBAAwB,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAEtH,CAAC;IACD,4BAA4B;IAC5B,sBAAsB,CAAC,QAAiB;QACtC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAU,IAAI,CAAC,SAAS,GAAG,cAAc,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IACtH,CAAC;IAED,YAAY,CAAC,KAAwB;QACnC,OAAO,uDAAU,CAAC,KAAK,CAAC,MAAM,CAAC;IACjC,CAAC;;oFAzBU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAoD;;AAK7C,MAAM,QAAQ;IAEnB,SAAS,CAAC,KAAc,EAAE,GAAG,IAAe;QAC1C,OAAO,IAAI,CAAC;IACd,CAAC;;gEAJU,QAAQ;kGAAR,QAAQ;6FAAR,QAAQ;cAHpB,kDAAI;eAAC;gBACJ,IAAI,EAAE,MAAM;aACb;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICStC,sEACI;IAAA,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,qEAAI;IAAA,uDAAkB;IAAA,4DAAK;IAC/B,4DAAM;;;IAFE,0DAAiB;IAAjB,iFAAiB;IACjB,0DAAkB;IAAlB,kFAAkB;;;IATtC,sEACI;IAAA,2EACI;IAAA,wEACI;IAAA,qEAAI;IAAA,+DAAI;IAAA,4DAAK;IACb,qEAAI;IAAA,gEAAK;IAAA,4DAAK;IAClB,4DAAQ;IACR,wEACI;IAAA,gHACI;IAGR,4DAAQ;IACZ,4DAAQ;IACZ,4DAAM;;;IANW,0DAAuC;IAAvC,wFAAuC;;;IAQxD,sEACG;IAAA,wEAA6B;IAAA,8EAAmB;IAAA,4DAAK;IACxD,4DAAM;;;IAHN,sEACA;IAAA,gHACG;IAFH,4DACA;;;IAAK,0DAAkB;IAAlB,iFAAkB;;ADLhB,MAAM,cAAc;IAMzB,YAAoB,QAA0B,EAAS,MAAe;QAAlD,aAAQ,GAAR,QAAQ,CAAkB;QAAS,WAAM,GAAN,MAAM,CAAS;QAFtE,YAAO,GAAa,KAAK,CAAC;QAGxB,IAAI,CAAC,YAAY,GAAE,EAAE,CAAC;IACvB,CAAC;IAEF,QAAQ;QAEN,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,SAAS,CACnC,GAAG,CAAC,EAAE,GAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAI,CAAC,YAAY,GAAG,GAAG,GAAC,EACjF,KAAK,CAAC,EAAE,GAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,OAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,EAAC,CACjG;IACH,CAAC;;4EAhBU,cAAc;8FAAd,cAAc;QCZ3B,oEAAG;QAAA,uEAAY;QAAA,4DAAI;QAEnB,0GACI;QAaJ,0GACA;;QAfK,0DAAiB;QAAjB,6EAAiB;QAchB,0DAAkB;QAAlB,8EAAkB;;6FDJX,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCP7B,oEAAG;QAAA,yEAAc;QAAA,4DAAI;;6FDOR,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAIT;;;;;;;ICkCb,4EAAwD;IAAA,2EAAgB;IAAA,4DAAQ;;;IAChF,4EAAyD;IAAA,4EAAiB;IAAA,4DAAQ;;;IAFtF,sEACI;IAAA,8HAAwD;IACxD,8HAAyD;IAC7D,4DAAM;;;;IAFyB,0DAA4B;IAA5B,oFAA4B;IAC5B,0DAA6B;IAA7B,qFAA6B;;AD5B7E,MAAM,sBAAsB;IAEjC,YAAoB,YAAkC,EAAU,MAAe;QAA3D,iBAAY,GAAZ,YAAY,CAAsB;QAAU,WAAM,GAAN,MAAM,CAAS;QAC/E,UAAK,GAAG,EAAE,CAAC;QAIX,aAAQ,GAAQ,IAAI,iDAAI,EAAE,CAAC;IALwD,CAAC;IAGpF,QAAQ;IACR,CAAC;IAGD,OAAO;QAGL,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAEzD,GAAG,CAAC,EAAE;YACJ,YAAY,CAAC,OAAO,CAAC,OAAO,EAAC,GAAG,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QAErC,CAAC,EACD,KAAK,CAAC,EAAE;YACN,MAAM,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;YACvC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CACF;IACH,CAAC;;4FAzBU,sBAAsB;sGAAtB,sBAAsB;QCSnC,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,oEACJ;QAAA,4DAAM;QACN,yEACI;QAAA,gFACI;QAAA,wEAAyB;QAAA,gEAAK;QAAA,4DAAK;QACnC,0EAEI;QAAA,4EAAmB;QAAA,kEAAM;QAAA,4DAAQ;QACjC,iFAGA;QADiE,mMAA4B;QAF7F,4DAGA;QAEA,qHACI;QAGR,4DAAM;QACN,0EACI;QAAA,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,iFAGA;QADI,sMAA+B;QAFnC,4DAGA;QAAA,6EAAiF;QAAA,4EACrE;QAAA,4DAAQ;QACxB,4DAAM;QAEN,8EAAgH;QAAtB,+IAAW,aAAS,IAAC;QAAC,iEAAK;QAAA,4DAAS;QAElI,4DAAO;QACX,4DAAM;QACN,2EACI;QAAA,0EAAkD;QAAA,sEAAU;QAAA,yEAAyD;QAAA,kEAAM;QAAA,4DAAI;QAAA,4DAAK;QACxI,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;;;;QA1BsB,2DAAmD;QAAnD,mGAAmD;QAAU,uFAA4B;QAGxF,0DAAqC;QAArC,2FAAqC;QAQtC,0DAAyD;QAAzD,mGAAyD;QACzD,0FAA+B;QACR,0DAAqD;QAArD,+FAAqD;QAI5E,0DAAkC;QAAlC,sFAAkC;;6FDxCjD,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,qBAAqB;IAEhC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0FALU,qBAAqB;qGAArB,qBAAqB;QCPlC,wEAAwB;QAAA,8DAAG;QAAA,4DAAK;QAChC,wEAAwB;QAAA,uEAAY;QAAA,4DAAK;;6FDM5B,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAKD;;;;;;;ICsBrB,4EAAwD;IAAA,2EAAgB;IAAA,4DAAQ;;;IAChF,4EAAyD;IAAA,4EAAiB;IAAA,4DAAQ;;;IAFtF,sEACI;IAAA,wHAAwD;IACxD,wHAAyD;IAC7D,4DAAM;;;;IAFyB,0DAA4B;IAA5B,oFAA4B;IAC5B,0DAA6B;IAA7B,qFAA6B;;ADd7E,MAAM,gBAAgB;IAO3B,YAAoB,WAA4B,EAAW,MAAe;QAAtD,gBAAW,GAAX,WAAW,CAAiB;QAAW,WAAM,GAAN,MAAM,CAAS;QAD1E,kBAAa,GAAa,IAAI,yDAAQ,EAAE,CAAC;QAEvC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;IAChB,CAAC;IAID,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CACjD,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,aAAa,GAAG,GAAG,CAAE,EAAC,EACpC,KAAK,CAAC,EAAE,GAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAC,CAC5B;IAEL,CAAC;IAGD,UAAU;QAER,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,aAAa,CAAC;aACzD,SAAS,CAER,GAAG,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,GAAC,EAC7D,KAAK,CAAC,EAAE,GAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAE,EAAC,CAEhC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAChD,GAAG,CAAC,EAAE,GAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,CAAE,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,GAAC,EAC7D,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAE5B;IACH,CAAC;;gFAvCU,gBAAgB;gGAAhB,gBAAgB;QCd7B,yEACA;QAAA,uDACI;;QAAA,yEACI;QACA,yEAEI;QAAA,yEACgB;QAAA,yEAGZ;QAAA,6EAEI;QAFgC,4IAAW,gBAAY;QAEvD,yEACI;QAAA,4EAAkB;QAAA,iEAAK;QAAA,4DAAQ;QAC/B,+EAEA;QAD+D,iMAAgC;QAD/F,4DAEA;QAAA,6EAAyE;QAAA,wEACjE;QAAA,4DAAQ;QACpB,4DAAM;QAGN,0EACI;QAAA,6EAAgC;QAAA,kEAAM;QAAA,4DAAQ;QAC9C,iFAGA;QADa,kMAAiC;QAF9C,4DAGA;QAAA,+GACI;QAGR,4DAAM;QAGN,0EACI;QAAA,6EAAmC;QAAA,qEAAS;QAAA,4DAAQ;QACpD,iFAGA;QADI,gMAA+B;QAFnC,4DAGA;QAAA,6EAAiF;QAAA,4EACrE;QAAA,4DAAQ;QACxB,4DAAM;QAGN,0EACI;QAAA,6EAA8B;QAAA,wEAAY;QAAA,4DAAQ;QAClD,iFAEA;QAD6D,gMAAgC;QAD7F,4DAEA;QAAA,6EAAuE;QAAA,+EACxD;QAAA,4DAAQ;QAC3B,4DAAM;QAGN,0EACI;QAAA,6EAAkC;QAAA,0EAAc;QAAA,4DAAQ;QACxD,iFAGA;QADI,0MAAyC;QAF7C,4DAGA;QAAA,6EAA+E;QAAA,0EACrE;QAAA,4DAAQ;QACtB,4DAAM;QAEN,0EACI;QAAA,6EAAkC;QAAA,qEAAS;QAAA,4DAAQ;QACnD,iFAGA;QADI,oMAAmC;QAFvC,4DAGA;QAAA,6EAA+E;QAAA,2EACpE;QAAA,4DAAQ;QACvB,4DAAM;QAEN,0EACI;QAAA,6EAAkC;QAAA,oEAAQ;QAAA,4DAAQ;QAClD,iFAGA;QADI,4MAA2C;QAF/C,4DAGA;QAAA,6EAA+E;QAAA,2EACpE;QAAA,4DAAQ;QACvB,4DAAM;QAEN,2EACI;QAAA,8EAAkF;QAAA,0EACvE;QAAA,4DAAS;QACxB,4DAAM;QACV,4DAAO;QACX,4DAAM;QACN,2EACI;QAAA,0EAAuB;QAAA,sEAAU;QAAA,4DAAK;QACtC,sEACA;QAAA,8EAA8E;QAAA,0EAAc;QAAA,4DAAS;QAE7G,4DAAM;QAEN,4DAAM;QACV,4DAAM;QACV,4DAAM;QA9FN,4DACA;;;;;;;;;;QAAA,0DACI;QADJ,gKACI;QAawB,2DAAiD;QAAjD,mGAAiD;QAAU,2FAAgC;QACpE,0DAA6C;QAA7C,+FAA6C;QAQ9B,0DAAmD;QAAnD,mGAAmD;QAChF,4FAAiC;QACzC,0DAAqC;QAArC,2FAAqC;QAUtC,0DAAyD;QAAzD,mGAAyD;QACzD,0FAA+B;QACR,0DAAqD;QAArD,+FAAqD;QAQ5E,0DAA+C;QAA/C,mGAA+C;QAAU,0FAAgC;QAClE,0DAA2C;QAA3C,+FAA2C;QAQlE,0DAAuD;QAAvD,mGAAuD;QACvD,oGAAyC;QAClB,0DAAmD;QAAnD,+FAAmD;QAO1E,0DAAuD;QAAvD,mGAAuD;QACvD,8FAAmC;QACZ,0DAAmD;QAAnD,+FAAmD;QAO1E,0DAAuD;QAAvD,mGAAuD;QACvD,sGAA2C;QACpB,0DAAmD;QAAnD,+FAAmD;QAKxD,0DAAmC;QAAnC,sFAAmC;;6FDlEpE,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAID;;;;;;;ICoCrC,4EAA0D;IAAA,2EAAgB;IAAA,4DAAQ;;;IAClF,4EAA2D;IAAA,4EAAiB;IAAA,4DAAQ;;;IAFxF,sEACI;IAAA,iIAA0D;IAC1D,iIAA2D;IAC/D,4DAAM;;;;IAFyB,0DAA8B;IAA9B,oFAA8B;IAC9B,0DAA+B;IAA/B,qFAA+B;;AD7B/D,MAAM,yBAAyB;IAIpC,YAAoB,WAA4B,EAAW,MAAe;QAAtD,gBAAW,GAAX,WAAW,CAAiB;QAAW,WAAM,GAAN,MAAM,CAAS;QAHnE,uBAAkB,GAAY,KAAK,CAAC;QAC3C,eAAU,GAAY,KAAK,CAAC;QAC5B,kBAAa,GAAa,IAAI,yDAAQ,EAAE,CAAC;IACsC,CAAC;IAIhF,QAAQ;IACR,CAAC;IAED,UAAU;QAER,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC;aAC7C,SAAS,CAER,IAAI,CAAC,EAAE;YAEL,IAAG,IAAI,IAAI,GAAG,EAAC;gBAAC,MAAM,CAAC,KAAK,CAAC,sBAAsB,CAAC;aAAC;YAAA,CAAC;YACtD,IAAG,IAAI,IAAI,GAAG,EAAC;gBAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBAAA,MAAM,CAAC,KAAK,CAAC,sBAAsB,CAAC;aAAC;YAAA,CAAC;YAC5E,OAAO,CAAC,GAAG,CAAC,SAAS,EAAC,IAAI,CAAC;QAE9B,CAAC,EAAC,KAAK,CAAC,EAAE,GAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAElC;QAED,IAAG,IAAI,CAAC,UAAU,EAAC;YACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SACjC;IACL,CAAC;;kGA7BU,yBAAyB;yGAAzB,yBAAyB;QCMtC,yEAEO;QACA,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,yEAAc;QAAA,4DAAK;QAC3B,4DAAM;QAEN,yEACX;QAAA,6EAEI;QAFkC,qJAAW,gBAAY;QAEzD,yEACI;QAAA,2EAAkB;QAAA,iEAAK;QAAA,4DAAQ;QAC/B,+EACA;QADoJ,0MAAkC;QAAtL,4DACA;QAAA,6EAA2E;QAAA,wEAAY;QAAA,4DAAQ;QACnG,4DAAM;QAGN,0EACI;QAAA,6EAAiC;QAAA,kEAAM;QAAA,4DAAQ;QAC/C,iFACA;QAD+M,2MAAmC;QAAlP,4DACA;QAAA,wHACI;QAGR,4DAAM;QAGN,0EACI;QAAA,6EAAoC;QAAA,qEAAS;QAAA,4DAAQ;QACpD,iFACD;QADyK,yMAAiC;QAAzM,4DACD;QAAA,6EAAmF;QAAA,4EAAgB;QAAA,4DAAQ;QAC/G,4DAAM;QAGH,0EACC;QAAA,6EAA8B;QAAA,wEAAY;QAAA,4DAAQ;QAClD,iFACA;QADgJ,yMAAiC;QAAjL,4DACA;QAAA,6EAAyE;QAAA,+EAAmB;QAAA,4DAAQ;QACxG,4DAAM;QAGF,0EACA;QAAA,6EAAkC;QAAA,0EAAc;QAAA,4DAAQ;QACxD,iFACA;QADyL,mNAA2C;QAApO,4DACA;QAAA,6EAAiF;QAAA,0EAAc;QAAA,4DAAQ;QAC3G,4DAAM;QAEN,0EACI;QAAA,6EAAkC;QAAA,oEAAQ;QAAA,4DAAQ;QAClD,iFACA;QADgK,qNAA6C;QAA7M,4DACA;QAAA,6EAAiF;QAAA,2EAAe;QAAA,4DAAQ;QAC5G,4DAAM;QAEN,0EACI;QAAA,6EAAkC;QAAA,qEAAS;QAAA,4DAAQ;QACnD,iFACA;QADmK,6MAAqC;QAAxM,4DACA;QAAA,6EAAiF;QAAA,4EAAgB;QAAA,4DAAQ;QAC7G,4DAAM;QAEN,2EACI;QAAA,8EAAmF;QAAA,0EAAc;QAAA,4DAAS;QAC9G,4DAAM;QACV,4DAAO;QAEP,4DAAM;QACN,4DAAM;QACN,4DAAM;;;;;;;;;;QAtDyF,2DAAmD;QAAnD,mGAAmD;QAAU,2FAAkC;QAC3J,0DAA+C;QAA/C,+FAA+C;QAMsE,0DAAqD;QAArD,mGAAqD;QAAU,4FAAmC;QAC7O,0DAAuC;QAAvC,2FAAuC;QASwD,0DAA2D;QAA3D,mGAA2D;QAAU,0FAAiC;QAC/K,0DAAuD;QAAvD,+FAAuD;QAMG,0DAAiD;QAAjD,mGAAiD;QAAU,0FAAiC;QACtJ,0DAA6C;QAA7C,+FAA6C;QAM8C,0DAAyD;QAAzD,mGAAyD;QAAU,oGAA2C;QACzM,0DAAqD;QAArD,+FAAqD;QAKa,0DAAyD;QAAzD,mGAAyD;QAAU,sGAA6C;QAClL,0DAAqD;QAArD,+FAAqD;QAKgB,0DAAyD;QAAzD,mGAAyD;QAAU,8FAAqC;QAC7K,0DAAqD;QAArD,+FAAqD;QAI1D,0DAAmC;QAAnC,sFAAmC;;6FDnEpD,yBAAyB;cALrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD;;;;;;;;;;;;;;AETD;AAAA;AAAO,MAAM,QAAQ;IAEjB,YACW,OAAc,EAAE,EAChB,QAAe,EAAE,EACjB,MAAa,EAAE,EACf,MAAW,IAAI,EACf,gBAAuB,IAAI,EAC3B,kBAA0B,EAAE,EAC5B,UAAkB,IAAI;QANtB,SAAI,GAAJ,IAAI,CAAY;QAChB,UAAK,GAAL,KAAK,CAAY;QACjB,QAAG,GAAH,GAAG,CAAY;QACf,QAAG,GAAH,GAAG,CAAY;QACf,kBAAa,GAAb,aAAa,CAAc;QAC3B,oBAAe,GAAf,eAAe,CAAa;QAC5B,YAAO,GAAP,OAAO,CAAe;IAC/B,CAAC;CACN;;;;;;;;;;;;;ACbD;AAAA;AAAO,MAAM,IAAI;IAGb,YACW,QAAe,EAAE,EACjB,WAAkB,EAAE;QADpB,UAAK,GAAL,KAAK,CAAY;QACjB,aAAQ,GAAR,QAAQ,CAAY;IAG9B,CAAC;CACL;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGF;AACV;;;;AAOxB,MAAM,mBAAmB;IAI9B,YAAoB,IAAiB,EAAU,MAAe;QAA1C,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAS;QAF9D,QAAG,GAAW,yCAAyC,CAAC;IAEU,CAAC;IAGjE,gBAAgB,CAAC,IAAW;QAEzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAChF,CAAC;IAED,YAAY,CAAC,KAAuB;QAElC,OAAO,uDAAU,CAAC,KAAK,CAAC;IAC1B,CAAC;IACL,YAAY;IACR,QAAQ;QACN,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAE;IAE3C,CAAC;IAED,QAAQ;QACN,OAAO,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;IAED,MAAM;QACJ,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEnC,CAAC;;sFA9BQ,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;6FAEP,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAQpC,MAAM,SAAS;IACpB,YAAoB,YAAkC,EAAU,MAAe;QAA3D,iBAAY,GAAZ,YAAY,CAAsB;QAAU,WAAM,GAAN,MAAM,CAAS;IAAE,CAAC;IAClF,WAAW;QACT,IAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAC;YAAC,OAAO,IAAI;SAAC;aACzC;YACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,OAAO,KAAK,CAAC;SAEd;IACH,CAAC;;kEATU,SAAS;4FAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;6FAEP,SAAS;cAHrB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAoD;AAEU;;AAMvD,MAAM,uBAAuB;IAElC,YAAoB,QAAmB;QAAnB,aAAQ,GAAR,QAAQ,CAAW;IAAI,CAAC;IAE5C,SAAS,CAAC,GAAG,EAAE,IAAI;QACjB,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,yEAAmB,CAAC;QACxD,IAAI,WAAW,GAAG,GAAG,CAAC,KAAK,CACzB;YACE,UAAU,EAAE;gBACV,aAAa,EAAE,UAAU,WAAW,CAAC,QAAQ,EAAE,EAAE;aAClD;SACF,CACF;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IAElC,CAAC;;8FAhBU,uBAAuB;0GAAvB,uBAAuB,WAAvB,uBAAuB,mBAFtB,MAAM;6FAEP,uBAAuB;cAHnC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAGd;AACT;;;AAOlC,iBAAiB;AACV,MAAM,eAAe;IAK1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJpC,qEAAqE;QAErE,QAAG,GAAW,uCAAuC,CAAC;IAEd,CAAC;IAEzC,iBAAiB;IACjB,WAAW,CAAC,QAAkB;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACpF,CAAC;IAED,cAAc;IACd,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACzE,CAAC;IAED,oBAAoB;IACpB,eAAe,CAAC,EAAU;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAG,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACpF,CAAC;IAED,iBAAiB;IACjB,eAAe,CAAC,EAAU,EAAE,QAAkB;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAG,IAAI,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC9F,CAAC;IAED,iBAAiB;IACjB,cAAc,CAAC,EAAU;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,IAAI,CAAC,GAAG,GAAG,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAEvF,CAAC;IAED,iCAAiC;IAEjC,iCAAiC;IACjC,KAAK;IACL,kFAAkF;IAClF,0BAA0B;IAC1B,iCAAiC;IAEjC,+BAA+B;IAC/B,SAAS;IACT,OAAO;IACP,4FAA4F;IAC5F,IAAI;IAEJ,yBAAyB;IACzB,YAAY,CAAC,KAAwB;QACnC,OAAO,uDAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;;8EAnDU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAHd,MAAM;6FAGP,eAAe;cAJ3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICoBtC,qEACI;IAAA,qEAAI;IAAA,uDAA8B;IAAA,4DAAK;IACvC,qEAAI;IAAA,uDAA4B;IAAA,4DAAK;IACrC,qEAAI;IAAA,uDAA0B;IAAA,4DAAK;IACnC,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IAChC,qEAAI;IAAA,wDAAyB;IAAA,4DAAK;IAClC,sEAAI;IAAA,wDAAsB;IAAA,4DAAK;IAC/B,sEAAI;IAAA,wDAA8B;IAAA,4DAAK;IAEvC,sEACI;IAAA,6EAA0D;IAAzB,6TAAuB;IAAE,gEAAI;IAAA,4DAAS;IAC3E,4DAAK;IACL,sEACI;IAAA,6EAA4D;IAA3B,+TAAyB;IAAE,kEAAM;IAAA,4DAAS;IAC/E,4DAAK;IACT,4DAAK;;;IAdG,0DAA8B;IAA9B,4FAA8B;IAC9B,0DAA4B;IAA5B,0FAA4B;IAC5B,0DAA0B;IAA1B,wFAA0B;IAC1B,0DAAuB;IAAvB,qFAAuB;IACvB,0DAAyB;IAAzB,uFAAyB;IACzB,0DAAsB;IAAtB,oFAAsB;IACtB,0DAA8B;IAA9B,4FAA8B;;ADjB3C,MAAM,sBAAsB;IAGjC,YAAqB,OAAwB;QAAxB,YAAO,GAAP,OAAO,CAAiB;IAAI,CAAC;IAElD,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,CAAC,eAA4B,EAAE,EAAE;YACrE,IAAI,CAAC,aAAa,GAAG,eAAe,CAAC;QACvC,CAAC,CAAC,CAAC;QACH,yDAAyD;QACzD,8DAA8D;QAC9D,4DAA4D;IAC9D,CAAC;IAGF,wBAAwB;IACvB,WAAW;QACV,yIAAyI;IAC1I,CAAC;IAEH,0BAA0B;IACxB,aAAa,KAAG,CAAC;;4FArBN,sBAAsB;sGAAtB,sBAAsB;QCVnC,yEACA;QAAA,wEAAmC;QAAA,uEAAY;QAAA,4DAAK;QAGpD,yEACA;QAAA,2EAEI;QAAA,2EACM;QAAA,qEACA;QAAA,qEAAI;QAAA,sEAAW;QAAA,4DAAK;QACpB,qEAAI;QAAA,qEAAS;QAAA,4DAAK;QAClB,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAChB,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,+DAAG;QAAA,4DAAK;QACZ,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,yEAAgB;QAAA,kEAAM;QAAA,4DAAK;QAC3B,4DAAK;QACX,4DAAQ;QACJ,yEACI;QAAA,mHACI;QAeR,4DAAQ;QAEhB,4DAAQ;QACR,4DAAM;QACN,4DAAM;;QApBU,2DAAuC;QAAvC,sFAAuC;;6FDV1C,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEiB;;;;;;;ICYrD,4EAAmJ;IAAA,oFAAyB;IAAA,4DAAO;;;IASjL,4EAA0I;IAAA,4FAAiC;IAAA,4DAAO;;;IAQlL,4EAAoI;IAAA,uFAA4B;IAAA,4DAAO;;;IACvK,4EAAmI;IAAA,iHAAsD;IAAA,4DAAO;;;IAa9L,4EAA2I;IAAA,6EAAiB;IAAA,4DAAO;;;IAQrK,4EAAkI;IAAA,kGAAuC;IAAA,4DAAO;;;IA0MhL,4EAAyJ;IAAA,iFAAsB;IAAA,4DAAO;;;ADnP/L,MAAM,kBAAkB;IAO7B,YAAoB,OAA0B,EAAU,MAAc;QAAlD,YAAO,GAAP,OAAO,CAAmB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAEnE,IAAI,CAAC,UAAU,CAAC;QAEhB,sBAAsB;QACtB,IAAI,CAAC,OAAO,GAAC,IAAI,wDAAS,CAAC;YAC1B,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9E,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9E,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;YACtF,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;YACzF,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YACvE,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;SAClG,CAAC,CAAC;IACL,CAAC;IAEF,QAAQ;IACR,CAAC;IACA,gBAAgB;IAChB,YAAY;IAEV,UAAU;QACP,IAAI,SAAS,GAAc;YACzB,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK;YAC9C,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK;YAC1C,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK;YACxC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK;YACpC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK;YAClC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE;SACjF,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YACvD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAE7C,eAAe;QAEb,6DAA6D;QAC7D,wBAAwB;QAC1B,KAAK;IAEN,CAAC;;oFAlDS,kBAAkB;kGAAlB,kBAAkB;QCZ/B,yEACI;QAAA,wEAAmC;QAAA,8EAAkB;QAAA,4DAAK;QAC1D,gEAEA;QAAA,yEACI;QAAA,0EAEA;QAF4B,8IAAY,gBAAY,IAAC;QAGjD,yEACA;QAAA,2EAAuB;QAAA,qEAAU;QAAA,4DAAQ;QACzC,sEAIE;QAAA,kHAAmJ;QAErJ,4DAAM;QAIN,0EACI;QAAA,4EAAqB;QAAA,oEAAQ;QAAA,4DAAQ;QACrC,uEACA;QAAA,kHAA0I;QAC9I,4DAAM;QAIN,0EACI;QAAA,6EAAkB;QAAA,gEAAI;QAAA,4DAAQ;QAC9B,wEACA;QAAA,kHAAoI;QACpI,kHAAmI;QAEvI,4DAAM;QAIN,0EACK;QAAA,6EAAoB;QAAA,mEAAQ;QAAA,4DAAQ;QAEpC,8EACK;QAAA,8EAAkB;QAAA,gEAAI;QAAA,4DAAS;QAC/B,8EAAkB;QAAA,kEAAM;QAAA,4DAAS;QACrC,4DAAS;QACT,kHAA2I;QACjJ,4DAAM;QAIN,0EACI;QAAA,6EAAiB;QAAA,+DAAG;QAAA,4DAAQ;QAC5B,wEACA;QAAA,kHAAkI;QACtI,4DAAM;QAIN,0EACI;QAAA,6EAAyB;QAAA,uEAAW;QAAA,4DAAQ;QAE5C,8EACI;QAAA,8EAAiB;QAAA,4EAAgB;QAAA,4DAAS;QAE1C,8EAAuB;QAAA,kEAAM;QAAA,4DAAS;QACxD,8EAAyB;QAAA,oEAAQ;QAAA,4DAAS;QAC1C,8EAAyB;QAAA,oEAAQ;QAAA,4DAAS;QAC1C,8EAAyB;QAAA,oEAAQ;QAAA,4DAAS;QAC1C,8EAAyB;QAAA,oEAAQ;QAAA,4DAAS;QAC1C,8EAAwB;QAAA,mEAAO;QAAA,4DAAS;QACxC,8EAA0B;QAAA,qEAAS;QAAA,4DAAS;QAC5C,8EAA4B;QAAA,uEAAW;QAAA,4DAAS;QAChD,8EAAyB;QAAA,oEAAQ;QAAA,4DAAS;QAC1C,8EAA2B;QAAA,sEAAU;QAAA,4DAAS;QAC9C,8EAAyB;QAAA,oEAAQ;QAAA,4DAAS;QAC1C,8EAA4B;QAAA,uEAAW;QAAA,4DAAS;QAChD,8EAAyB;QAAA,oEAAQ;QAAA,4DAAS;QAC1C,8EAAyB;QAAA,oEAAQ;QAAA,4DAAS;QAC1C,8EAA4B;QAAA,uEAAW;QAAA,4DAAS;QAChD,8EAA0B;QAAA,qEAAS;QAAA,4DAAS;QAC5C,8EAA0B;QAAA,qEAAS;QAAA,4DAAS;QAC5C,8EAAyB;QAAA,oEAAQ;QAAA,4DAAS;QAC1C,8EAA2B;QAAA,sEAAU;QAAA,4DAAS;QAC9C,8EAAwB;QAAA,mEAAO;QAAA,4DAAS;QACxC,8EAAyB;QAAA,oEAAQ;QAAA,4DAAS;QAC1C,8EAAyB;QAAA,oEAAQ;QAAA,4DAAS;QAC1C,8EAA0B;QAAA,qEAAS;QAAA,4DAAS;QAC5C,8EAAyB;QAAA,oEAAQ;QAAA,4DAAS;QAC1C,8EAAwB;QAAA,mEAAO;QAAA,4DAAS;QACxC,8EAA0B;QAAA,qEAAS;QAAA,4DAAS;QAC5C,8EAAwB;QAAA,mEAAO;QAAA,4DAAS;QACxC,8EAAyB;QAAA,oEAAQ;QAAA,4DAAS;QAC1C,8EAA0B;QAAA,qEAAS;QAAA,4DAAS;QAC5C,+EAA0B;QAAA,sEAAS;QAAA,4DAAS;QAC5C,+EAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,+EAA0B;QAAA,sEAAS;QAAA,4DAAS;QAC5C,+EAA0B;QAAA,sEAAS;QAAA,4DAAS;QAC5C,+EAA4B;QAAA,wEAAW;QAAA,4DAAS;QAChD,+EAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,+EAA6B;QAAA,yEAAY;QAAA,4DAAS;QAClD,+EAAgC;QAAA,4EAAe;QAAA,4DAAS;QACxD,+EAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,+EAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,+EAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,+EAA0B;QAAA,sEAAS;QAAA,4DAAS;QAC5C,+EAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,+EAA0B;QAAA,sEAAS;QAAA,4DAAS;QAC5C,+EAA4B;QAAA,wEAAW;QAAA,4DAAS;QAChD,+EAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,+EAAsB;QAAA,kEAAK;QAAA,4DAAS;QACpC,+EAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,+EAAsB;QAAA,kEAAK;QAAA,4DAAS;QACpC,+EAAuB;QAAA,mEAAM;QAAA,4DAAS;QACtC,+EAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,+EAA0B;QAAA,sEAAS;QAAA,4DAAS;QAC5C,+EAAsB;QAAA,kEAAK;QAAA,4DAAS;QACpC,+EAA8B;QAAA,0EAAa;QAAA,4DAAS;QACpD,+EAA2B;QAAA,uEAAU;QAAA,4DAAS;QAC9C,+EAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,+EAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,+EAAmC;QAAA,+EAAkB;QAAA,4DAAS;QAC9D,+EAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,+EAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,+EAA0B;QAAA,sEAAS;QAAA,4DAAS;QAC5C,+EAAuB;QAAA,mEAAM;QAAA,4DAAS;QACtC,+EAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,+EAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,+EAAuB;QAAA,mEAAM;QAAA,4DAAS;QACtC,+EAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,+EAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,+EAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,+EAAuB;QAAA,mEAAM;QAAA,4DAAS;QACtC,+EAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,+EAAsB;QAAA,kEAAK;QAAA,4DAAS;QACpC,+EAA0B;QAAA,sEAAS;QAAA,4DAAS;QAC5C,+EAA2B;QAAA,uEAAU;QAAA,4DAAS;QAC9C,+EAAgC;QAAA,4EAAe;QAAA,4DAAS;QACxD,+EAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,+EAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,+EAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,+EAA8B;QAAA,0EAAa;QAAA,4DAAS;QACpD,+EAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,+EAA0B;QAAA,sEAAS;QAAA,4DAAS;QAC5C,gFAA0B;QAAA,sEAAS;QAAA,4DAAS;QAC5C,gFAAuB;QAAA,mEAAM;QAAA,4DAAS;QACtC,gFAA2B;QAAA,uEAAU;QAAA,4DAAS;QAC9C,gFAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,gFAAsB;QAAA,kEAAK;QAAA,4DAAS;QACpC,gFAAsB;QAAA,kEAAK;QAAA,4DAAS;QACpC,gFAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,gFAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,gFAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,gFAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,gFAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,gFAA0B;QAAA,sEAAS;QAAA,4DAAS;QAC5C,gFAA4B;QAAA,wEAAW;QAAA,4DAAS;QAChD,gFAAuB;QAAA,mEAAM;QAAA,4DAAS;QACtC,gFAAqC;QAAA,iFAAoB;QAAA,4DAAS;QAClE,gFAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,gFAAuB;QAAA,mEAAM;QAAA,4DAAS;QACtC,gFAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,gFAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,gFAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,gFAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,gFAAuB;QAAA,mEAAM;QAAA,4DAAS;QACtC,gFAAgC;QAAA,4EAAe;QAAA,4DAAS;QACxD,gFAA2B;QAAA,uEAAU;QAAA,4DAAS;QAC9C,gFAA6B;QAAA,yEAAY;QAAA,4DAAS;QAClD,gFAA2B;QAAA,uEAAU;QAAA,4DAAS;QAC9C,gFAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,gFAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,gFAA0B;QAAA,sEAAS;QAAA,4DAAS;QAC5C,gFAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,gFAAuB;QAAA,mEAAM;QAAA,4DAAS;QACtC,gFAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,gFAA4B;QAAA,wEAAW;QAAA,4DAAS;QAChD,gFAA4B;QAAA,wEAAW;QAAA,4DAAS;QAChD,gFAA0B;QAAA,sEAAS;QAAA,4DAAS;QAC5C,gFAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,gFAA4B;QAAA,wEAAW;QAAA,4DAAS;QAChD,gFAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,gFAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,gFAA0B;QAAA,sEAAS;QAAA,4DAAS;QAC5C,gFAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,gFAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,gFAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,gFAA2B;QAAA,uEAAU;QAAA,4DAAS;QAC9C,gFAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,gFAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,gFAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,gFAA8B;QAAA,0EAAa;QAAA,4DAAS;QACpD,gFAA2B;QAAA,uEAAU;QAAA,4DAAS;QAC9C,gFAA2B;QAAA,uEAAU;QAAA,4DAAS;QAC9C,gFAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,gFAA6B;QAAA,yEAAY;QAAA,4DAAS;QAClD,gFAA+B;QAAA,2EAAc;QAAA,4DAAS;QACtD,gFAA0B;QAAA,sEAAS;QAAA,4DAAS;QAC5C,gFAAsB;QAAA,kEAAK;QAAA,4DAAS;QACpC,gFAA0B;QAAA,sEAAS;QAAA,4DAAS;QAC5C,gFAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,gFAA2B;QAAA,uEAAU;QAAA,4DAAS;QAC9C,gFAAkC;QAAA,8EAAiB;QAAA,4DAAS;QAC5D,gFAA2B;QAAA,uEAAU;QAAA,4DAAS;QAC9C,gFAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,gFAAuB;QAAA,mEAAM;QAAA,4DAAS;QACtC,gFAA2B;QAAA,uEAAU;QAAA,4DAAS;QAC9C,gFAAuB;QAAA,mEAAM;QAAA,4DAAS;QACtC,gFAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,gFAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,gFAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,gFAA6B;QAAA,yEAAY;QAAA,4DAAS;QAClD,gFAA2B;QAAA,uEAAU;QAAA,4DAAS;QAC9C,gFAAuB;QAAA,mEAAM;QAAA,4DAAS;QACtC,gFAA6B;QAAA,yEAAY;QAAA,4DAAS;QAClD,gFAA2B;QAAA,uEAAU;QAAA,4DAAS;QAC9C,gFAAsB;QAAA,kEAAK;QAAA,4DAAS;QACpC,gFAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,gFAA2B;QAAA,uEAAU;QAAA,4DAAS;QAC9C,gFAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,gFAA4B;QAAA,wEAAW;QAAA,4DAAS;QAChD,gFAA+B;QAAA,2EAAc;QAAA,4DAAS;QACtD,gFAA4B;QAAA,wEAAW;QAAA,4DAAS;QAChD,gFAA0B;QAAA,sEAAS;QAAA,4DAAS;QAC5C,gFAA0B;QAAA,sEAAS;QAAA,4DAAS;QAC5C,gFAAiC;QAAA,6EAAgB;QAAA,4DAAS;QAC1D,gFAAuB;QAAA,mEAAM;QAAA,4DAAS;QACtC,gFAA8B;QAAA,0EAAa;QAAA,4DAAS;QACpD,gFAA6B;QAAA,yEAAY;QAAA,4DAAS;QAClD,gFAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,gFAA2B;QAAA,uEAAU;QAAA,4DAAS;QAC9C,gFAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,gFAA0B;QAAA,sEAAS;QAAA,4DAAS;QAC5C,gFAAsB;QAAA,kEAAK;QAAA,4DAAS;QACpC,gFAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,gFAAsB;QAAA,kEAAK;QAAA,4DAAS;QACpC,gFAAuB;QAAA,mEAAM;QAAA,4DAAS;QACtC,gFAA0B;QAAA,sEAAS;QAAA,4DAAS;QAC5C,gFAAsB;QAAA,kEAAK;QAAA,4DAAS;QACpC,gFAA0B;QAAA,sEAAS;QAAA,4DAAS;QAC5C,gFAAqB;QAAA,iEAAI;QAAA,4DAAS;QAClC,gFAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,gFAAuB;QAAA,mEAAM;QAAA,4DAAS;QACtC,gFAA0C;QAAA,sFAAyB;QAAA,4DAAS;QAC5E,gFAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,gFAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,gFAAyB;QAAA,qEAAQ;QAAA,4DAAS;QAC1C,gFAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,gFAA0B;QAAA,sEAAS;QAAA,4DAAS;QAC5C,gFAA0B;QAAA,sEAAS;QAAA,4DAAS;QAC5C,gFAA4B;QAAA,wEAAW;QAAA,4DAAS;QAChD,gFAA2B;QAAA,uEAAU;QAAA,4DAAS;QAC9C,gFAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,gFAA2B;QAAA,uEAAU;QAAA,4DAAS;QAEhC,4DAAS;QACT,oHAAyJ;QAE7J,4DAAM;QAKN,6EACI;QAAA,gFAA8C;QAAA,gEAAG;QAAA,4DAAS;QAC5D,4DAAM;QAGZ,4DAAO;QACP,4DAAM;QAEd,4DAAM;;QAzQQ,0DAAqB;QAArB,kFAAqB;QAKsE,0DAGzF;QAHyF,oSAGzF;QACwB,0DAAwH;QAAxH,8LAAwH;QAStH,0DAA+G;QAA/G,qLAA+G;QAQ/G,0DAAyG;QAAzG,+KAAyG;QACzG,0DAAwG;QAAxG,8KAAwG;QAatG,0DAA+G;QAA/G,qLAA+G;QAQjH,0DAAuG;QAAvG,6KAAuG;QA0MvG,4DAA8H;QAA9H,oMAA8H;;6FDnP3J,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAA2C;;;AAMpC,MAAM,gBAAgB;IAI3B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,uCAAuC,CAAC,CAAC;IAC7E,CAAC;IAED,YAAY,CAAC,SAAoB;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,uCAAuC,EAAE,SAAS,CAAC,CAAC;IAC5E,CAAC;IAED,eAAe,CAAC,GAAW;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,wCAAwC,GAAG,GAAG,CAAC,CAAC;IAC1E,CAAC;IAED,aAAa,CAAC,YAAuB,EAAE,GAAW;QAChD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,4CAA4C,GAAG,GAAG,EAAE,YAAY,CAAC,CAAC;IACzF,CAAC;;gFApBU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;6FAEP,gBAAgB;cAH5B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACoC;AACc;AACrB;AAClB;AACY;AAC0B;AACS;AAC7B;AACmB;;;AAGvG,MAAM,MAAM,GAAW;IACnB,QAAQ;IACR,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE;IACrD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,gGAAgB,EAAE,WAAW,EAAE,CAAC,8EAAS,CAAC,EAAE;IAC1E,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,0FAAc,EAAE,WAAW,EAAE,CAAC,8EAAS,CAAC,EAAE;IACtE,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,oHAAsB,EAAE;IACpD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,6HAAyB,EAAE;IAC1D,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,gGAAgB,EAAE,WAAW,EAAE,CAAC,8EAAS,CAAC,EAAE;IAC1E,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,oHAAqB,EAAE;IAChD,KAAK;IACP,+DAA+D;IAC/D,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,uGAAkB,EAAE;IACvD,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,qHAAsB,EAAE;CAC7D,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAC,EAAC,OAAO,EAAC,IAAI,EAAC,CAAC,CAAC;QAC5C,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAC,EAAC,OAAO,EAAC,IAAI,EAAC,CAAC,CAAC;gBACtD,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC/BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;;ICuClC,wEAA0G;IAAA,gEAAK;IAAA,4DAAI;;;;IAMnH,wEAA2I;IAApF,oRAAW,4BAAqB,IAAC;IAAmD,iEAAM;IAAA,4DAAI;;ADrCtJ,MAAM,YAAY;IAEvB,YAAmB,YAAkC;QAAlC,iBAAY,GAAZ,YAAY,CAAsB;QADrD,UAAK,GAAG,WAAW,CAAC;IACmC,CAAC;;wEAF7C,YAAY;4FAAZ,YAAY;QCUzB,yEAEE;QAAA,yEAEE;QAAA,yEACI;QAAA,4EAAuD;QAAA,uEAAiD;QAAA,yEAAc;QAAA,4DAAI;QAAA,4DAAS;QAErI,4DAAM;QAEZ,wEAEI;QAAA,qEACI;QAAA,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QACzB,4DAAK;QACL,sEAAK;QAAA,0EACG;QAAA,qEACR;QAAA,4DAAM;QACN,4DAAK;QACT,4DAAK;QACL,yEACI;QAAA,yEACI;QAAA,uGAA0G;QAC9G,4DAAK;QAIL,yEACI;QAAA,uGAA2I;QAC/I,4DAAK;QACT,4DAAK;QACL,4DAAM;QAGN,2EACA;QAAA,yEAAmE;QAAA,kEAAC;QAAA,4DAAI;QACxE,yEAA+D;QAAA,sEAAU;QAAA,4DAAI;QAC7E,yEAA6D;QAAA,iEAAK;QAAA,4DAAI;QACtE,yEAAgE;QAAA,uEAAW;QAAA,4DAAI;QAC/E,yEAAW;QAAA,mEAAO;QAAA,4DAAI;QACtB,4DAAM;QAKJ,4EAA+B;QACjC,4DAAM;;QAxBuB,2DAAkC;QAAlC,8FAAkC;QAMlC,0DAAiC;QAAjC,6FAAiC;;6FDrCjD,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACuB;AACT;AACC;AACT;AAC4B;AACI;AACZ;AACN;AAEiB;AACa;AACc;AAC9C;AAC+C;AAC/B;AACH;AACQ;AACd;AACmC;AACG;AACS;AAC7B;AACN;AACyB;AACnB;;AAqC7E,MAAM,SAAS;;wFAAT,SAAS,cAHR,2DAAY;4IAGb,SAAS,mBART,CAAC,wFAAgB,EAAE,0FAAkB,EAAC,qFAAe,EAAE,6FAAmB,EAAC,+EAAS;QAC7F,EAAC,OAAO,EAAE,sEAAiB;YAC3B,QAAQ,EAAG,kHAAuB;YACpC,KAAK,EAAG,IAAI,EAAC,CAAE,YAdN;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,kEAAmB;YACnB,qEAAgB;YAChB,4FAAuB;YACvB,gFAAmB;YACnB,0EAAmB;SAEpB;mIASU,SAAS,mBAjClB,2DAAY;QACZ,wGAAkB;QAClB,sHAAsB;QACtB,wEAAQ;QACR,uHAAuB;QACvB,2DAAY;QACZ,qHAAsB;QACtB,8HAAyB;QACzB,iGAAgB;QAChB,2FAAc;QACd,oHAAqB;QACrB,iGAAgB,aAIhB,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,kEAAmB;QACnB,qEAAgB;QAChB,4FAAuB;QACvB,gFAAmB;QACnB,0EAAmB;6FAWV,SAAS;cAnCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,wGAAkB;oBAClB,sHAAsB;oBACtB,wEAAQ;oBACR,uHAAuB;oBACvB,2DAAY;oBACZ,qHAAsB;oBACtB,8HAAyB;oBACzB,iGAAgB;oBAChB,2FAAc;oBACd,oHAAqB;oBACrB,iGAAgB;iBAEjB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;oBACX,kEAAmB;oBACnB,qEAAgB;oBAChB,4FAAuB;oBACvB,gFAAmB;oBACnB,0EAAmB;iBAEpB;gBACD,SAAS,EAAE,CAAC,wFAAgB,EAAE,0FAAkB,EAAC,qFAAe,EAAE,6FAAmB,EAAC,+EAAS;oBAC7F,EAAC,OAAO,EAAE,sEAAiB;wBAC3B,QAAQ,EAAG,kHAAuB;wBACpC,KAAK,EAAG,IAAI,EAAC,CAAE;gBAEf,SAAS,EAAE,CAAC,2DAAY,CAAC;gBACzB,OAAO,EAAE,CAAC,oEAAsB,CAAC;aAClC;;;;;;;;;;;;;;AC9DD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, Input } from '@angular/core';\r\n\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Booking } from '../../Models/booking';\r\n\r\nimport { BookingDataService } from '../../Services/booking-data.service';\r\nimport { Flight } from 'src/app/Flights/Models/flight';\r\n\r\n\r\n@Component({\r\n  selector: 'app-booking-deatils',\r\n  templateUrl: './booking-deatils.component.html',\r\n  styleUrls: ['./booking-deatils.component.css']\r\n})\r\nexport class BookingDeatilsComponent implements OnInit {\r\n  showFlightDetails: boolean = true;\r\n  showBookingContent: boolean = true;\r\n  showBookingDetails: boolean = true;\r\n\r\n  // pipe \r\n  //@Input() today;\r\n  //properties\r\n  bookings: Booking[];\r\n  flights : Flight[];\r\n  //create property for reactive form\r\n  newForm: FormGroup;\r\n  newFlightForm: FormGroup;\r\n \r\n\r\n  //constructor\r\n  constructor(private bookingsService: BookingDataService) {\r\n    this.bookings = [];\r\n    this.flights = [];\r\n   \r\n    // reactive form \r\n    this.newFlightForm = new FormGroup({\r\n      \r\n      FlightId: new FormControl(100,[Validators.required]),\r\n      FlightName: new FormControl(\"FC\"),\r\n      Source: new FormControl(\"DEL\", [Validators.required]),\r\n      Destination: new FormControl(\"JAI\", [Validators.required]),\r\n      DepartureTime: new FormControl(\"2020-05-18T18:30:00.000Z\"),\r\n      ArrivalTime: new FormControl(\"2020-05-18T18:30:00.000Z\",[Validators.required]),\r\n      NoOfSeats: new FormControl(1,[Validators.max(5), Validators.min(1)]),\r\n      BaggageLimit: new FormControl(50),\r\n      AvailableSeats: new FormControl(10),\r\n      \r\n    });\r\n\r\n    //reactive form\r\n    this.newForm = new FormGroup({\r\n      \r\n      FlightId: new FormControl(100,[Validators.required]),\r\n      Class: new FormControl(\"FC\"),\r\n      Source: new FormControl(\"DEL\", [Validators.required]),\r\n      Destination: new FormControl(\"JAI\", [Validators.required]),\r\n      DateOfBooking: new FormControl(\"2020-05-18T18:30:00.000Z\"),\r\n      DateOfJourney: new FormControl(\"2020-05-18T18:30:00.000Z\",[Validators.required]),\r\n      NoOfSeats: new FormControl(1,[Validators.max(5), Validators.min(1)]),\r\n      TicketFare: new FormControl(5000),\r\n      CustomerId: new FormControl(100),\r\n      \r\n    });\r\n\r\n\r\n  }\r\n  \r\n  ngOnInit() {\r\n    \r\n   \r\n  }\r\n\r\n  // Directive for showing after button click after search \r\n  // public showFlightDetails:boolean = false;\r\n  // public buttonName:any = 'Show';\r\n  toggleSearch()\r\n  { \r\n\r\n    // CHANGE THE Button\r\n    if(this.showFlightDetails)  \r\n        {this.onSearchClick();\r\n      console.log(\"Search Clicked\");\r\n        }\r\n    else\r\n     console.log(\"Search Clicked Else Part\");    \r\n\r\n  }\r\n\r\n  // Directive for showing after button click after booking\r\n  toggleBooking()\r\n  { \r\n\r\n    // CHANGE THE Button\r\n    if(this.showBookingDetails)  \r\n        {this.onSubmitClick();\r\n      console.log(\"Submit Clicked\");\r\n        }\r\n    else\r\n     console.log(\"Submit Clicked Else Part\");    \r\n\r\n  }\r\n  \r\n\r\n  // Search Flight by id\r\n  onSearchClick()\r\n  {\r\n    console.log(\" Part\");\r\n    if (this.newForm.valid == true) {\r\n      //this.bookingsService.searchFlightsToDatabase(this.newFlightForm.value.FlightId)\r\n      this.bookingsService.searchFlightsByDestination(this.newFlightForm.value.Destination)\r\n      .subscribe(\r\n        error => console.log(error),\r\n        data => console.log(data))\r\n        ;\r\n      //clear textboxes//\r\n      this.newForm.reset();\r\n    }\r\n    else {\r\n      console.log(\"Invalid data\");\r\n    }\r\n\r\n  }\r\n  \r\n  onSubmitClick() {\r\n    if (this.newForm.valid == true) {\r\n      //accessing value of any form control (textbox etc.)\r\n      console.log(\r\n        \"Source : \" + this.newForm.value.Source +'\\n' + \r\n        \"Destination : \" + this.newForm.value.Destination +'\\n' +\r\n        \"Date Of Booking : \" + this.newForm.value.DateOfBooking +'\\n' +\r\n        \"Date of Joining : \" + this.newForm.value.DateOfJourney +'\\n' +\r\n        \"No of Seats : \" + this.newForm.value.NoOfSeats);\r\n\r\n\r\n      this.bookingsService.postBookingsToDatabase(this.newForm.value).subscribe(\r\n        error => console.log(error),\r\n        data => console.log(data))\r\n        ;\r\n      //clear textboxes\r\n      this.newForm.reset();\r\n    }\r\n    else {\r\n      console.log(\"Invalid data\");\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n \r\n  <!-- flight Bookings are shown here  -->\r\n\r\n  \r\n  <ng-container  *ngIf=\"showBookingDetails\">\r\n    <div class=\"col-md-12 text-blue \">\r\n      <h2 class=\"border-bottom pb-2 mb-2\">Book Your Flight with us</h2>\r\n\r\n      <form [formGroup]=\"newForm\">\r\n\r\n        <div class=\"form-group form-row \">\r\n          <label for=\"source\" class=\"col-md-3 col-form-label\">Flying From:</label>\r\n          <label for=\"destination\" class=\"col-md-3 col-form-label\">Flying To:</label>\r\n          <label for=\"deptDatepicker\" class=\"col-md-2 col-form-label\">Date of Journey :</label>\r\n          <label for=\"class\" class=\"col-md-2 col-form-label\">Class:</label>\r\n          <label for=\"noOfSeats\" class=\"col-md-2 col-form-label\">Travellers:</label>\r\n        </div>\r\n\r\n        <div class=\"form-group form-row \">\r\n          <div class=\"col-md-3\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Flying from\" name=\"Source\" formControlName=\"Source\"\r\n              [ngClass]=\"{\r\n                  'is-valid': newForm.get('Source').valid && newForm.get('Source').touched,\r\n                  'is-invalid': newForm.get('Source').invalid && newForm.get('Source').touched\r\n                }\">\r\n\r\n            <span class=\"text-danger\"\r\n              *ngIf=\"newForm.get('Source').invalid && newForm.get('Source').touched && newForm.get('Source').errors.required\">\r\n              Please Enter your location </span>\r\n          </div>\r\n\r\n          <div class=\"col-md-3\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Destination \" name=\"destination\"\r\n              formControlName=\"Destination\" [ngClass]=\"{\r\n                  'is-valid': newForm.get('Destination').valid && newForm.get('Destination').touched,\r\n                  'is-invalid': newForm.get('Destination').invalid && newForm.get('Destination').touched               \r\n                }\">\r\n            <span class=\"text-danger\"\r\n              *ngIf=\"newForm.get('Destination').invalid && newForm.get('Destination').touched && newForm.get('Destination').errors.required\">\r\n              Please Enter your Destination .\r\n            </span>\r\n          </div>\r\n          <div class=\"col-md-2\">\r\n            <input matInput [matDatepicker]=\"deptDatepicker\" formControlName=\"DateOfJourney\" class=\"form-control\"\r\n              [ngClass]=\"{\r\n            'is-valid': newForm.get('DateOfJourney').valid && newForm.get('DateOfJourney').touched,\r\n            'is-invalid': newForm.get('DateOfJourney').invalid && newForm.get('DateOfJourney').touched\r\n          }\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"deptDatepicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #deptDatepicker></mat-datepicker>\r\n            <span class=\"text-danger\"\r\n              *ngIf=\"newForm.get('DateOfJourney').invalid && newForm.get('DateOfJourney').touched && newForm.get('DateOfJourney').errors.required\">\r\n              Please Enter your DateOfJourney </span>\r\n          </div>\r\n          <div class=\"col-md-2\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Enter Class \" name=\"class\" formControlName=\"Class\"\r\n              [ngClass]=\"{\r\n            'is-valid': newForm.get('Class').valid && newForm.get('Class').touched,\r\n            'is-invalid': newForm.get('Class').invalid && newForm.get('Class').touched\r\n          }\">\r\n            <span class=\"text-danger\"\r\n              *ngIf=\"newForm.get('Class').invalid && newForm.get('Class').touched && newForm.get('Class').errors.required\">\r\n              Please Enter Class </span>\r\n          </div>\r\n\r\n          <div class=\"col-md-2\">\r\n            <input type=\"number\" min=\"0\" class=\"form-control\" placeholder=\"No of Seats \" name=\"noOfSeats\"\r\n              formControlName=\"NoOfSeats\" [ngClass]=\"{\r\n              'is-valid': newForm.get('NoOfSeats').valid && newForm.get('NoOfSeats').touched,\r\n              'is-invalid': newForm.get('NoOfSeats').invalid && newForm.get('NoOfSeats').touched \r\n            }\">\r\n            <span class=\"noOfSeats\"\r\n              *ngIf=\"newForm.get('NoOfSeats').invalid && newForm.get('NoOfSeats').touched && newForm.get('NoOfSeats').errors.required\">\r\n              Please Enter b/w 1-5 </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group form-row\">\r\n          <!-- <div class=\"text-center col-md-3\">\r\n          <button class=\"btn btn-blue text-white\" (click)=\"onSearchClick()\">Search</button>\r\n        </div> -->\r\n          <div class=\"text-center col-md-3\">\r\n            <button class=\"btn btn-blue text-white\" (click)=\"toggleBooking()\">Confirm Booking</button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {{this.newForm.value | json}}\r\n        </div>\r\n\r\n        <!-- is-valid    : green\r\n            is-invalid : red -->\r\n\r\n\r\n      </form>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"showBookingDetails\">\r\n    <div class=\"col-md-12 text-blue \">\r\n      <h2 class=\"border-bottom pb-2 mb-2\">Booking Deatails are </h2>\r\n      <div>\r\n        Data\r\n      </div>\r\n      <div>\r\n        <div> Flying from : {{newForm.value.Source}} </div>\r\n        <div> Flying To : {{newForm.value.Destination}} </div>\r\n        <div> Date Of Journey : {{newForm.value.DateOfJourney}} </div>\r\n        <div> Class : {{newForm.value.Class}} </div>\r\n        <div> No of Travellers : {{newForm.value.NoOfSeats}} </div>\r\n                \r\n      </div>\r\n\r\n    </div>\r\n\r\n  </ng-container>\r\n\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators'\r\nimport { throwError, Observable } from 'rxjs'\r\nimport { Booking } from '../Models/booking';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BookingDataService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  apiPrefix: string = \"http://localhost:53981/\";\r\n\r\n  //Search by flight name\r\n  searchFlightsByDestination(Destination: string): Observable<any> {\r\n    //return this.httpClient.get(this.apiPrefix + `api/bookings?Source=${Source}&Destination=${Destination}`).pipe(catchError(this.errorHandler));\r\n    return this.httpClient.get(this.apiPrefix + `api/Flights?Destination=${Destination}`).pipe(catchError(this.errorHandler));\r\n\r\n  }\r\n  //Search by flight id \r\n  searchFlightsToDatabase(FlightId: number): Observable<any> {\r\n    //return this.httpClient.get(this.apiPrefix + `api/bookings?Source=${Source}&Destination=${Destination}`).pipe(catchError(this.errorHandler));\r\n    return this.httpClient.get(this.apiPrefix + `api/Flights?FlightId=${FlightId}`).pipe(catchError(this.errorHandler));\r\n\r\n  }\r\n  // post Bookings To Database\r\n  postBookingsToDatabase(bookings: Booking) {\r\n    return this.httpClient.post<Booking>(this.apiPrefix + `api/bookings`, bookings).pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n  errorHandler(error: HttpErrorResponse) {\r\n    return throwError(error.status)\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'safe'\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n\r\n  transform(value: unknown, ...args: unknown[]): unknown {\r\n    return null;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\nimport { error } from 'protractor';\nimport { Router } from '@angular/router';\nimport { Customer } from '../../Models/Customer';\nimport { RegisterService } from '../../Services/Register.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  customerList : Customer[];\n\n  isAdmin : boolean = false;\n\n  constructor(private register : RegisterService,private router : Router) {\n    this.customerList= [];\n   }\n\n  ngOnInit(): void {\n  \n    this.register.GetCustomer().subscribe(\n      res => {this.isAdmin = true;console.log(\"user is admin\");this.customerList = res},\n      error => {console.log(error);this.router.navigate(['/booking']);window.alert(\"Only For Admin\");}\n    )\n  }\n\n}\n","<p>admin works!</p>\n\n<div *ngIf = \"isAdmin\">\n    <table class=\"table\">\n        <thead>\n            <th>Name</th>\n            <th>Email</th>\n        </thead>\n        <tbody>\n            <div *ngFor = \"let customer of customerList\">\n                <td>{{customer.Name}}</td>\n                <td>{{customer.Email}}</td>\n            </div>\n        </tbody>\n    </table>\n</div>\n<div  *ngIf = \"!isAdmin\">\n<div *ngIf = \"!isAdmin\">\n   <h1 class=\"text-center mt-5\">Only For Admin User</h1> \n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-booking',\n  templateUrl: './booking.component.html',\n  styleUrls: ['./booking.component.css']\n})\nexport class BookingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  \n\n}\n","<p>booking works!</p>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { AuthenticateService } from '../../Services/Authenticate.service';\nimport { User } from '../../Models/User';\n\n@Component({\n  selector: 'app-login-customer',\n  templateUrl: './login-customer.component.html',\n  styleUrls: ['./login-customer.component.css']\n})\nexport class LoginCustomerComponent implements OnInit {\n\n  constructor(private authenticate : AuthenticateService, private router : Router) { }\n  token = \"\";\n\n  ngOnInit(): void {\n  }\n  UserCred:User = new User();\n\n  onLogin()\n  {\n    \n    this.authenticate.AuthenticateUser(this.UserCred).subscribe(\n     \n      res => {\n        localStorage.setItem(\"token\",res)\n        console.log(res)\n        this.router.navigate(['/booking']);\n\n      },\n      error => {\n        window.alert(\"Wrong User Credentials\");\n        console.log(error)\n      }\n    )\n  }\n\n\n\n\n\n\n}\n","<!-- <nav class=\"navbar navbar-expand-sm bg-secondary navbar-dark\">\n\n    <ul class=\"navbar-nav mx-auto\">\n        <li>\n            <h1>OARS Airline</h1>\n        </li>\n        <li> <a class=\"navbar-brand\" href=\"#\">\n                <img style='height: 50px;width: 80px;' src=\"\\assets\\Images\\Airline.png\" alt=\"Airline\">\n            </a>\n        </li>\n    </ul>\n    <ul class=\"navbar-nav float-left\">\n        <li class=\"nav-item active \">\n            <a class=\"nav-link \"  routerLink = '/login' routerLinkActive = 'Active'>Login</a>\n        </li>\n        <li class=\"nav-item active \">\n            <a class=\"nav-link \"  routerLink = '/booking' routerLinkActive = 'Active'>Book Ticket</a>\n        </li>\n    </ul>\n</nav> -->\n<div class=\"row \" style=\"margin: 100px;\">\n    <div class=\"column mx-auto\">\n        <div class=\"card border-primary shadow bg-white\">\n            <div class=\"card header \">\n                <img class=\"card-img-top w-25 h-25  mx-auto\" src=\"/assets/images/User.jpg\" alt=\"User\">\n            </div>\n            <div class=\"card-body\">\n                <form #userform='ngForm'>\n                    <h4 class=\"text-center \">Login</h4>\n                    <div class=\"form-group\">\n\n                        <label for=\"email\">Email:</label>\n                        <input class=\"form-control \" name=\"email\" #email='ngModel' type=\"text\"\n                            pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" placeholder=\"exmaple123@gmail.com\"\n                            [class.is-invalid]=\"email.invalid && email.touched\" required [(ngModel)]='UserCred.Email'>\n                        <!-- <small class=\"text-danger\" [class.d-none]=\"email.untouched || email.valid\">Invalid\n                            Username</small> -->\n                        <div *ngIf=\"email.errors && email.touched\">\n                            <small class=\"text-danger\" *ngIf=\"email.errors.pattern\">pattern is wrong</small>\n                            <small class=\"text-danger\" *ngIf=\"email.errors.required\">email is required</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"password\">Password</label>\n                        <input class=\"form-control\" name=\"password\" #password=\"ngModel\" type=\"password\"\n                            [class.is-invalid]=\"password.invalid && password.touched\" required\n                            [(ngModel)]='UserCred.Password'>\n                        <small class=\"text-danger\" [class.d-none]=\"password.valid || password.untouched\">Invalid\n                            password</small>\n                    </div>\n\n                    <button [disabled]=\"userform.form.invalid\" type=\"submit\" class=\" btn btn-primary mx-auto\" (click) = \"onLogin()\">Login</button>\n\n                </form>\n            </div>\n            <div class=\"crad-footer  bg-secondary\">\n                <h6 class=\"text-center\" style=\"color: aliceblue;\">New User? <a  routerLink = '/Register' routerLinkActive = 'Active'>SignUp</a></h6>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"text-center\">404</h1>\n<h1 class=\"text-center\">PageNotFOUND</h1>\n","import { Component, OnInit } from '@angular/core';\n\n\nimport { Router } from '@angular/router';\nimport { strict } from 'assert';\nimport { Customer } from '../../Models/Customer';\nimport { RegisterService } from '../../Services/Register.service';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  id:number ;\n  \n\n\n  customerModel: Customer = new Customer();\n  constructor(private custservice: RegisterService , private router : Router ) { \n    this.id = 100;\n  }\n\n\n\n  ngOnInit(): void {\n    this.custservice.GetCustomerById(this.id).subscribe(\n      req => { this.customerModel = req ;},\n      error => {console.log(error)}\n      )\n\n  }\n\n  \n  UpdateCust() {\n\n    this.custservice.UpdateCustmomer(this.id,this.customerModel)\n      .subscribe(\n        \n        req => { console.log(req) ; window.alert(\"Customer Updated\")},\n        error => {console.log(error) ;}\n         \n      )\n  }\n\n  DeleteCust(){\n    this.custservice.DeleteCustomer(this.id).subscribe(\n      req => {console.log(req) ;  window.alert(\"Customer Deleted\")},\n      error => console.log(error)\n      \n    )\n  }\n\n\n}\n","<div class=\"container-fluid \">\n{{customerModel | json}}\n    <div class=\"row\">\n        <!-- {{customerModel | json}} -->\n        <div class=\" card mx-auto w-75 rounded-lg border border-success shadow  border-top-0 mt-1 mb-3\">\n\n            <div class=\"row\">\n                            <div class=\"col card-body w-50  \">\n\n\n                <form #userform=\"ngForm\" novalidate (ngSubmit)=UpdateCust()>\n\n                    <div class=\"form-group\">\n                        <label for=\"name\">Name:</label>\n                        <input type=\"text\" name=\"name\" #name=\"ngModel\" class=\"form-control\"\n                            [class.is-invalid]=\"name.invalid && name.touched\" required [(ngModel)]=\"customerModel.Name\">\n                        <small class=\"text-danger\" [class.d-none]=\"name.valid || name.untouched\">invalid\n                            Name</small>\n                    </div>\n\n\n                    <div class=\"form-group\">\n                        <label class=\"mt-2\" for=\"email\">Email:</label>\n                        <input disabled type=\"text\" name=\"email\" pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                            #email=\"ngModel\" class=\"form-control\" [class.is-invalid]=\"email.invalid && email.touched\"\n                            required [(ngModel)]=\"customerModel.Email\">\n                        <div *ngIf=\"email.errors && email.touched\">\n                            <small class=\"text-danger\" *ngIf=\"email.errors.pattern\">pattern is wrong</small>\n                            <small class=\"text-danger\" *ngIf=\"email.errors.required\">email is required</small>\n                        </div>\n                    </div>\n\n\n                    <div class=\"form-group\">\n                        <label class=\"mt-2\" for=\"password\">Password:</label>\n                        <input type=\"password\" name=\"password\" #password=\"ngModel\" class=\"form-control\"\n                            [class.is-invalid]=\"password.invalid && password.touched\" required\n                            [(ngModel)]=\"customerModel.Pwd\">\n                        <small class=\"text-danger\" [class.d-none]=\"password.valid || password.untouched\">invalid\n                            Password</small>\n                    </div>\n\n\n                    <div class=\"form-group\">\n                        <label class=\"mt-2\" for=\"dob\">DateOfBirth:</label>\n                        <input type=\"date\" name=\"dob\"  #dob=\"ngModel\" class=\"form-control\"\n                            [class.is-invalid]=\"dob.invalid && dob.touched\" required [(ngModel)]=\"customerModel.DOB \">\n                        <small class=\"text-danger\" [class.d-none]=\"dob.valid || dob.untouched\">invalid             \n                            Dateofbirth</small>\n                    </div>\n\n\n                    <div class=\"form-group\">\n                        <label class=\"mt-2\" for=\"balance\">WalletBalance:</label>\n                        <input type=\"number\" name=\"balance\" #balance=\"ngModel\" pattern=\"^[1-9]\\d*$\" class=\"form-control\"\n                            [class.is-invalid]=\"balance.invalid && balance.touched\" required\n                            [(ngModel)]=\"customerModel.WalletBalance\">\n                        <small class=\"text-danger\" [class.d-none]=\"balance.valid || balance.untouched\">invalid\n                            Amount</small>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"mt-2\" for=\"phoneno\">Phone No:</label>\n                        <input type=\"number\" name=\"phoneno\" #phoneno=\"ngModel\" pattern=\"^[1-9]\\d*$\" class=\"form-control\"\n                            [class.is-invalid]=\"phoneno.invalid && phoneno.touched\" required\n                            [(ngModel)]=\"customerModel.PhoneNo\">\n                        <small class=\"text-danger\" [class.d-none]=\"phoneno.valid || phoneno.untouched\">invalid\n                            phoneno</small>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"mt-2\" for=\"address\">Address:</label>\n                        <input type=\"text\" name=\"address\" #address=\"ngModel\" class=\"form-control\"\n                            [class.is-invalid]=\"address.invalid && address.touched\" required\n                            [(ngModel)]=\"customerModel.ResidingAddress\">\n                        <small class=\"text-danger\" [class.d-none]=\"address.valid || address.untouched\">invalid\n                            Address</small>\n                    </div>\n\n                    <div class=\" mx-auto\" style=\"width: 300px;\">\n                        <button type=\"submit\" [disabled]=\"userform.form.invalid \" class=\"btn btn-primary\">Update\n                            Account</button>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col\">\n                <h1  class=\"mt-5 ml-3\">My Profile</h1>\n                <img class=\"pt-4\" src=\"assets\\Images\\User.jpg\" alt=\"profile\">\n                <button style=\"margin-top: 200px;margin-left: 40px;\" class=\"btn btn-primary \">Delete Account</button>\n            \n        </div>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { error } from 'protractor';\nimport { Route } from '@angular/compiler/src/core';\nimport { Router } from '@angular/router';\nimport { Customer } from '../../Models/Customer';\nimport { RegisterService } from '../../Services/Register.service';\n\n@Component({\n  selector: 'app-register-customer',\n  templateUrl: './register-customer.component.html',\n  styleUrls: ['./register-customer.component.css']\n})\nexport class RegisterCustomerComponent implements OnInit {\n  public EmailAlreadyExists: boolean = false;\n  Registered: boolean = false;\n  customerModel: Customer = new Customer();\n  constructor(private custservice: RegisterService , private router : Router ) { }\n\n\n\n  ngOnInit(): void {\n  }\n\n  CreateCust() {\n\n    this.custservice.AddCustomer(this.customerModel)\n      .subscribe(\n        \n        data => { \n          \n          if(data == 409){window.alert('Email Already Exists')};\n          if(data == 201){this.Registered = true;window.alert('User Account Created')};\n           console.log(\"Success\",data) \n\n        },error => {console.log(error)  }\n         \n      )\n\n      if(this.Registered){\n        this.router.navigate(['login']);\n      }\n  }\n\n\n}\n\n\n\n\n\n","<!-- <nav class=\"navbar navbar-expand-sm bg-secondary navbar-dark\">\n\n    <ul class=\"navbar-nav mx-auto\">\n        <li>\n            <h1>OARS Airline</h1>\n        </li>\n        <li> <a class=\"navbar-brand\" href=\"#\">\n                <img style='height: 50px;width: 80px;' src=\"\\assets\\Images\\Airline.png\" alt=\"Airline\">\n            </a>\n        </li>\n    </ul>\n    <ul class=\"navbar-nav float-left\">\n        <li class=\"nav-item active \">\n            <a class=\"nav-link \"  routerLink = '/login' routerLinkActive = 'Active'>Login</a>\n        </li>\n\n    </ul>\n</nav> -->\n<div class=\"container-fluid \" >\n    \n       <!-- {{customerModel | json}} -->\n       <div  class=\" card mx-auto w-50  rounded-lg border border-success shadow  border-top-0 mt-1 mb-3\">\n           <div class=\"card-header bg-primary\">\n               <h1>Create Account</h1>\n           </div>\n           \n           <div class=\"card-body  \">\n<form #userform = \"ngForm\" novalidate (ngSubmit)=CreateCust() >\n    \n    <div class=\"form-group\">\n        <label for=\"name\">Name:</label>\n        <input type=\"text\" name=\"name\" #name = \"ngModel\" class=\"form-control form-control-sm\"  [class.is-invalid] = \"name.invalid && name.touched\" required [(ngModel)] = \"customerModel.Name\">\n        <small class=\"text-danger\" [class.d-none] = \"name.valid || name.untouched\">invalid Name</small>\n    </div>\n\n\n    <div class=\"form-group\">\n        <label class=\"mt-1\"  for=\"email\">Email:</label>\n        <input type=\"text\" name=\"email\"  pattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"  #email = \"ngModel\" class=\"form-control form-control-sm\"  [class.is-invalid] = \"email.invalid && email.touched\" required [(ngModel)] = \"customerModel.Email\">\n        <div *ngIf = \"email.errors && email.touched\">\n            <small class=\"text-danger\" *ngIf = \"email.errors.pattern\">pattern is wrong</small> \n            <small class=\"text-danger\" *ngIf = \"email.errors.required\">email is required</small>\n        </div>\n    </div>\n\n\n    <div class=\"form-group\">\n        <label class=\"mt-1\"  for=\"password\">Password:</label>\n         <input type=\"password\" name=\"password\" #password = \"ngModel\" class=\"form-control form-control-sm\"  [class.is-invalid] = \"password.invalid && password.touched\" required [(ngModel)] = \"customerModel.Pwd\">\n        <small class=\"text-danger\" [class.d-none] = \"password.valid || password.untouched\">invalid Password</small>\n    </div>\n\n \n       <div class=\"form-group\">\n        <label class=\"mt-1\" for=\"dob\">DateOfBirth:</label>\n        <input type=\"date\" name=\"dob\" #dob = \"ngModel\" class=\"form-control form-control-sm\"  [class.is-invalid] = \"dob.invalid && dob.touched\" required [(ngModel)] = \"customerModel.DOB\">\n        <small class=\"text-danger\" [class.d-none] = \"dob.valid || dob.untouched\">invalid Dateofbirth</small>\n    </div>\n\n\n        <div class=\"form-group\">\n        <label class=\"mt-2\" for=\"balance\">WalletBalance:</label>\n        <input type=\"number\" name=\"balance\" #balance = \"ngModel\" pattern = \"^[1-9]\\d*$\" class=\"form-control form-control-sm\"  [class.is-invalid] = \"balance.invalid && balance.touched\" required [(ngModel)] = \"customerModel.WalletBalance\">\n        <small class=\"text-danger\" [class.d-none] = \"balance.valid || balance.untouched\">invalid Amount</small>\n    </div>\n\n    <div class=\"form-group\">\n        <label class=\"mt-2\" for=\"address\">Address:</label>\n        <input type=\"text\" name=\"address\" #address = \"ngModel\" class=\"form-control form-control-sm\"  [class.is-invalid] = \"address.invalid && address.touched\" required [(ngModel)] = \"customerModel.ResidingAddress\">\n        <small class=\"text-danger\" [class.d-none] = \"address.valid || address.untouched\">invalid Address</small>\n    </div>\n\n    <div class=\"form-group\">\n        <label class=\"mt-2\" for=\"phoneno\">Phone No:</label>\n        <input type=\"number\" name=\"phoneno\" #phoneno = \"ngModel\"  class=\"form-control form-control-sm\"  [class.is-invalid] = \"phoneno.invalid && phoneno.touched\" required [(ngModel)] = \"customerModel.PhoneNo\">\n        <small class=\"text-danger\" [class.d-none] = \"phoneno.valid || phoneno.untouched\">invalid Phone No</small>\n    </div>\n\n    <div class=\" mx-auto\" style=\"width: 300px;\">\n        <button type=\"submit\" [disabled]=\"userform.form.invalid \" class=\"btn btn-primary\" >Create Account</button>\n    </div>\n</form>\n\n</div>\n</div> \n</div>\n\n","\r\n\r\nexport class Customer\r\n{\r\n    constructor(\r\n        public Name:string = '',\r\n        public Email:string = '',\r\n        public Pwd:string = '',\r\n        public DOB:Date = null,\r\n        public WalletBalance:number = null,\r\n        public ResidingAddress :string = '',\r\n        public PhoneNo :number = null\r\n    ){}\r\n}\r\n\r\n","export class User\r\n{\r\n\r\n    constructor(\r\n        public Email:string = '' ,\r\n        public Password:string = ''\r\n        \r\n    )\r\n    {}\r\n}","import { Injectable } from '@angular/core';\n\nimport {  HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport {catchError} from \"rxjs/operators\"\nimport {throwError} from \"rxjs\"\nimport { Router } from '@angular/router';\nimport { User } from '../Models/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticateService {\n\n  url :string = 'http://localhost:53981/api/Authenticate';\n\n  constructor(private http : HttpClient ,private router : Router) { }\n\n\n    AuthenticateUser(user : User)\n    {\n       return this.http.post<any>(this.url,user).pipe(catchError(this.errorHandler))\n    }\n\n    errorHandler(error:HttpErrorResponse)\n    {\n      return throwError(error)\n    }\n//isLoggedin\n    Loggedin(){\n      return !!(localStorage.getItem('token') )\n      \n    }\n\n    getToken(){\n      return localStorage.getItem('token');\n    }\n\n    Logout(){\n      localStorage.removeItem('token');\n      this.router.navigate(['/login']);\n\n    }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router} from '@angular/router';\nimport { AuthenticateService } from '../Authenticate.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authenticate : AuthenticateService, private router : Router){}\n  canActivate():boolean{\n    if(this.authenticate.Loggedin()){return true}\n    else{\n      this.router.navigate(['/login']);\n      return false;\n\n    }\n  }\n \n}\n  \n\n","import { Injectable ,Injector} from '@angular/core';\nimport { HttpInterceptor } from \"@angular/common/http\"\nimport { AuthenticateService } from '../Authenticate.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private injector : Injector) { }\n \n  intercept(req, next) {\n    let authService = this.injector.get(AuthenticateService)\n    let modifiedReq = req.clone(\n      {\n        setHeaders: {\n          Authorization: `Bearer ${authService.getToken()}`\n        }\n      }\n    )\n    \n    return next.handle(modifiedReq);\n\n  }\n}\n","import { Injectable, ErrorHandler } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http'\n\nimport { catchError } from 'rxjs/operators'\nimport { throwError } from 'rxjs';\nimport { Customer } from '../Models/Customer';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n//registerservice\nexport class RegisterService {\n  // urlfake = 'http://localhost:53981/api/Customers/GetCustomerByname'\n\n  url: string = 'http://localhost:53981//api/Customers';\n\n  constructor(private http: HttpClient) { }\n\n  //Create Customer\n  AddCustomer(customer: Customer) {\n\n    return this.http.post<any>(this.url, customer).pipe(catchError(this.errorHandler))\n  }\n\n  //Get Customer\n  GetCustomer() {\n    return this.http.get<any>(this.url).pipe(catchError(this.errorHandler))\n  }\n  \n  //Get Customer By Id\n  GetCustomerById(id: number) {\n    return this.http.get<any>(this.url + `/${id}`).pipe(catchError(this.errorHandler))\n  }\n\n  //update Customer\n  UpdateCustmomer(id: number, customer: Customer) {\n    return this.http.put<any>(this.url + `/${id}`, customer).pipe(catchError(this.errorHandler))\n  }\n\n  //Delete Customer\n  DeleteCustomer(id: number) {\n    return this.http.delete<any>(this.url + `/${id}`).pipe(catchError(this.errorHandler))\n\n  }\n  \n  //method to get Customer by Email\n\n  // getCustomerByName(name:string)\n  // { \n  //   // const options = name ?{ params: new HttpParams().set('name', name) } : {};\n  //   const httpOptions = {\n  //     headers: new HttpHeaders({\n\n  //       'name': '${this.name}'\n  //     })\n  //   };\n  //   return this.http.get<any>(this.urlfake,httpOptions).pipe(catchError(this.errorHandler))\n  // }\n\n  //method to handle errors\n  errorHandler(error: HttpErrorResponse) {\n    return throwError(error.status);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { Passenger } from '../../Models/passenger.model';\r\nimport { PassengerService } from '../../Services/passenger.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-passenger-list',\r\n  templateUrl: './passenger-list.component.html',\r\n  styleUrls: ['./passenger-list.component.css']\r\n})\r\nexport class PassengerListComponent implements OnInit {\r\n  passengerList: Passenger[];\r\n\r\n  constructor( private service:PassengerService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.service.getPassenger().subscribe((passengerDetail: Passenger[]) => {\r\n      this.passengerList = passengerDetail;\r\n    });\r\n    // this.passengerDetails = this.service.passengerDetails;\r\n    // console.log('TEST' + this.passengerDetails['PassengerId']);\r\n    // console.log('TEST1' + this.passengerDetails.PassengerId);\r\n  }\r\n \r\n\r\n //on edit the passengers\r\n  onEditClick(){\r\n   // this.service.editPassenger(PassengerId).subscribe(passengerDetail:passenger[]=>{ console.log(this.passengerDetails['PassengerId']);});\r\n  }\r\n\r\n//on delete the passengers\r\n  onDeleteClick(){}\r\n\r\n}\r\n","<div class=\"jumbtron\">\r\n<h1 class=\"display-4 text-center\"> Passengers  </h1>\r\n\r\n\r\n<div class=\"col-lg-6\">\r\n<table class=\"table\">\r\n\r\n    <thead style=\"text-align: center;\" class=\"thead-dark\">\r\n          <tr>\r\n          <th>PassengerId</th>\r\n          <th>BookingId</th>\r\n          <th>EmailId</th>\r\n          <th>Name</th>\r\n          <th>Gender</th>\r\n          <th>Age</th>\r\n          <th>Nationality</th>\r\n          <th colspan=\"2\">Action</th>\r\n          </tr>\r\n    </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let passenger of passengerList\">\r\n                <td>{{ passenger['PassengerId'] }}</td>\r\n                <td>{{ passenger['BookingId'] }}</td>\r\n                <td>{{ passenger['EmailId'] }}</td>\r\n                <td>{{ passenger['Name'] }}</td>\r\n                <td>{{ passenger['Gender'] }}</td>\r\n                <td>{{ passenger['Age'] }}</td>\r\n                <td>{{ passenger['Nationality'] }}</td>\r\n\r\n                <td>\r\n                    <button class=\" btn btn-success\" (click)=\"onEditClick()\" >Edit</button>\r\n                </td>\r\n                <td>\r\n                    <button class=\" btn btn-success\" (click)=\"onDeleteClick()\" >Delete</button>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    \r\n</table>\r\n</div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport {  FormGroup ,Validators,FormControl} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Passenger } from '../../Models/passenger.model';\r\nimport { PassengerService } from '../../Services/passenger.service';\r\n\r\n@Component({\r\n  selector: 'app-passenger',\r\n  templateUrl: './passenger.component.html',\r\n  styleUrls: ['./passenger.component.css']\r\n})\r\nexport class PassengerComponent implements OnInit {\r\n\r\n  //properties\r\n  passengers: Passenger;\r\n  //create property for reactive form\r\n  newForm: FormGroup;\r\n\r\n  constructor(private service : PassengerService, private router: Router)\r\n   { \r\n     this.passengers;\r\n    \r\n     //create reactive form\r\n     this.newForm=new FormGroup({\r\n      'PassengerId': new FormControl(null, [Validators.required, Validators.min(100)]),\r\n        'BookingId': new FormControl(null, [Validators.required, Validators.min(100)]),\r\n        'EmailId': new FormControl(null, [Validators.email]),\r\n        'Gender': new FormControl(null, [Validators.required, Validators.pattern('^[MFmf]$')]),\r\n        'Name': new FormControl(null, [Validators.required, Validators.pattern('^[A-Za-z .]*$')]),\r\n        'Age': new FormControl(null, [Validators.required, Validators.min(18)]),\r\n        'Nationality': new FormControl(null, [Validators.required, Validators.pattern('^[A-Za-z .]*$')]),\r\n     });\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n   //button methods\r\n   //add button\r\n\r\n     onAddClick(){\r\n        let passenger: Passenger = {\r\n          BookingId: this.newForm.get('BookingId').value,\r\n          EmailId: this.newForm.get('EmailId').value,\r\n          Gender: this.newForm.get('Gender').value,\r\n          Name: this.newForm.get('Name').value,\r\n          Age: this.newForm.get('Age').value,\r\n          Nationality: this.newForm.get('Nationality').value.substring(0, 3).toUpperCase()\r\n        };\r\n        console.log(this.newForm.value);\r\n        this.service.addPassenger(passenger).subscribe(resData => {\r\n          console.log(resData);\r\n        });\r\n        this.newForm.reset();\r\n        this.router.navigate(['/PassengerList']);\r\n\r\n    //delete button\r\n\r\n      //this.service.deletePassenger('109').subscribe(response => {\r\n      //console.log(response);\r\n    //});\r\n\r\n   }\r\n}\r\n","<div class=\"jumbtron\">\r\n    <h1 class=\"display-4 text-center\"> Passenger Details </h1>\r\n    <hr>\r\n    \r\n    <div class=\"col-md-6\" >\r\n        <form [formGroup]=\"newForm\" (ngSubmit)=\"onAddClick()\">\r\n\r\n        <!--Booking Id start-->\r\n            <div class=\"form-group\" >\r\n            <label for=\"bookingId\">Booking Id</label>\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Booking ID\" formControlName=\"BookingId\" [ngClass]=\"{\r\n                'is-valid': newForm.get('BookingId').valid && newForm.get('BookingId').touched,\r\n                'is-invalid': newForm.get('BookingId').invalid && newForm.get('BookingId').touched\r\n              }\" >\r\n              <span class=\"text-danger\" *ngIf=\"newForm.get('BookingId').invalid && newForm.get('BookingId').touched && newForm.get('BookingId').errors.required\">Booking ID can't be blank</span>\r\n              \r\n            </div>\r\n        <!--End of Booking Id-->\r\n        \r\n        <!--Email Id start-->\r\n            <div class=\"form-group\">\r\n                <label for=\"emailId\">Email Id</label>\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Email ID\" formControlName=\"EmailId\">\r\n                <span class=\"text-danger\" *ngIf=\"newForm.get('EmailId').invalid && newForm.get('EmailId').touched && newForm.get('EmailId').errors.email\">Email should be in correct format</span>\r\n            </div>\r\n        <!-- End of Email Id -->\r\n            \r\n        <!--Name start-->    \r\n            <div class=\"form-group\">\r\n                <label for=\"name\">Name</label>\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Name\" formControlName=\"Name\">\r\n                <span class=\"text-danger\" *ngIf=\"newForm.get('Name').invalid && newForm.get('Name').touched && newForm.get('Name').errors.required\">Employee Name can't be blank</span>\r\n                <span class=\"text-danger\" *ngIf=\"newForm.get('Name').invalid && newForm.get('Name').touched && newForm.get('Name').errors.pattern\">Employee Name can contain alphabets, dot (.) and space</span> \r\n\r\n            </div>\r\n        <!--End of Name-->    \r\n        \r\n        <!--Gender start-->  \r\n            <div class=\"form-group\">\r\n                 <label for=\"gender\">Gender  </label>\r\n                 <!--input type=\"text\" class=\"form-control\" placeholder=\"Gender\" formControlName=\"Gender\"-->\r\n                 <select class=\"form-control\" name=\"Gender\" formControlName=\"Gender\" >\r\n                      <option value=\"M\">Male</option>\r\n                      <option value=\"F\">Female</option>\r\n                  </select>\r\n                  <span class=\"text-danger\" *ngIf=\"newForm.get('Gender').invalid && newForm.get('Gender').touched && newForm.get('Gender').errors.required\"> Select the gender</span>\r\n            </div> \r\n        <!--End of Gender-->  \r\n\r\n        <!--Name Age start-->  \r\n            <div class=\"form-group\">\r\n                <label for=\"age\">Age</label>\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Age\" formControlName=\"Age\">\r\n                <span class=\"text-danger\" *ngIf=\"newForm.get('Age').invalid && newForm.get('Age').touched && newForm.get('Name').errors.required\">Age must be greater then or equal to 18</span>\r\n            </div>\r\n        <!--End of Age-->     \r\n\r\n        <!-- Nationality start-->  \r\n            <div class=\"form-group\">\r\n                <label for=\"nationality\">Nationality</label>\r\n                <!--input type=\"text\" class=\"form-control\" placeholder=\"Nationality\" formControlName=\"Nationality\"-->\r\n                <select class=\"form-control\" name=\"Nationality\" formControlName=\"Nationality\" >\r\n                    <option value=\"\">-- select one --</option>\r\n                    \r\n                    <option value=\"afghan\">Afghan</option>\r\n  <option value=\"albanian\">Albanian</option>\r\n  <option value=\"algerian\">Algerian</option>\r\n  <option value=\"american\">American</option>\r\n  <option value=\"andorran\">Andorran</option>\r\n  <option value=\"angolan\">Angolan</option>\r\n  <option value=\"antiguans\">Antiguans</option>\r\n  <option value=\"argentinean\">Argentinean</option>\r\n  <option value=\"armenian\">Armenian</option>\r\n  <option value=\"australian\">Australian</option>\r\n  <option value=\"austrian\">Austrian</option>\r\n  <option value=\"azerbaijani\">Azerbaijani</option>\r\n  <option value=\"bahamian\">Bahamian</option>\r\n  <option value=\"bahraini\">Bahraini</option>\r\n  <option value=\"bangladeshi\">Bangladeshi</option>\r\n  <option value=\"barbadian\">Barbadian</option>\r\n  <option value=\"barbudans\">Barbudans</option>\r\n  <option value=\"batswana\">Batswana</option>\r\n  <option value=\"belarusian\">Belarusian</option>\r\n  <option value=\"belgian\">Belgian</option>\r\n  <option value=\"belizean\">Belizean</option>\r\n  <option value=\"beninese\">Beninese</option>\r\n  <option value=\"bhutanese\">Bhutanese</option>\r\n  <option value=\"bolivian\">Bolivian</option>\r\n  <option value=\"bosnian\">Bosnian</option>\r\n  <option value=\"brazilian\">Brazilian</option>\r\n  <option value=\"british\">British</option>\r\n  <option value=\"bruneian\">Bruneian</option>\r\n  <option value=\"bulgarian\">Bulgarian</option>\r\n  <option value=\"burkinabe\">Burkinabe</option>\r\n  <option value=\"burmese\">Burmese</option>\r\n  <option value=\"burundian\">Burundian</option>\r\n  <option value=\"cambodian\">Cambodian</option>\r\n  <option value=\"cameroonian\">Cameroonian</option>\r\n  <option value=\"canadian\">Canadian</option>\r\n  <option value=\"cape verdean\">Cape Verdean</option>\r\n  <option value=\"central african\">Central African</option>\r\n  <option value=\"chadian\">Chadian</option>\r\n  <option value=\"chilean\">Chilean</option>\r\n  <option value=\"chinese\">Chinese</option>\r\n  <option value=\"colombian\">Colombian</option>\r\n  <option value=\"comoran\">Comoran</option>\r\n  <option value=\"congolese\">Congolese</option>\r\n  <option value=\"costa rican\">Costa Rican</option>\r\n  <option value=\"croatian\">Croatian</option>\r\n  <option value=\"cuban\">Cuban</option>\r\n  <option value=\"cypriot\">Cypriot</option>\r\n  <option value=\"czech\">Czech</option>\r\n  <option value=\"danish\">Danish</option>\r\n  <option value=\"djibouti\">Djibouti</option>\r\n  <option value=\"dominican\">Dominican</option>\r\n  <option value=\"dutch\">Dutch</option>\r\n  <option value=\"east timorese\">East Timorese</option>\r\n  <option value=\"ecuadorean\">Ecuadorean</option>\r\n  <option value=\"egyptian\">Egyptian</option>\r\n  <option value=\"emirian\">Emirian</option>\r\n  <option value=\"equatorial guinean\">Equatorial Guinean</option>\r\n  <option value=\"eritrean\">Eritrean</option>\r\n  <option value=\"estonian\">Estonian</option>\r\n  <option value=\"ethiopian\">Ethiopian</option>\r\n  <option value=\"fijian\">Fijian</option>\r\n  <option value=\"filipino\">Filipino</option>\r\n  <option value=\"finnish\">Finnish</option>\r\n  <option value=\"french\">French</option>\r\n  <option value=\"gabonese\">Gabonese</option>\r\n  <option value=\"gambian\">Gambian</option>\r\n  <option value=\"georgian\">Georgian</option>\r\n  <option value=\"german\">German</option>\r\n  <option value=\"ghanaian\">Ghanaian</option>\r\n  <option value=\"greek\">Greek</option>\r\n  <option value=\"grenadian\">Grenadian</option>\r\n  <option value=\"guatemalan\">Guatemalan</option>\r\n  <option value=\"guinea-bissauan\">Guinea-Bissauan</option>\r\n  <option value=\"guinean\">Guinean</option>\r\n  <option value=\"guyanese\">Guyanese</option>\r\n  <option value=\"haitian\">Haitian</option>\r\n  <option value=\"herzegovinian\">Herzegovinian</option>\r\n  <option value=\"honduran\">Honduran</option>\r\n  <option value=\"hungarian\">Hungarian</option>\r\n  <option value=\"icelander\">Icelander</option>\r\n  <option value=\"indian\">Indian</option>\r\n  <option value=\"indonesian\">Indonesian</option>\r\n  <option value=\"iranian\">Iranian</option>\r\n  <option value=\"iraqi\">Iraqi</option>\r\n  <option value=\"irish\">Irish</option>\r\n  <option value=\"israeli\">Israeli</option>\r\n  <option value=\"italian\">Italian</option>\r\n  <option value=\"ivorian\">Ivorian</option>\r\n  <option value=\"jamaican\">Jamaican</option>\r\n  <option value=\"japanese\">Japanese</option>\r\n  <option value=\"jordanian\">Jordanian</option>\r\n  <option value=\"kazakhstani\">Kazakhstani</option>\r\n  <option value=\"kenyan\">Kenyan</option>\r\n  <option value=\"kittian and nevisian\">Kittian and Nevisian</option>\r\n  <option value=\"kuwaiti\">Kuwaiti</option>\r\n  <option value=\"kyrgyz\">Kyrgyz</option>\r\n  <option value=\"laotian\">Laotian</option>\r\n  <option value=\"latvian\">Latvian</option>\r\n  <option value=\"lebanese\">Lebanese</option>\r\n  <option value=\"liberian\">Liberian</option>\r\n  <option value=\"libyan\">Libyan</option>\r\n  <option value=\"liechtensteiner\">Liechtensteiner</option>\r\n  <option value=\"lithuanian\">Lithuanian</option>\r\n  <option value=\"luxembourger\">Luxembourger</option>\r\n  <option value=\"macedonian\">Macedonian</option>\r\n  <option value=\"malagasy\">Malagasy</option>\r\n  <option value=\"malawian\">Malawian</option>\r\n  <option value=\"malaysian\">Malaysian</option>\r\n  <option value=\"maldivan\">Maldivan</option>\r\n  <option value=\"malian\">Malian</option>\r\n  <option value=\"maltese\">Maltese</option>\r\n  <option value=\"marshallese\">Marshallese</option>\r\n  <option value=\"mauritanian\">Mauritanian</option>\r\n  <option value=\"mauritian\">Mauritian</option>\r\n  <option value=\"mexican\">Mexican</option>\r\n  <option value=\"micronesian\">Micronesian</option>\r\n  <option value=\"moldovan\">Moldovan</option>\r\n  <option value=\"monacan\">Monacan</option>\r\n  <option value=\"mongolian\">Mongolian</option>\r\n  <option value=\"moroccan\">Moroccan</option>\r\n  <option value=\"mosotho\">Mosotho</option>\r\n  <option value=\"motswana\">Motswana</option>\r\n  <option value=\"mozambican\">Mozambican</option>\r\n  <option value=\"namibian\">Namibian</option>\r\n  <option value=\"nauruan\">Nauruan</option>\r\n  <option value=\"nepalese\">Nepalese</option>\r\n  <option value=\"new zealander\">New Zealander</option>\r\n  <option value=\"ni-vanuatu\">Ni-Vanuatu</option>\r\n  <option value=\"nicaraguan\">Nicaraguan</option>\r\n  <option value=\"nigerien\">Nigerien</option>\r\n  <option value=\"north korean\">North Korean</option>\r\n  <option value=\"northern irish\">Northern Irish</option>\r\n  <option value=\"norwegian\">Norwegian</option>\r\n  <option value=\"omani\">Omani</option>\r\n  <option value=\"pakistani\">Pakistani</option>\r\n  <option value=\"palauan\">Palauan</option>\r\n  <option value=\"panamanian\">Panamanian</option>\r\n  <option value=\"papua new guinean\">Papua New Guinean</option>\r\n  <option value=\"paraguayan\">Paraguayan</option>\r\n  <option value=\"peruvian\">Peruvian</option>\r\n  <option value=\"polish\">Polish</option>\r\n  <option value=\"portuguese\">Portuguese</option>\r\n  <option value=\"qatari\">Qatari</option>\r\n  <option value=\"romanian\">Romanian</option>\r\n  <option value=\"russian\">Russian</option>\r\n  <option value=\"rwandan\">Rwandan</option>\r\n  <option value=\"saint lucian\">Saint Lucian</option>\r\n  <option value=\"salvadoran\">Salvadoran</option>\r\n  <option value=\"samoan\">Samoan</option>\r\n  <option value=\"san marinese\">San Marinese</option>\r\n  <option value=\"sao tomean\">Sao Tomean</option>\r\n  <option value=\"saudi\">Saudi</option>\r\n  <option value=\"scottish\">Scottish</option>\r\n  <option value=\"senegalese\">Senegalese</option>\r\n  <option value=\"serbian\">Serbian</option>\r\n  <option value=\"seychellois\">Seychellois</option>\r\n  <option value=\"sierra leonean\">Sierra Leonean</option>\r\n  <option value=\"singaporean\">Singaporean</option>\r\n  <option value=\"slovakian\">Slovakian</option>\r\n  <option value=\"slovenian\">Slovenian</option>\r\n  <option value=\"solomon islander\">Solomon Islander</option>\r\n  <option value=\"somali\">Somali</option>\r\n  <option value=\"south african\">South African</option>\r\n  <option value=\"south korean\">South Korean</option>\r\n  <option value=\"spanish\">Spanish</option>\r\n  <option value=\"sri lankan\">Sri Lankan</option>\r\n  <option value=\"sudanese\">Sudanese</option>\r\n  <option value=\"surinamer\">Surinamer</option>\r\n  <option value=\"swazi\">Swazi</option>\r\n  <option value=\"swedish\">Swedish</option>\r\n  <option value=\"swiss\">Swiss</option>\r\n  <option value=\"syrian\">Syrian</option>\r\n  <option value=\"taiwanese\">Taiwanese</option>\r\n  <option value=\"tajik\">Tajik</option>\r\n  <option value=\"tanzanian\">Tanzanian</option>\r\n  <option value=\"thai\">Thai</option>\r\n  <option value=\"togolese\">Togolese</option>\r\n  <option value=\"tongan\">Tongan</option>\r\n  <option value=\"trinidadian or tobagonian\">Trinidadian or Tobagonian</option>\r\n  <option value=\"tunisian\">Tunisian</option>\r\n  <option value=\"turkish\">Turkish</option>\r\n  <option value=\"tuvaluan\">Tuvaluan</option>\r\n  <option value=\"ugandan\">Ugandan</option>\r\n  <option value=\"ukrainian\">Ukrainian</option>\r\n  <option value=\"uruguayan\">Uruguayan</option>\r\n  <option value=\"uzbekistani\">Uzbekistani</option>\r\n  <option value=\"venezuelan\">Venezuelan</option>\r\n  <option value=\"zambian\">Zambian</option>\r\n  <option value=\"zimbabwean\">Zimbabwean</option>\r\n                    \r\n                </select>\r\n                <span class=\"text-danger\" *ngIf=\"newForm.get('Nationality').invalid && newForm.get('Nationality').touched && newForm.get('Nationality').errors.required\">Select the Nationality</span>\r\n                \r\n            </div>\r\n        <!--End of Nationality-->  \r\n\r\n\r\n        <!--Add Button start-->  \r\n            <div class=\"text-center\">\r\n                <button type=\"submit\" class=\"btn btn-success\">Add</button>\r\n              </div>\r\n        <!--End of Button-->  \r\n\r\n        </form>\r\n        </div>\r\n\r\n</div>\r\n","\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Passenger } from '../Models/passenger.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PassengerService {\r\n\r\n  passengerDetails: Passenger;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getPassenger() {\r\n    return this.http.get<Passenger[]>('http://localhost:53981/api/Passengers');\r\n  }\r\n\r\n  addPassenger(passenger: Passenger) {\r\n    return this.http.post('http://localhost:53981/api/Passengers', passenger);\r\n  }\r\n\r\n  deletePassenger(pid: string) {\r\n    return this.http.delete('http://localhost:53981/api/Passengers/' + pid);\r\n  }\r\n\r\n  editPassenger(newPassenger: Passenger, pid: string) {\r\n    return this.http.put('http://localhost:53981/api/Passengers?PId=' + pid, newPassenger);\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PassengerComponent } from './Passengers/Components/passenger/passenger.component';\r\nimport { PassengerListComponent } from './Passengers/Components/passenger-list/passenger-list.component';\r\nimport { BookingComponent } from './Customers/Components/booking/booking.component';\r\nimport { AuthGuard } from './Customers/Services/Guard/auth.guard';\r\nimport { AdminComponent } from './Customers/Components/admin/admin.component';\r\nimport { LoginCustomerComponent } from './Customers/Components/login-customer/login-customer.component';\r\nimport { RegisterCustomerComponent } from './Customers/Components/register-customer/register-customer.component';\r\nimport { ProfileComponent } from './Customers/Components/profile/profile.component';\r\nimport { PageNotFoundComponent } from './Customers/Components/page-not-found/page-not-found.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    //ashish\r\n    { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n    { path: 'booking', component: BookingComponent, canActivate: [AuthGuard] },\r\n    { path: 'admin', component: AdminComponent, canActivate: [AuthGuard] },\r\n    { path: 'login', component: LoginCustomerComponent },\r\n    { path: 'Register', component: RegisterCustomerComponent },\r\n    { path: 'Profile', component: ProfileComponent, canActivate: [AuthGuard] },\r\n    { path: '**', component: PageNotFoundComponent },\r\n    //end\r\n  // { path: '', redirectTo: 'AddPassenger', pathMatch: 'full' },\r\n  { path: 'AddPassenger', component: PassengerComponent },\r\n  { path: 'PassengerList', component: PassengerListComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes,{useHash:true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { AuthenticateService } from './Customers/Services/Authenticate.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app works';\r\n  constructor(public authenticate : AuthenticateService){}\r\n}\r\n","<!-- <div>\r\n<a [routerLink]=\"['./passenger']\">Passenger</a> |&nbsp;\r\n<a>[routerLink]=\"['./passengerList']\">PassengerList</a> |&nbsp;\r\n</div>\r\n -->\r\n\r\n\r\n\r\n<!-- <div>\r\n  <nav class=\"dark-blue navbar navbar-dark navbar-expand-lg\">\r\n    <!-- <a class=\"navbar-brand\" [routerLink]=\" [ '/samples' ] \">Search Flight</a> &nbsp; -->\r\n    <!-- <a class=\"navbar-brand\" [routerLink]=\" [ '/booking' ] \">Book Flight</a> &nbsp;\r\n  </nav>\r\n  <div class=\"sidebar-left\">\r\n  </div>\r\n</div> -->\r\n\r\n\r\n<div style=\"height: 100%; overflow-y: scroll;\">\r\n\r\n  <nav class=\"navbar navbar-expand-sm bg-secondary navbar-dark\">\r\n    \r\n    <div id=\"main\">\r\n        <button class=\"openbtn rounded-lg\" onclick=\"openNav()\"><i class=\"material-icons\" style=\"font-size:36px\">account_circle</i></button>  \r\n        \r\n      </div>\r\n\r\n<ul class=\"navbar-nav mx-auto\">\r\n    \r\n    <li>\r\n        <h1>OARS Airline</h1>\r\n    </li>\r\n    <li> <div class=\"navbar-brand\" href=\"#\">\r\n            <img style='height: 50px;width: 80px;' src=\"\\assets\\images\\Airline.png\" alt=\"Airline\">\r\n    </div>\r\n    </li>\r\n</ul>\r\n<ul class=\"navbar-nav float-left\">\r\n    <li class=\"nav-item active \">\r\n        <a class=\"nav-link \" *ngIf = \"!authenticate.Loggedin()\" routerLink = '/login' routerLinkActive = 'Active'>Login</a>\r\n    </li>\r\n    <!-- <li class=\"nav-item active \">\r\n        <a class=\"nav-link \"  routerLink = '/booking' routerLinkActive = 'Active'>Book Ticket</a>\r\n    </li> -->\r\n    <li class=\"nav-item active \">\r\n        <a class=\"nav-link \" *ngIf = \"authenticate.Loggedin()\" (click) = \"authenticate.Logout()\" routerLink = '/login' routerLinkActive = 'Active'>Logout</a>\r\n    </li>\r\n</ul>\r\n</nav>\r\n\r\n\r\n<div id=\"mySidebar\" class=\"sidebar\">\r\n<a href=\"javascript:void(0)\" class=\"closebtn\" onclick=\"closeNav()\">×</a>\r\n<a href=\"\" routerLink = \"/Profile\" routerLinkActive = 'Active'>My Profile</a>\r\n<a href=\"\" routerLink = \"/admin\" routerLinkActive = 'Active'>Admin</a>\r\n<a href=\"\"  routerLink = '/booking' routerLinkActive = 'Active'>My Bookings</a>\r\n<a href=\"\">Contact</a>\r\n</div>\r\n\r\n\r\n\r\n\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms'\r\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { BookingDataService } from './Bookings/Services/booking-data.service';\r\nimport { PassengerComponent } from './Passengers/Components/passenger/passenger.component';\r\nimport { PassengerListComponent } from './Passengers/Components/passenger-list/passenger-list.component';\r\nimport { SafePipe } from './Bookings/pipes/safe/safe.pipe';\r\nimport { BookingDeatilsComponent } from './Bookings/Components/booking-deatils/booking-deatils.component';\r\nimport { PassengerService } from './Passengers/Services/passenger.service';\r\nimport { RegisterService } from './Customers/Services/Register.service';\r\nimport { AuthenticateService } from './Customers/Services/Authenticate.service';\r\nimport { AuthGuard } from './Customers/Services/Guard/auth.guard';\r\nimport { TokenInterceptorService } from './Customers/Services/Interceptor/token-interceptor.service';\r\nimport { LoginCustomerComponent } from './Customers/Components/login-customer/login-customer.component';\r\nimport { RegisterCustomerComponent } from './Customers/Components/register-customer/register-customer.component';\r\nimport { BookingComponent } from './Customers/Components/booking/booking.component';\r\nimport { AdminComponent } from './Customers/Components/admin/admin.component';\r\nimport { PageNotFoundComponent } from './Customers/Components/page-not-found/page-not-found.component';\r\nimport { ProfileComponent } from './Customers/Components/profile/profile.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PassengerComponent,\r\n    PassengerListComponent,\r\n    SafePipe,\r\n    BookingDeatilsComponent,\r\n    AppComponent,\r\n    LoginCustomerComponent,\r\n    RegisterCustomerComponent,\r\n    BookingComponent,\r\n    AdminComponent,\r\n    PageNotFoundComponent,\r\n    ProfileComponent\r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    \r\n  ],\r\n  providers: [PassengerService, BookingDataService,RegisterService, AuthenticateService,AuthGuard,\r\n    {provide: HTTP_INTERCEPTORS,\r\n    useClass : TokenInterceptorService,\r\n  multi : true} ],\r\n\r\n  bootstrap: [AppComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}