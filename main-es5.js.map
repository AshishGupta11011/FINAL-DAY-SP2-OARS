{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Sample/samples/samples.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/component/booking-deatils/booking-deatils.component.ts","webpack:///src/app/component/booking-deatils/booking-deatils.component.html","webpack:///src/app/pipes/safe/safe.pipe.ts","webpack:///src/app/services/booking-data.service.ts","webpack:///src/app/transform.directive.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","SamplesComponent","console","log","selector","templateUrl","styleUrls","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","declarations","providers","bootstrap","Class","BookingDeatilsComponent","bookingsService","show","buttonName","showDetails","buttonSubmit","bookings","newForm","FlightId","required","Source","Destination","DateOfBooking","DateOfJourney","NoOfSeats","max","min","TicketFare","CustomerId","onSearchClick","onSubmitClick","valid","searchFlightsToDatabase","value","subscribe","error","data","reset","postBookingsToDatabase","SafePipe","name","BookingDataService","httpClient","apiPrefix","get","pipe","errorHandler","post","status","providedIn","TransformDirective","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-samples',\n  templateUrl: './samples.component.html',\n  styleUrls: ['./samples.component.css']\n})\nexport class SamplesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  onSearchClick()\n  {\n    console.log(\"CLICKED\");\n    return true;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BookingDeatilsComponent } from './component/booking-deatils/booking-deatils.component';\nimport { SamplesComponent } from './Sample/samples/samples.component';\n\n\nconst routes: Routes = [\n  { path: \"booking\", component: BookingDeatilsComponent },\n  { path: \"samples\", component: SamplesComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'new-app';\n}\n","\n<div >\n  <nav class=\"dark-blue navbar navbar-dark navbar-expand-lg\">\n    <!-- <a class=\"navbar-brand\" [routerLink]=\" [ '/samples' ] \">Search Flight</a> &nbsp; -->\n    <a class=\"navbar-brand\" [routerLink]=\" [ '/booking' ] \">Book Flight</a> &nbsp;\n  </nav>\n  <div class=\"sidebar-left\">\n  </div>  \n </div>\n \n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TransformDirective } from './transform.directive';\nimport { SafePipe } from './pipes/safe/safe.pipe';\nimport { BookingDeatilsComponent } from './component/booking-deatils/booking-deatils.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { BookingDataService } from './services/booking-data.service';\nimport { SamplesComponent } from './Sample/samples/samples.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TransformDirective,\n    SafePipe,\n    BookingDeatilsComponent,\n    SamplesComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n  ],\n  providers: [BookingDataService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Booking } from 'src/app/model/booking';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { BookingDataService } from 'src/app/services/booking-data.service';\n\n@Component({\n  selector: 'app-booking-deatils',\n  templateUrl: './booking-deatils.component.html',\n  styleUrls: ['./booking-deatils.component.css']\n})\nexport class BookingDeatilsComponent implements OnInit {\n  \n  // pipe \n  //@Input() today;\n  //properties\n  bookings: Booking[];\n\n  //create property for reactive form\n  newForm: FormGroup;\n \n\n  //constructor\n  constructor(private bookingsService: BookingDataService) {\n    this.bookings = [];\n    \n   \n    //reactive form\n    this.newForm = new FormGroup({\n      \n      FlightId: new FormControl(100,[Validators.required]),\n      Class: new FormControl(\"FC\"),\n      Source: new FormControl(\"DEL\", [Validators.required]),\n      Destination: new FormControl(\"JAI\", [Validators.required]),\n      DateOfBooking: new FormControl(\"2020-05-18T18:30:00.000Z\"),\n      DateOfJourney: new FormControl(\"2020-05-18T18:30:00.000Z\",[Validators.required]),\n      NoOfSeats: new FormControl(1,[Validators.max(5), Validators.min(1)]),\n      TicketFare: new FormControl(5000),\n      CustomerId: new FormControl(100),\n      \n    });\n  }\n  \n  ngOnInit() {\n    \n   \n  }\n\n  // Directive for showing after button click after search \n  public show:boolean = false;\n  public buttonName:any = 'Show';\n  toggleSearch()\n  {this.show = !this.show;\n\n    // CHANGE THE Button\n    if(this.show)  \n      this.buttonName = \"Hide\";\n    else\n      this.buttonName = \"Show\";\n      this.onSearchClick();\n\n  }\n\n  // Directive for showing after button click after booking\n  \n  public showDetails:boolean = false;\n  public buttonSubmit:any = 'Show';\n  toggleSubmit()\n  {this.showDetails = !this.showDetails;\n\n    // CHANGE THE Button\n    if(this.show)  \n      this.buttonSubmit = \"Hide\";\n    else\n      this.buttonSubmit = \"Show\";\n      this.onSubmitClick();\n\n  }\n\n\n  // Search Flight by id\n  onSearchClick()\n  {\n    \n    if (this.newForm.valid == true) {\n      this.bookingsService.searchFlightsToDatabase(this.newForm.value.FlightId).subscribe(\n        error => console.log(error),\n        data => console.log(data))\n        ;\n      //clear textboxes\n      this.newForm.reset();\n    }\n    else {\n      console.log(\"Invalid data\");\n    }\n\n  }\n  \n  onSubmitClick() {\n    if (this.newForm.valid == true) {\n      //accessing value of any form control (textbox etc.)\n      console.log(\n        \"Source : \" + this.newForm.value.Source +'\\n' + \n        \"Destination : \" + this.newForm.value.Destination +'\\n' +\n        \"Date Of Booking : \" + this.newForm.value.DateOfBooking +'\\n' +\n        \"Date of Joining : \" + this.newForm.value.DateOfJourney +'\\n' +\n        \"No of Seats : \" + this.newForm.value.NoOfSeats);\n\n\n      this.bookingsService.postBookingsToDatabase(this.newForm.value).subscribe(\n        error => console.log(error),\n        data => console.log(data))\n        ;\n      //clear textboxes\n      this.newForm.reset();\n    }\n    else {\n      console.log(\"Invalid data\");\n    }\n  }\n\n}\n","<div class=\"container\">\n\n  <!-- flight deatils from flight table are shown here  -->\n  <!-- <div class=\"container py-6\">\n    <h3 class=\"text-uppercase\">Search Flight by Flight Id</h3>\n    \n      <div class=\"form-group form-row \">\n        <div class=\"col-md-3\">\n          <input type=\"number\" min=\"100\" class=\"form-control\" placeholder=\" Enter Flight Id \" name=\"FlightId\"\n            formControlName=\"FlightId\" [ngClass]=\"{\n                'is-valid': newForm.get('FlightId').valid && newForm.get('FlightId').touched,\n                'is-invalid': newForm.get('FlightId').invalid && newForm.get('FlightId').touched               \n              }\">\n          <span class=\"text-danger\"\n            *ngIf=\"newForm.get('FlightId').invalid && newForm.get('FlightId').touched && newForm.get('FlightId').errors.required\">\n            Please Enter FlightId .\n          </span>\n          \n        </div>\n        <div class=\"text-center col-md-2\">\n          <button class=\"btn btn-blue text-white \" (click)=\"toggleSearch()\">Search Flight</button>\n        </div>\n      </div>\n   \n  </div> -->\n  <!-- flight details ended here  -->\n\n  <!-- flight Bookings are shown here  -->\n\n  <ng-container >\n    <div class=\"col-md-12 text-blue \">\n      <h2 class=\"border-bottom pb-2 mb-2\">Book Your Flight with us</h2>\n\n      <form [formGroup]=\"newForm\">\n\n        <div class=\"form-group form-row \">\n          <label for=\"source\" class=\"col-md-3 col-form-label\">Flying From:</label>\n          <label for=\"destination\" class=\"col-md-3 col-form-label\">Flying To:</label>\n          <label for=\"deptDatepicker\" class=\"col-md-2 col-form-label\">Date of Journey :</label>\n          <label for=\"class\" class=\"col-md-2 col-form-label\">Class:</label>\n          <label for=\"noOfSeats\" class=\"col-md-2 col-form-label\">Travellers:</label>\n        </div>\n\n        <div class=\"form-group form-row \">\n          <div class=\"col-md-3\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Flying from\" name=\"Source\" formControlName=\"Source\"\n              [ngClass]=\"{\n                  'is-valid': newForm.get('Source').valid && newForm.get('Source').touched,\n                  'is-invalid': newForm.get('Source').invalid && newForm.get('Source').touched\n                }\">\n\n            <span class=\"text-danger\"\n              *ngIf=\"newForm.get('Source').invalid && newForm.get('Source').touched && newForm.get('Source').errors.required\">\n              Please Enter your location </span>\n          </div>\n\n          <div class=\"col-md-3\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Destination \" name=\"destination\"\n              formControlName=\"Destination\" [ngClass]=\"{\n                  'is-valid': newForm.get('Destination').valid && newForm.get('Destination').touched,\n                  'is-invalid': newForm.get('Destination').invalid && newForm.get('Destination').touched               \n                }\">\n            <span class=\"text-danger\"\n              *ngIf=\"newForm.get('Destination').invalid && newForm.get('Destination').touched && newForm.get('Destination').errors.required\">\n              Please Enter your Destination .\n            </span>\n          </div>\n          <div class=\"col-md-2\">\n            <input matInput [matDatepicker]=\"deptDatepicker\" formControlName=\"DateOfJourney\" class=\"form-control\"\n              [ngClass]=\"{\n            'is-valid': newForm.get('DateOfJourney').valid && newForm.get('DateOfJourney').touched,\n            'is-invalid': newForm.get('DateOfJourney').invalid && newForm.get('DateOfJourney').touched\n          }\">\n            <mat-datepicker-toggle matSuffix [for]=\"deptDatepicker\"></mat-datepicker-toggle>\n            <mat-datepicker #deptDatepicker></mat-datepicker>\n            <span class=\"text-danger\"\n              *ngIf=\"newForm.get('DateOfJourney').invalid && newForm.get('DateOfJourney').touched && newForm.get('DateOfJourney').errors.required\">\n              Please Enter your DateOfJourney </span>\n          </div>\n          <div class=\"col-md-2\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Enter Class \" name=\"class\" formControlName=\"Class\"\n              [ngClass]=\"{\n            'is-valid': newForm.get('Class').valid && newForm.get('Class').touched,\n            'is-invalid': newForm.get('Class').invalid && newForm.get('Class').touched\n          }\">\n            <span class=\"text-danger\"\n              *ngIf=\"newForm.get('Class').invalid && newForm.get('Class').touched && newForm.get('Class').errors.required\">\n              Please Enter Class </span>\n          </div>\n\n          <div class=\"col-md-2\">\n            <input type=\"number\" min=\"0\" class=\"form-control\" placeholder=\"No of Seats \" name=\"noOfSeats\"\n              formControlName=\"NoOfSeats\" [ngClass]=\"{\n              'is-valid': newForm.get('NoOfSeats').valid && newForm.get('NoOfSeats').touched,\n              'is-invalid': newForm.get('NoOfSeats').invalid && newForm.get('NoOfSeats').touched \n            }\">\n            <span class=\"noOfSeats\"\n              *ngIf=\"newForm.get('NoOfSeats').invalid && newForm.get('NoOfSeats').touched && newForm.get('NoOfSeats').errors.required\">\n              Please Enter b/w 1-5 </span>\n          </div>\n        </div>\n        <div class=\"form-group form-row\">\n          <!-- <div class=\"text-center col-md-3\">\n          <button class=\"btn btn-blue text-white\" (click)=\"onSearchClick()\">Search</button>\n        </div> -->\n          <div class=\"text-center col-md-3\">\n            <button class=\"btn btn-blue text-white\" (click)=\" onSubmitClick()\">Submit</button>\n          </div>\n        </div>\n\n        <!-- is-valid    : green\n            is-invalid : red -->\n\n\n      </form>\n    </div>\n\n\n  </ng-container>\n\n  <ng-container *ngIf=\"showDetails\">\n    <div class=\"col-md-12 text-blue \">\n      <h2 class=\"border-bottom pb-2 mb-2\">Booking Deatails are </h2>\n      <div>\n        Data\n      </div>\n      <div>\n        <div> Flying from : {{newForm.value.Source}} </div>\n        <div> Flying To : {{newForm.value.Destination}} </div>\n        <div> Date Of Journey : {{newForm.value.DateOfJourney}} </div>\n        <div> Class : {{newForm.value.Class}} </div>\n        <div> No of Travellers : {{newForm.value.NoOfSeats}} </div>\n                \n      </div>\n\n    </div>\n\n  </ng-container>\n\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n\n  transform(value: unknown, ...args: unknown[]): unknown {\n    return null;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Booking } from '../model/booking';\nimport { catchError } from 'rxjs/operators'\nimport { throwError, Observable } from 'rxjs'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookingDataService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  apiPrefix: string = \"http://localhost:53981/\";\n\n  //Search by flight id \n  searchFlightsToDatabase(FlightId: number): Observable<any> {\n    //return this.httpClient.get(this.apiPrefix + `api/bookings?Source=${Source}&Destination=${Destination}`).pipe(catchError(this.errorHandler));\n    return this.httpClient.get(this.apiPrefix + `api/Flights?FlightId=${FlightId}`).pipe(catchError(this.errorHandler));\n\n  }\n  // post Bookings To Database\n  postBookingsToDatabase(bookings: Booking) {\n    return this.httpClient.post<Booking>(this.apiPrefix + `api/bookings`, bookings).pipe(catchError(this.errorHandler));\n  }\n\n  errorHandler(error: HttpErrorResponse) {\n    return throwError(error.status)\n  }\n}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[appTransform]'\n})\nexport class TransformDirective {\n\n  constructor() { }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}