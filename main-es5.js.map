{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Sample/samples/samples.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/component/booking-deatils/booking-deatils.component.ts","webpack:///src/app/component/booking-deatils/booking-deatils.component.html","webpack:///src/app/pipes/safe/safe.pipe.ts","webpack:///src/app/services/booking-data.service.ts","webpack:///src/app/transform.directive.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","SamplesComponent","console","log","selector","templateUrl","styleUrls","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","declarations","providers","bootstrap","Class","BookingDeatilsComponent","bookingsService","showFlightDetails","showBookingContent","showBookingDetails","bookings","flights","newFlightForm","FlightId","required","FlightName","Source","Destination","DepartureTime","ArrivalTime","NoOfSeats","max","min","BaggageLimit","AvailableSeats","newForm","DateOfBooking","DateOfJourney","TicketFare","CustomerId","onSearchClick","onSubmitClick","valid","searchFlightsByDestination","value","subscribe","error","data","reset","postBookingsToDatabase","toggleSearch","SafePipe","name","BookingDataService","httpClient","apiPrefix","get","pipe","errorHandler","post","status","providedIn","TransformDirective","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-samples',\n  templateUrl: './samples.component.html',\n  styleUrls: ['./samples.component.css']\n})\nexport class SamplesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  onSearchClick()\n  {\n    console.log(\"CLICKED\");\n    return true;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BookingDeatilsComponent } from './component/booking-deatils/booking-deatils.component';\nimport { SamplesComponent } from './Sample/samples/samples.component';\n\n\nconst routes: Routes = [\n  { path: \"booking\", component: BookingDeatilsComponent },\n  { path: \"samples\", component: SamplesComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'new-app';\n}\n","\n<div >\n  <nav class=\"dark-blue navbar navbar-dark navbar-expand-lg\">\n    <!-- <a class=\"navbar-brand\" [routerLink]=\" [ '/samples' ] \">Search Flight</a> &nbsp; -->\n    <a class=\"navbar-brand\" [routerLink]=\" [ '/booking' ] \">Book Flight</a> &nbsp;\n  </nav>\n  <div class=\"sidebar-left\">\n  </div>  \n </div>\n \n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TransformDirective } from './transform.directive';\nimport { SafePipe } from './pipes/safe/safe.pipe';\nimport { BookingDeatilsComponent } from './component/booking-deatils/booking-deatils.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { BookingDataService } from './services/booking-data.service';\nimport { SamplesComponent } from './Sample/samples/samples.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TransformDirective,\n    SafePipe,\n    BookingDeatilsComponent,\n    SamplesComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n  ],\n  providers: [BookingDataService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Booking } from 'src/app/model/booking';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { BookingDataService } from 'src/app/services/booking-data.service';\nimport { Flight } from 'src/app/model/flight';\n\n@Component({\n  selector: 'app-booking-deatils',\n  templateUrl: './booking-deatils.component.html',\n  styleUrls: ['./booking-deatils.component.css']\n})\nexport class BookingDeatilsComponent implements OnInit {\n  showFlightDetails: boolean = true;\n  showBookingContent: boolean = true;\n  showBookingDetails: boolean = true;\n\n  // pipe \n  //@Input() today;\n  //properties\n  bookings: Booking[];\n  flights : Flight[];\n  //create property for reactive form\n  newForm: FormGroup;\n  newFlightForm: FormGroup;\n \n\n  //constructor\n  constructor(private bookingsService: BookingDataService) {\n    this.bookings = [];\n    this.flights = [];\n   \n    // reactive form \n    this.newFlightForm = new FormGroup({\n      \n      FlightId: new FormControl(100,[Validators.required]),\n      FlightName: new FormControl(\"FC\"),\n      Source: new FormControl(\"DEL\", [Validators.required]),\n      Destination: new FormControl(\"JAI\", [Validators.required]),\n      DepartureTime: new FormControl(\"2020-05-18T18:30:00.000Z\"),\n      ArrivalTime: new FormControl(\"2020-05-18T18:30:00.000Z\",[Validators.required]),\n      NoOfSeats: new FormControl(1,[Validators.max(5), Validators.min(1)]),\n      BaggageLimit: new FormControl(50),\n      AvailableSeats: new FormControl(10),\n      \n    });\n\n    //reactive form\n    this.newForm = new FormGroup({\n      \n      FlightId: new FormControl(100,[Validators.required]),\n      Class: new FormControl(\"FC\"),\n      Source: new FormControl(\"DEL\", [Validators.required]),\n      Destination: new FormControl(\"JAI\", [Validators.required]),\n      DateOfBooking: new FormControl(\"2020-05-18T18:30:00.000Z\"),\n      DateOfJourney: new FormControl(\"2020-05-18T18:30:00.000Z\",[Validators.required]),\n      NoOfSeats: new FormControl(1,[Validators.max(5), Validators.min(1)]),\n      TicketFare: new FormControl(5000),\n      CustomerId: new FormControl(100),\n      \n    });\n\n\n  }\n  \n  ngOnInit() {\n    \n   \n  }\n\n  // Directive for showing after button click after search \n  // public showFlightDetails:boolean = false;\n  // public buttonName:any = 'Show';\n  toggleSearch()\n  { \n\n    // CHANGE THE Button\n    if(this.showFlightDetails)  \n        {this.onSearchClick();\n      console.log(\"Search Clicked\");\n        }\n    else\n     console.log(\"Search Clicked Else Part\");    \n\n  }\n\n  // Directive for showing after button click after booking\n  toggleBooking()\n  { \n\n    // CHANGE THE Button\n    if(this.showBookingDetails)  \n        {this.onSubmitClick();\n      console.log(\"Submit Clicked\");\n        }\n    else\n     console.log(\"Submit Clicked Else Part\");    \n\n  }\n  \n\n  // Search Flight by id\n  onSearchClick()\n  {\n    console.log(\" Part\");\n    if (this.newForm.valid == true) {\n      //this.bookingsService.searchFlightsToDatabase(this.newFlightForm.value.FlightId)\n      this.bookingsService.searchFlightsByDestination(this.newFlightForm.value.Destination)\n      .subscribe(\n        error => console.log(error),\n        data => console.log(data))\n        ;\n      //clear textboxes//\n      this.newForm.reset();\n    }\n    else {\n      console.log(\"Invalid data\");\n    }\n\n  }\n  \n  onSubmitClick() {\n    if (this.newForm.valid == true) {\n      //accessing value of any form control (textbox etc.)\n      console.log(\n        \"Source : \" + this.newForm.value.Source +'\\n' + \n        \"Destination : \" + this.newForm.value.Destination +'\\n' +\n        \"Date Of Booking : \" + this.newForm.value.DateOfBooking +'\\n' +\n        \"Date of Joining : \" + this.newForm.value.DateOfJourney +'\\n' +\n        \"No of Seats : \" + this.newForm.value.NoOfSeats);\n\n\n      this.bookingsService.postBookingsToDatabase(this.newForm.value).subscribe(\n        error => console.log(error),\n        data => console.log(data))\n        ;\n      //clear textboxes\n      this.newForm.reset();\n    }\n    else {\n      console.log(\"Invalid data\");\n    }\n  }\n\n}\n","<div class=\"container\">\n  <!-- flight deatils from flight table are shown here  -->\n   <div class=\"container py-6\" >\n    <h3 class=\"text-uppercase\">Search Flight by Destination</h3>\n    <form [formGroup]=\"newFlightForm\">\n      <div class=\"form-group form-row \">\n        <div class=\"col-md-3\">\n          <input type=\"text\" min=\"100\" class=\"form-control\" placeholder=\" Enter Destination \" name=\"Destination\"\n            formControlName=\"Destination\" [ngClass]=\"{\n                'is-valid': newForm.get('Destination').valid && newForm.get('Destination').touched,\n                'is-invalid': newForm.get('Destination').invalid && newForm.get('Destination').touched               \n              }\">\n          <span class=\"text-danger\"\n            *ngIf=\"newForm.get('Destination').invalid && newForm.get('Destination').touched && newForm.get('Destination').errors.required\">\n            Please Enter Destination .\n          </span>\n          \n        </div>\n        <div class=\"text-center col-md-2\">\n          <button class=\"btn btn-blue text-white \" (click)=\"toggleSearch()\">Search Flight</button>\n        </div>\n      </div>\n    </form>\n  </div> \n  <!-- flight details ended here  -->\n\n  <ng-container *ngIf=\"showFlightDetails\">\n    \n  <table class=\"table table-bordered table-striped\">\n    <thead>\n      <tr class=\"text-center text-uppercase\">\n        <th>Flight Id</th>\n        <th>Flight Name</th>\n        <th>Source</th>\n        <th>Destination</th>\n        <th>DepartureTime</th>\n        <th>Arrival Time</th>\n        <th>BaggageLimit</th>\n        <th>AvailableSeats</th>\n\n      </tr>\n    </thead>\n    <tr>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td></td>\n      \n    </tr>\n    <tbody>  \n       <tr *ngFor=\"let fly of flights\">\n          <td>{{fly.Destination}}</td>  \n          <td>{{fly.FlightName}}</td>  \n          <td>{{fly.Source}}</td>  \n          <td>{{fly.Destination}}</td>  \n          <td>{{fly.DepartureTime}}</td>  \n          <td>{{fly.Destination}}</td>  \n          <td>{{fly.BaggageLimit}}</td>  \n          <td>{{fly.AvailableSeats}}</td>  \n\n        </tr>  \n      </tbody>   \n  </table> \n  </ng-container>\n  <!-- flight Bookings are shown here  -->\n\n  \n  <ng-container  *ngIf=\"showBookingDetails\">\n    <div class=\"col-md-12 text-blue \">\n      <h2 class=\"border-bottom pb-2 mb-2\">Book Your Flight with us</h2>\n\n      <form [formGroup]=\"newForm\">\n\n        <div class=\"form-group form-row \">\n          <label for=\"source\" class=\"col-md-3 col-form-label\">Flying From:</label>\n          <label for=\"destination\" class=\"col-md-3 col-form-label\">Flying To:</label>\n          <label for=\"deptDatepicker\" class=\"col-md-2 col-form-label\">Date of Journey :</label>\n          <label for=\"class\" class=\"col-md-2 col-form-label\">Class:</label>\n          <label for=\"noOfSeats\" class=\"col-md-2 col-form-label\">Travellers:</label>\n        </div>\n\n        <div class=\"form-group form-row \">\n          <div class=\"col-md-3\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Flying from\" name=\"Source\" formControlName=\"Source\"\n              [ngClass]=\"{\n                  'is-valid': newForm.get('Source').valid && newForm.get('Source').touched,\n                  'is-invalid': newForm.get('Source').invalid && newForm.get('Source').touched\n                }\">\n\n            <span class=\"text-danger\"\n              *ngIf=\"newForm.get('Source').invalid && newForm.get('Source').touched && newForm.get('Source').errors.required\">\n              Please Enter your location </span>\n          </div>\n\n          <div class=\"col-md-3\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Destination \" name=\"destination\"\n              formControlName=\"Destination\" [ngClass]=\"{\n                  'is-valid': newForm.get('Destination').valid && newForm.get('Destination').touched,\n                  'is-invalid': newForm.get('Destination').invalid && newForm.get('Destination').touched               \n                }\">\n            <span class=\"text-danger\"\n              *ngIf=\"newForm.get('Destination').invalid && newForm.get('Destination').touched && newForm.get('Destination').errors.required\">\n              Please Enter your Destination .\n            </span>\n          </div>\n          <div class=\"col-md-2\">\n            <input matInput [matDatepicker]=\"deptDatepicker\" formControlName=\"DateOfJourney\" class=\"form-control\"\n              [ngClass]=\"{\n            'is-valid': newForm.get('DateOfJourney').valid && newForm.get('DateOfJourney').touched,\n            'is-invalid': newForm.get('DateOfJourney').invalid && newForm.get('DateOfJourney').touched\n          }\">\n            <mat-datepicker-toggle matSuffix [for]=\"deptDatepicker\"></mat-datepicker-toggle>\n            <mat-datepicker #deptDatepicker></mat-datepicker>\n            <span class=\"text-danger\"\n              *ngIf=\"newForm.get('DateOfJourney').invalid && newForm.get('DateOfJourney').touched && newForm.get('DateOfJourney').errors.required\">\n              Please Enter your DateOfJourney </span>\n          </div>\n          <div class=\"col-md-2\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Enter Class \" name=\"class\" formControlName=\"Class\"\n              [ngClass]=\"{\n            'is-valid': newForm.get('Class').valid && newForm.get('Class').touched,\n            'is-invalid': newForm.get('Class').invalid && newForm.get('Class').touched\n          }\">\n            <span class=\"text-danger\"\n              *ngIf=\"newForm.get('Class').invalid && newForm.get('Class').touched && newForm.get('Class').errors.required\">\n              Please Enter Class </span>\n          </div>\n\n          <div class=\"col-md-2\">\n            <input type=\"number\" min=\"0\" class=\"form-control\" placeholder=\"No of Seats \" name=\"noOfSeats\"\n              formControlName=\"NoOfSeats\" [ngClass]=\"{\n              'is-valid': newForm.get('NoOfSeats').valid && newForm.get('NoOfSeats').touched,\n              'is-invalid': newForm.get('NoOfSeats').invalid && newForm.get('NoOfSeats').touched \n            }\">\n            <span class=\"noOfSeats\"\n              *ngIf=\"newForm.get('NoOfSeats').invalid && newForm.get('NoOfSeats').touched && newForm.get('NoOfSeats').errors.required\">\n              Please Enter b/w 1-5 </span>\n          </div>\n        </div>\n        <div class=\"form-group form-row\">\n          <!-- <div class=\"text-center col-md-3\">\n          <button class=\"btn btn-blue text-white\" (click)=\"onSearchClick()\">Search</button>\n        </div> -->\n          <div class=\"text-center col-md-3\">\n            <button class=\"btn btn-blue text-white\" (click)=\"toggleBooking()\">Confirm Booking</button>\n          </div>\n        </div>\n        <div>\n          {{this.newForm.value | json}}\n        </div>\n\n        <!-- is-valid    : green\n            is-invalid : red -->\n\n\n      </form>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"showBookingDetails\">\n    <div class=\"col-md-12 text-blue \">\n      <h2 class=\"border-bottom pb-2 mb-2\">Booking Deatails are </h2>\n      <div>\n        Data\n      </div>\n      <div>\n        <div> Flying from : {{newForm.value.Source}} </div>\n        <div> Flying To : {{newForm.value.Destination}} </div>\n        <div> Date Of Journey : {{newForm.value.DateOfJourney}} </div>\n        <div> Class : {{newForm.value.Class}} </div>\n        <div> No of Travellers : {{newForm.value.NoOfSeats}} </div>\n                \n      </div>\n\n    </div>\n\n  </ng-container>\n\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n\n  transform(value: unknown, ...args: unknown[]): unknown {\n    return null;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Booking } from '../model/booking';\nimport { Flight } from '../model/flight';\nimport { catchError } from 'rxjs/operators'\nimport { throwError, Observable } from 'rxjs'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookingDataService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  apiPrefix: string = \"http://localhost:53981/\";\n\n  //Search by flight name\n  searchFlightsByDestination(Destination: string): Observable<any> {\n    //return this.httpClient.get(this.apiPrefix + `api/bookings?Source=${Source}&Destination=${Destination}`).pipe(catchError(this.errorHandler));\n    return this.httpClient.get(this.apiPrefix + `api/Flights?Destination=${Destination}`).pipe(catchError(this.errorHandler));\n\n  }\n  //Search by flight id \n  searchFlightsToDatabase(FlightId: number): Observable<any> {\n    //return this.httpClient.get(this.apiPrefix + `api/bookings?Source=${Source}&Destination=${Destination}`).pipe(catchError(this.errorHandler));\n    return this.httpClient.get(this.apiPrefix + `api/Flights?FlightId=${FlightId}`).pipe(catchError(this.errorHandler));\n\n  }\n  // post Bookings To Database\n  postBookingsToDatabase(bookings: Booking) {\n    return this.httpClient.post<Booking>(this.apiPrefix + `api/bookings`, bookings).pipe(catchError(this.errorHandler));\n  }\n\n  errorHandler(error: HttpErrorResponse) {\n    return throwError(error.status)\n  }\n}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[appTransform]'\n})\nexport class TransformDirective {\n\n  constructor() { }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}