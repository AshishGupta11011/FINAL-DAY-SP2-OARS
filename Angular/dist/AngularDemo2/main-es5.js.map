{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Bookings/Components/booking-deatils/booking-deatils.component.ts","webpack:///src/app/Bookings/Components/booking-deatils/booking-deatils.component.html","webpack:///src/app/Bookings/Services/booking-data.service.ts","webpack:///src/app/Bookings/pipes/safe/safe.pipe.ts","webpack:///src/app/Customers/Components/admin/admin.component.ts","webpack:///src/app/Customers/Components/admin/admin.component.html","webpack:///src/app/Customers/Components/booking/booking.component.ts","webpack:///src/app/Customers/Components/booking/booking.component.html","webpack:///src/app/Customers/Components/login-customer/login-customer.component.ts","webpack:///src/app/Customers/Components/login-customer/login-customer.component.html","webpack:///src/app/Customers/Components/page-not-found/page-not-found.component.ts","webpack:///src/app/Customers/Components/page-not-found/page-not-found.component.html","webpack:///src/app/Customers/Components/profile/profile.component.ts","webpack:///src/app/Customers/Components/profile/profile.component.html","webpack:///src/app/Customers/Components/register-customer/register-customer.component.ts","webpack:///src/app/Customers/Components/register-customer/register-customer.component.html","webpack:///src/app/Customers/Models/Customer.ts","webpack:///src/app/Customers/Models/User.ts","webpack:///src/app/Customers/Services/Authenticate.service.ts","webpack:///src/app/Customers/Services/Guard/auth.guard.ts","webpack:///src/app/Customers/Services/Interceptor/token-interceptor.service.ts","webpack:///src/app/Customers/Services/Register.service.ts","webpack:///src/app/Passengers/Components/passenger-list/passenger-list.component.ts","webpack:///src/app/Passengers/Components/passenger-list/passenger-list.component.html","webpack:///src/app/Passengers/Components/passenger/passenger.component.ts","webpack:///src/app/Passengers/Components/passenger/passenger.component.html","webpack:///src/app/Passengers/Services/passenger.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","Class","BookingDeatilsComponent","bookingsService","showFlightDetails","showBookingContent","showBookingDetails","bookings","flights","newFlightForm","FlightId","required","FlightName","Source","Destination","DepartureTime","ArrivalTime","NoOfSeats","max","min","BaggageLimit","AvailableSeats","newForm","DateOfBooking","DateOfJourney","TicketFare","CustomerId","onSearchClick","console","log","onSubmitClick","valid","searchFlightsByDestination","value","subscribe","error","data","reset","postBookingsToDatabase","selector","templateUrl","styleUrls","BookingDataService","httpClient","apiPrefix","get","pipe","errorHandler","post","status","providedIn","SafePipe","name","AdminComponent","register","router","isAdmin","customerList","GetCustomer","res","navigate","window","alert","BookingComponent","LoginCustomerComponent","authenticate","token","UserCred","AuthenticateUser","localStorage","setItem","onLogin","PageNotFoundComponent","ProfileComponent","custservice","customerModel","GetCustomerById","UpdateCustmomer","DeleteCustomer","UpdateCust","RegisterCustomerComponent","EmailAlreadyExists","Registered","AddCustomer","CreateCust","Customer","Name","Email","Pwd","DOB","WalletBalance","ResidingAddress","PhoneNo","User","Password","AuthenticateService","http","url","user","getItem","removeItem","AuthGuard","Loggedin","TokenInterceptorService","injector","next","authService","modifiedReq","clone","setHeaders","Authorization","getToken","handle","RegisterService","customer","put","PassengerListComponent","service","getPassenger","passengerDetail","passengerList","PassengerComponent","passengers","email","pattern","passenger","BookingId","EmailId","Gender","Age","Nationality","substring","toUpperCase","addPassenger","resData","onAddClick","PassengerService","pid","newPassenger","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","useHash","imports","AppComponent","title","AppModule","provide","useClass","multi","declarations","providers","bootstrap","schemas","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, Input } from '@angular/core';\r\n\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Booking } from '../../Models/booking';\r\n\r\nimport { BookingDataService } from '../../Services/booking-data.service';\r\nimport { Flight } from 'src/app/Flights/Models/flight';\r\n\r\n\r\n@Component({\r\n  selector: 'app-booking-deatils',\r\n  templateUrl: './booking-deatils.component.html',\r\n  styleUrls: ['./booking-deatils.component.css']\r\n})\r\nexport class BookingDeatilsComponent implements OnInit {\r\n  showFlightDetails: boolean = true;\r\n  showBookingContent: boolean = true;\r\n  showBookingDetails: boolean = true;\r\n\r\n  // pipe \r\n  //@Input() today;\r\n  //properties\r\n  bookings: Booking[];\r\n  flights : Flight[];\r\n  //create property for reactive form\r\n  newForm: FormGroup;\r\n  newFlightForm: FormGroup;\r\n \r\n\r\n  //constructor\r\n  constructor(private bookingsService: BookingDataService) {\r\n    this.bookings = [];\r\n    this.flights = [];\r\n   \r\n    // reactive form \r\n    this.newFlightForm = new FormGroup({\r\n      \r\n      FlightId: new FormControl(100,[Validators.required]),\r\n      FlightName: new FormControl(\"FC\"),\r\n      Source: new FormControl(\"DEL\", [Validators.required]),\r\n      Destination: new FormControl(\"JAI\", [Validators.required]),\r\n      DepartureTime: new FormControl(\"2020-05-18T18:30:00.000Z\"),\r\n      ArrivalTime: new FormControl(\"2020-05-18T18:30:00.000Z\",[Validators.required]),\r\n      NoOfSeats: new FormControl(1,[Validators.max(5), Validators.min(1)]),\r\n      BaggageLimit: new FormControl(50),\r\n      AvailableSeats: new FormControl(10),\r\n      \r\n    });\r\n\r\n    //reactive form\r\n    this.newForm = new FormGroup({\r\n      \r\n      FlightId: new FormControl(100,[Validators.required]),\r\n      Class: new FormControl(\"FC\"),\r\n      Source: new FormControl(\"DEL\", [Validators.required]),\r\n      Destination: new FormControl(\"JAI\", [Validators.required]),\r\n      DateOfBooking: new FormControl(\"2020-05-18T18:30:00.000Z\"),\r\n      DateOfJourney: new FormControl(\"2020-05-18T18:30:00.000Z\",[Validators.required]),\r\n      NoOfSeats: new FormControl(1,[Validators.max(5), Validators.min(1)]),\r\n      TicketFare: new FormControl(5000),\r\n      CustomerId: new FormControl(100),\r\n      \r\n    });\r\n\r\n\r\n  }\r\n  \r\n  ngOnInit() {\r\n    \r\n   \r\n  }\r\n\r\n  // Directive for showing after button click after search \r\n  // public showFlightDetails:boolean = false;\r\n  // public buttonName:any = 'Show';\r\n  toggleSearch()\r\n  { \r\n\r\n    // CHANGE THE Button\r\n    if(this.showFlightDetails)  \r\n        {this.onSearchClick();\r\n      console.log(\"Search Clicked\");\r\n        }\r\n    else\r\n     console.log(\"Search Clicked Else Part\");    \r\n\r\n  }\r\n\r\n  // Directive for showing after button click after booking\r\n  toggleBooking()\r\n  { \r\n\r\n    // CHANGE THE Button\r\n    if(this.showBookingDetails)  \r\n        {this.onSubmitClick();\r\n      console.log(\"Submit Clicked\");\r\n        }\r\n    else\r\n     console.log(\"Submit Clicked Else Part\");    \r\n\r\n  }\r\n  \r\n\r\n  // Search Flight by id\r\n  onSearchClick()\r\n  {\r\n    console.log(\" Part\");\r\n    if (this.newForm.valid == true) {\r\n      //this.bookingsService.searchFlightsToDatabase(this.newFlightForm.value.FlightId)\r\n      this.bookingsService.searchFlightsByDestination(this.newFlightForm.value.Destination)\r\n      .subscribe(\r\n        error => console.log(error),\r\n        data => console.log(data))\r\n        ;\r\n      //clear textboxes//\r\n      this.newForm.reset();\r\n    }\r\n    else {\r\n      console.log(\"Invalid data\");\r\n    }\r\n\r\n  }\r\n  \r\n  onSubmitClick() {\r\n    if (this.newForm.valid == true) {\r\n      //accessing value of any form control (textbox etc.)\r\n      console.log(\r\n        \"Source : \" + this.newForm.value.Source +'\\n' + \r\n        \"Destination : \" + this.newForm.value.Destination +'\\n' +\r\n        \"Date Of Booking : \" + this.newForm.value.DateOfBooking +'\\n' +\r\n        \"Date of Joining : \" + this.newForm.value.DateOfJourney +'\\n' +\r\n        \"No of Seats : \" + this.newForm.value.NoOfSeats);\r\n\r\n\r\n      this.bookingsService.postBookingsToDatabase(this.newForm.value).subscribe(\r\n        error => console.log(error),\r\n        data => console.log(data))\r\n        ;\r\n      //clear textboxes\r\n      this.newForm.reset();\r\n    }\r\n    else {\r\n      console.log(\"Invalid data\");\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n \r\n  <!-- flight Bookings are shown here  -->\r\n\r\n  \r\n  <ng-container  *ngIf=\"showBookingDetails\">\r\n    <div class=\"col-md-12 text-blue \">\r\n      <h2 class=\"border-bottom pb-2 mb-2\">Book Your Flight with us</h2>\r\n\r\n      <form [formGroup]=\"newForm\">\r\n\r\n        <div class=\"form-group form-row \">\r\n          <label for=\"source\" class=\"col-md-3 col-form-label\">Flying From:</label>\r\n          <label for=\"destination\" class=\"col-md-3 col-form-label\">Flying To:</label>\r\n          <label for=\"deptDatepicker\" class=\"col-md-2 col-form-label\">Date of Journey :</label>\r\n          <label for=\"class\" class=\"col-md-2 col-form-label\">Class:</label>\r\n          <label for=\"noOfSeats\" class=\"col-md-2 col-form-label\">Travellers:</label>\r\n        </div>\r\n\r\n        <div class=\"form-group form-row \">\r\n          <div class=\"col-md-3\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Flying from\" name=\"Source\" formControlName=\"Source\"\r\n              [ngClass]=\"{\r\n                  'is-valid': newForm.get('Source').valid && newForm.get('Source').touched,\r\n                  'is-invalid': newForm.get('Source').invalid && newForm.get('Source').touched\r\n                }\">\r\n\r\n            <span class=\"text-danger\"\r\n              *ngIf=\"newForm.get('Source').invalid && newForm.get('Source').touched && newForm.get('Source').errors.required\">\r\n              Please Enter your location </span>\r\n          </div>\r\n\r\n          <div class=\"col-md-3\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Destination \" name=\"destination\"\r\n              formControlName=\"Destination\" [ngClass]=\"{\r\n                  'is-valid': newForm.get('Destination').valid && newForm.get('Destination').touched,\r\n                  'is-invalid': newForm.get('Destination').invalid && newForm.get('Destination').touched               \r\n                }\">\r\n            <span class=\"text-danger\"\r\n              *ngIf=\"newForm.get('Destination').invalid && newForm.get('Destination').touched && newForm.get('Destination').errors.required\">\r\n              Please Enter your Destination .\r\n            </span>\r\n          </div>\r\n          <div class=\"col-md-2\">\r\n            <input matInput [matDatepicker]=\"deptDatepicker\" formControlName=\"DateOfJourney\" class=\"form-control\"\r\n              [ngClass]=\"{\r\n            'is-valid': newForm.get('DateOfJourney').valid && newForm.get('DateOfJourney').touched,\r\n            'is-invalid': newForm.get('DateOfJourney').invalid && newForm.get('DateOfJourney').touched\r\n          }\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"deptDatepicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #deptDatepicker></mat-datepicker>\r\n            <span class=\"text-danger\"\r\n              *ngIf=\"newForm.get('DateOfJourney').invalid && newForm.get('DateOfJourney').touched && newForm.get('DateOfJourney').errors.required\">\r\n              Please Enter your DateOfJourney </span>\r\n          </div>\r\n          <div class=\"col-md-2\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Enter Class \" name=\"class\" formControlName=\"Class\"\r\n              [ngClass]=\"{\r\n            'is-valid': newForm.get('Class').valid && newForm.get('Class').touched,\r\n            'is-invalid': newForm.get('Class').invalid && newForm.get('Class').touched\r\n          }\">\r\n            <span class=\"text-danger\"\r\n              *ngIf=\"newForm.get('Class').invalid && newForm.get('Class').touched && newForm.get('Class').errors.required\">\r\n              Please Enter Class </span>\r\n          </div>\r\n\r\n          <div class=\"col-md-2\">\r\n            <input type=\"number\" min=\"0\" class=\"form-control\" placeholder=\"No of Seats \" name=\"noOfSeats\"\r\n              formControlName=\"NoOfSeats\" [ngClass]=\"{\r\n              'is-valid': newForm.get('NoOfSeats').valid && newForm.get('NoOfSeats').touched,\r\n              'is-invalid': newForm.get('NoOfSeats').invalid && newForm.get('NoOfSeats').touched \r\n            }\">\r\n            <span class=\"noOfSeats\"\r\n              *ngIf=\"newForm.get('NoOfSeats').invalid && newForm.get('NoOfSeats').touched && newForm.get('NoOfSeats').errors.required\">\r\n              Please Enter b/w 1-5 </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group form-row\">\r\n          <!-- <div class=\"text-center col-md-3\">\r\n          <button class=\"btn btn-blue text-white\" (click)=\"onSearchClick()\">Search</button>\r\n        </div> -->\r\n          <div class=\"text-center col-md-3\">\r\n            <button class=\"btn btn-blue text-white\" (click)=\"toggleBooking()\">Confirm Booking</button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {{this.newForm.value | json}}\r\n        </div>\r\n\r\n        <!-- is-valid    : green\r\n            is-invalid : red -->\r\n\r\n\r\n      </form>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"showBookingDetails\">\r\n    <div class=\"col-md-12 text-blue \">\r\n      <h2 class=\"border-bottom pb-2 mb-2\">Booking Deatails are </h2>\r\n      <div>\r\n        Data\r\n      </div>\r\n      <div>\r\n        <div> Flying from : {{newForm.value.Source}} </div>\r\n        <div> Flying To : {{newForm.value.Destination}} </div>\r\n        <div> Date Of Journey : {{newForm.value.DateOfJourney}} </div>\r\n        <div> Class : {{newForm.value.Class}} </div>\r\n        <div> No of Travellers : {{newForm.value.NoOfSeats}} </div>\r\n                \r\n      </div>\r\n\r\n    </div>\r\n\r\n  </ng-container>\r\n\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators'\r\nimport { throwError, Observable } from 'rxjs'\r\nimport { Booking } from '../Models/booking';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BookingDataService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  apiPrefix: string = \"http://localhost:53981/\";\r\n\r\n  //Search by flight name\r\n  searchFlightsByDestination(Destination: string): Observable<any> {\r\n    //return this.httpClient.get(this.apiPrefix + `api/bookings?Source=${Source}&Destination=${Destination}`).pipe(catchError(this.errorHandler));\r\n    return this.httpClient.get(this.apiPrefix + `api/Flights?Destination=${Destination}`).pipe(catchError(this.errorHandler));\r\n\r\n  }\r\n  //Search by flight id \r\n  searchFlightsToDatabase(FlightId: number): Observable<any> {\r\n    //return this.httpClient.get(this.apiPrefix + `api/bookings?Source=${Source}&Destination=${Destination}`).pipe(catchError(this.errorHandler));\r\n    return this.httpClient.get(this.apiPrefix + `api/Flights?FlightId=${FlightId}`).pipe(catchError(this.errorHandler));\r\n\r\n  }\r\n  // post Bookings To Database\r\n  postBookingsToDatabase(bookings: Booking) {\r\n    return this.httpClient.post<Booking>(this.apiPrefix + `api/bookings`, bookings).pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n  errorHandler(error: HttpErrorResponse) {\r\n    return throwError(error.status)\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'safe'\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n\r\n  transform(value: unknown, ...args: unknown[]): unknown {\r\n    return null;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\nimport { error } from 'protractor';\nimport { Router } from '@angular/router';\nimport { Customer } from '../../Models/Customer';\nimport { RegisterService } from '../../Services/Register.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  customerList : Customer[];\n\n  isAdmin : boolean = false;\n\n  constructor(private register : RegisterService,private router : Router) {\n    this.customerList= [];\n   }\n\n  ngOnInit(): void {\n  \n    this.register.GetCustomer().subscribe(\n      res => {this.isAdmin = true;console.log(\"user is admin\");this.customerList = res},\n      error => {console.log(error);this.router.navigate(['/booking']);window.alert(\"Only For Admin\");}\n    )\n  }\n\n}\n","<p>admin works!</p>\n\n<div *ngIf = \"isAdmin\">\n    <table class=\"table\">\n        <thead>\n            <th>Name</th>\n            <th>Email</th>\n        </thead>\n        <tbody>\n            <div *ngFor = \"let customer of customerList\">\n                <td>{{customer.Name}}</td>\n                <td>{{customer.Email}}</td>\n            </div>\n        </tbody>\n    </table>\n</div>\n<div  *ngIf = \"!isAdmin\">\n<div *ngIf = \"!isAdmin\">\n   <h1 class=\"text-center mt-5\">Only For Admin User</h1> \n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-booking',\n  templateUrl: './booking.component.html',\n  styleUrls: ['./booking.component.css']\n})\nexport class BookingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  \n\n}\n","<p>booking works!</p>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { AuthenticateService } from '../../Services/Authenticate.service';\nimport { User } from '../../Models/User';\n\n@Component({\n  selector: 'app-login-customer',\n  templateUrl: './login-customer.component.html',\n  styleUrls: ['./login-customer.component.css']\n})\nexport class LoginCustomerComponent implements OnInit {\n\n  constructor(private authenticate : AuthenticateService, private router : Router) { }\n  token = \"\";\n\n  ngOnInit(): void {\n  }\n  UserCred:User = new User();\n\n  onLogin()\n  {\n    \n    this.authenticate.AuthenticateUser(this.UserCred).subscribe(\n     \n      res => {\n        localStorage.setItem(\"token\",res)\n        console.log(res)\n        this.router.navigate(['/booking']);\n\n      },\n      error => {\n        window.alert(\"Wrong User Credentials\");\n        console.log(error)\n      }\n    )\n  }\n\n\n\n\n\n\n}\n","<!-- <nav class=\"navbar navbar-expand-sm bg-secondary navbar-dark\">\n\n    <ul class=\"navbar-nav mx-auto\">\n        <li>\n            <h1>OARS Airline</h1>\n        </li>\n        <li> <a class=\"navbar-brand\" href=\"#\">\n                <img style='height: 50px;width: 80px;' src=\"\\assets\\Images\\Airline.png\" alt=\"Airline\">\n            </a>\n        </li>\n    </ul>\n    <ul class=\"navbar-nav float-left\">\n        <li class=\"nav-item active \">\n            <a class=\"nav-link \"  routerLink = '/login' routerLinkActive = 'Active'>Login</a>\n        </li>\n        <li class=\"nav-item active \">\n            <a class=\"nav-link \"  routerLink = '/booking' routerLinkActive = 'Active'>Book Ticket</a>\n        </li>\n    </ul>\n</nav> -->\n<div class=\"row \" style=\"margin: 100px;\">\n    <div class=\"column mx-auto\">\n        <div class=\"card border-primary shadow bg-white\">\n            <div class=\"card header \">\n                <img class=\"card-img-top w-25 h-25  mx-auto\" src=\"/assets/images/User.jpg\" alt=\"User\">\n            </div>\n            <div class=\"card-body\">\n                <form #userform='ngForm'>\n                    <h4 class=\"text-center \">Login</h4>\n                    <div class=\"form-group\">\n\n                        <label for=\"email\">Email:</label>\n                        <input class=\"form-control \" name=\"email\" #email='ngModel' type=\"text\"\n                            pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" placeholder=\"exmaple123@gmail.com\"\n                            [class.is-invalid]=\"email.invalid && email.touched\" required [(ngModel)]='UserCred.Email'>\n                        <!-- <small class=\"text-danger\" [class.d-none]=\"email.untouched || email.valid\">Invalid\n                            Username</small> -->\n                        <div *ngIf=\"email.errors && email.touched\">\n                            <small class=\"text-danger\" *ngIf=\"email.errors.pattern\">pattern is wrong</small>\n                            <small class=\"text-danger\" *ngIf=\"email.errors.required\">email is required</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"password\">Password</label>\n                        <input class=\"form-control\" name=\"password\" #password=\"ngModel\" type=\"password\"\n                            [class.is-invalid]=\"password.invalid && password.touched\" required\n                            [(ngModel)]='UserCred.Password'>\n                        <small class=\"text-danger\" [class.d-none]=\"password.valid || password.untouched\">Invalid\n                            password</small>\n                    </div>\n\n                    <button [disabled]=\"userform.form.invalid\" type=\"submit\" class=\" btn btn-primary mx-auto\" (click) = \"onLogin()\">Login</button>\n\n                </form>\n            </div>\n            <div class=\"crad-footer  bg-secondary\">\n                <h6 class=\"text-center\" style=\"color: aliceblue;\">New User? <a  routerLink = '/Register' routerLinkActive = 'Active'>SignUp</a></h6>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"text-center\">404</h1>\n<h1 class=\"text-center\">PageNotFOUND</h1>\n","import { Component, OnInit } from '@angular/core';\n\n\nimport { Router } from '@angular/router';\nimport { strict } from 'assert';\nimport { Customer } from '../../Models/Customer';\nimport { RegisterService } from '../../Services/Register.service';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  id:number ;\n  \n\n\n  customerModel: Customer = new Customer();\n  constructor(private custservice: RegisterService , private router : Router ) { \n    this.id = 100;\n  }\n\n\n\n  ngOnInit(): void {\n    this.custservice.GetCustomerById(this.id).subscribe(\n      req => { this.customerModel = req ;},\n      error => {console.log(error)}\n      )\n\n  }\n\n  \n  UpdateCust() {\n\n    this.custservice.UpdateCustmomer(this.id,this.customerModel)\n      .subscribe(\n        \n        req => { console.log(req) ; window.alert(\"Customer Updated\")},\n        error => {console.log(error) ;}\n         \n      )\n  }\n\n  DeleteCust(){\n    this.custservice.DeleteCustomer(this.id).subscribe(\n      req => {console.log(req) ;  window.alert(\"Customer Deleted\")},\n      error => console.log(error)\n      \n    )\n  }\n\n\n}\n","<div class=\"container-fluid \">\n{{customerModel | json}}\n    <div class=\"row\">\n        <!-- {{customerModel | json}} -->\n        <div class=\" card mx-auto w-75 rounded-lg border border-success shadow  border-top-0 mt-1 mb-3\">\n\n            <div class=\"row\">\n                            <div class=\"col card-body w-50  \">\n\n\n                <form #userform=\"ngForm\" novalidate (ngSubmit)=UpdateCust()>\n\n                    <div class=\"form-group\">\n                        <label for=\"name\">Name:</label>\n                        <input type=\"text\" name=\"name\" #name=\"ngModel\" class=\"form-control\"\n                            [class.is-invalid]=\"name.invalid && name.touched\" required [(ngModel)]=\"customerModel.Name\">\n                        <small class=\"text-danger\" [class.d-none]=\"name.valid || name.untouched\">invalid\n                            Name</small>\n                    </div>\n\n\n                    <div class=\"form-group\">\n                        <label class=\"mt-2\" for=\"email\">Email:</label>\n                        <input disabled type=\"text\" name=\"email\" pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                            #email=\"ngModel\" class=\"form-control\" [class.is-invalid]=\"email.invalid && email.touched\"\n                            required [(ngModel)]=\"customerModel.Email\">\n                        <div *ngIf=\"email.errors && email.touched\">\n                            <small class=\"text-danger\" *ngIf=\"email.errors.pattern\">pattern is wrong</small>\n                            <small class=\"text-danger\" *ngIf=\"email.errors.required\">email is required</small>\n                        </div>\n                    </div>\n\n\n                    <div class=\"form-group\">\n                        <label class=\"mt-2\" for=\"password\">Password:</label>\n                        <input type=\"password\" name=\"password\" #password=\"ngModel\" class=\"form-control\"\n                            [class.is-invalid]=\"password.invalid && password.touched\" required\n                            [(ngModel)]=\"customerModel.Pwd\">\n                        <small class=\"text-danger\" [class.d-none]=\"password.valid || password.untouched\">invalid\n                            Password</small>\n                    </div>\n\n\n                    <div class=\"form-group\">\n                        <label class=\"mt-2\" for=\"dob\">DateOfBirth:</label>\n                        <input type=\"date\" name=\"dob\"  #dob=\"ngModel\" class=\"form-control\"\n                            [class.is-invalid]=\"dob.invalid && dob.touched\" required [(ngModel)]=\"customerModel.DOB \">\n                        <small class=\"text-danger\" [class.d-none]=\"dob.valid || dob.untouched\">invalid             \n                            Dateofbirth</small>\n                    </div>\n\n\n                    <div class=\"form-group\">\n                        <label class=\"mt-2\" for=\"balance\">WalletBalance:</label>\n                        <input type=\"number\" name=\"balance\" #balance=\"ngModel\" pattern=\"^[1-9]\\d*$\" class=\"form-control\"\n                            [class.is-invalid]=\"balance.invalid && balance.touched\" required\n                            [(ngModel)]=\"customerModel.WalletBalance\">\n                        <small class=\"text-danger\" [class.d-none]=\"balance.valid || balance.untouched\">invalid\n                            Amount</small>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"mt-2\" for=\"phoneno\">Phone No:</label>\n                        <input type=\"number\" name=\"phoneno\" #phoneno=\"ngModel\" pattern=\"^[1-9]\\d*$\" class=\"form-control\"\n                            [class.is-invalid]=\"phoneno.invalid && phoneno.touched\" required\n                            [(ngModel)]=\"customerModel.PhoneNo\">\n                        <small class=\"text-danger\" [class.d-none]=\"phoneno.valid || phoneno.untouched\">invalid\n                            phoneno</small>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"mt-2\" for=\"address\">Address:</label>\n                        <input type=\"text\" name=\"address\" #address=\"ngModel\" class=\"form-control\"\n                            [class.is-invalid]=\"address.invalid && address.touched\" required\n                            [(ngModel)]=\"customerModel.ResidingAddress\">\n                        <small class=\"text-danger\" [class.d-none]=\"address.valid || address.untouched\">invalid\n                            Address</small>\n                    </div>\n\n                    <div class=\" mx-auto\" style=\"width: 300px;\">\n                        <button type=\"submit\" [disabled]=\"userform.form.invalid \" class=\"btn btn-primary\">Update\n                            Account</button>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col\">\n                <h1  class=\"mt-5 ml-3\">My Profile</h1>\n                <img class=\"pt-4\" src=\"assets\\Images\\User.jpg\" alt=\"profile\">\n                <button style=\"margin-top: 200px;margin-left: 40px;\" class=\"btn btn-primary \">Delete Account</button>\n            \n        </div>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { error } from 'protractor';\nimport { Route } from '@angular/compiler/src/core';\nimport { Router } from '@angular/router';\nimport { Customer } from '../../Models/Customer';\nimport { RegisterService } from '../../Services/Register.service';\n\n@Component({\n  selector: 'app-register-customer',\n  templateUrl: './register-customer.component.html',\n  styleUrls: ['./register-customer.component.css']\n})\nexport class RegisterCustomerComponent implements OnInit {\n  public EmailAlreadyExists: boolean = false;\n  Registered: boolean = false;\n  customerModel: Customer = new Customer();\n  constructor(private custservice: RegisterService , private router : Router ) { }\n\n\n\n  ngOnInit(): void {\n  }\n\n  CreateCust() {\n\n    this.custservice.AddCustomer(this.customerModel)\n      .subscribe(\n        \n        data => { \n          \n          if(data == 409){window.alert('Email Already Exists')};\n          if(data == 201){this.Registered = true;window.alert('User Account Created')};\n           console.log(\"Success\",data) \n\n        },error => {console.log(error)  }\n         \n      )\n\n      if(this.Registered){\n        this.router.navigate(['login']);\n      }\n  }\n\n\n}\n\n\n\n\n\n","<!-- <nav class=\"navbar navbar-expand-sm bg-secondary navbar-dark\">\n\n    <ul class=\"navbar-nav mx-auto\">\n        <li>\n            <h1>OARS Airline</h1>\n        </li>\n        <li> <a class=\"navbar-brand\" href=\"#\">\n                <img style='height: 50px;width: 80px;' src=\"\\assets\\Images\\Airline.png\" alt=\"Airline\">\n            </a>\n        </li>\n    </ul>\n    <ul class=\"navbar-nav float-left\">\n        <li class=\"nav-item active \">\n            <a class=\"nav-link \"  routerLink = '/login' routerLinkActive = 'Active'>Login</a>\n        </li>\n\n    </ul>\n</nav> -->\n<div class=\"container-fluid \" >\n    \n       <!-- {{customerModel | json}} -->\n       <div  class=\" card mx-auto w-50  rounded-lg border border-success shadow  border-top-0 mt-1 mb-3\">\n           <div class=\"card-header bg-primary\">\n               <h1>Create Account</h1>\n           </div>\n           \n           <div class=\"card-body  \">\n<form #userform = \"ngForm\" novalidate (ngSubmit)=CreateCust() >\n    \n    <div class=\"form-group\">\n        <label for=\"name\">Name:</label>\n        <input type=\"text\" name=\"name\" #name = \"ngModel\" class=\"form-control form-control-sm\"  [class.is-invalid] = \"name.invalid && name.touched\" required [(ngModel)] = \"customerModel.Name\">\n        <small class=\"text-danger\" [class.d-none] = \"name.valid || name.untouched\">invalid Name</small>\n    </div>\n\n\n    <div class=\"form-group\">\n        <label class=\"mt-1\"  for=\"email\">Email:</label>\n        <input type=\"text\" name=\"email\"  pattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"  #email = \"ngModel\" class=\"form-control form-control-sm\"  [class.is-invalid] = \"email.invalid && email.touched\" required [(ngModel)] = \"customerModel.Email\">\n        <div *ngIf = \"email.errors && email.touched\">\n            <small class=\"text-danger\" *ngIf = \"email.errors.pattern\">pattern is wrong</small> \n            <small class=\"text-danger\" *ngIf = \"email.errors.required\">email is required</small>\n        </div>\n    </div>\n\n\n    <div class=\"form-group\">\n        <label class=\"mt-1\"  for=\"password\">Password:</label>\n         <input type=\"password\" name=\"password\" #password = \"ngModel\" class=\"form-control form-control-sm\"  [class.is-invalid] = \"password.invalid && password.touched\" required [(ngModel)] = \"customerModel.Pwd\">\n        <small class=\"text-danger\" [class.d-none] = \"password.valid || password.untouched\">invalid Password</small>\n    </div>\n\n \n       <div class=\"form-group\">\n        <label class=\"mt-1\" for=\"dob\">DateOfBirth:</label>\n        <input type=\"date\" name=\"dob\" #dob = \"ngModel\" class=\"form-control form-control-sm\"  [class.is-invalid] = \"dob.invalid && dob.touched\" required [(ngModel)] = \"customerModel.DOB\">\n        <small class=\"text-danger\" [class.d-none] = \"dob.valid || dob.untouched\">invalid Dateofbirth</small>\n    </div>\n\n\n        <div class=\"form-group\">\n        <label class=\"mt-2\" for=\"balance\">WalletBalance:</label>\n        <input type=\"number\" name=\"balance\" #balance = \"ngModel\" pattern = \"^[1-9]\\d*$\" class=\"form-control form-control-sm\"  [class.is-invalid] = \"balance.invalid && balance.touched\" required [(ngModel)] = \"customerModel.WalletBalance\">\n        <small class=\"text-danger\" [class.d-none] = \"balance.valid || balance.untouched\">invalid Amount</small>\n    </div>\n\n    <div class=\"form-group\">\n        <label class=\"mt-2\" for=\"address\">Address:</label>\n        <input type=\"text\" name=\"address\" #address = \"ngModel\" class=\"form-control form-control-sm\"  [class.is-invalid] = \"address.invalid && address.touched\" required [(ngModel)] = \"customerModel.ResidingAddress\">\n        <small class=\"text-danger\" [class.d-none] = \"address.valid || address.untouched\">invalid Address</small>\n    </div>\n\n    <div class=\"form-group\">\n        <label class=\"mt-2\" for=\"phoneno\">Phone No:</label>\n        <input type=\"number\" name=\"phoneno\" #phoneno = \"ngModel\"  class=\"form-control form-control-sm\"  [class.is-invalid] = \"phoneno.invalid && phoneno.touched\" required [(ngModel)] = \"customerModel.PhoneNo\">\n        <small class=\"text-danger\" [class.d-none] = \"phoneno.valid || phoneno.untouched\">invalid Phone No</small>\n    </div>\n\n    <div class=\" mx-auto\" style=\"width: 300px;\">\n        <button type=\"submit\" [disabled]=\"userform.form.invalid \" class=\"btn btn-primary\" >Create Account</button>\n    </div>\n</form>\n\n</div>\n</div> \n</div>\n\n","\r\n\r\nexport class Customer\r\n{\r\n    constructor(\r\n        public Name:string = '',\r\n        public Email:string = '',\r\n        public Pwd:string = '',\r\n        public DOB:Date = null,\r\n        public WalletBalance:number = null,\r\n        public ResidingAddress :string = '',\r\n        public PhoneNo :number = null\r\n    ){}\r\n}\r\n\r\n","export class User\r\n{\r\n\r\n    constructor(\r\n        public Email:string = '' ,\r\n        public Password:string = ''\r\n        \r\n    )\r\n    {}\r\n}","import { Injectable } from '@angular/core';\n\nimport {  HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport {catchError} from \"rxjs/operators\"\nimport {throwError} from \"rxjs\"\nimport { Router } from '@angular/router';\nimport { User } from '../Models/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticateService {\n\n  url :string = 'http://localhost:53981/api/Authenticate';\n\n  constructor(private http : HttpClient ,private router : Router) { }\n\n\n    AuthenticateUser(user : User)\n    {\n       return this.http.post<any>(this.url,user).pipe(catchError(this.errorHandler))\n    }\n\n    errorHandler(error:HttpErrorResponse)\n    {\n      return throwError(error)\n    }\n//isLoggedin\n    Loggedin(){\n      return !!(localStorage.getItem('token') )\n      \n    }\n\n    getToken(){\n      return localStorage.getItem('token');\n    }\n\n    Logout(){\n      localStorage.removeItem('token');\n      this.router.navigate(['/login']);\n\n    }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router} from '@angular/router';\nimport { AuthenticateService } from '../Authenticate.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authenticate : AuthenticateService, private router : Router){}\n  canActivate():boolean{\n    if(this.authenticate.Loggedin()){return true}\n    else{\n      this.router.navigate(['/login']);\n      return false;\n\n    }\n  }\n \n}\n  \n\n","import { Injectable ,Injector} from '@angular/core';\nimport { HttpInterceptor } from \"@angular/common/http\"\nimport { AuthenticateService } from '../Authenticate.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private injector : Injector) { }\n \n  intercept(req, next) {\n    let authService = this.injector.get(AuthenticateService)\n    let modifiedReq = req.clone(\n      {\n        setHeaders: {\n          Authorization: `Bearer ${authService.getToken()}`\n        }\n      }\n    )\n    \n    return next.handle(modifiedReq);\n\n  }\n}\n","import { Injectable, ErrorHandler } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http'\n\nimport { catchError } from 'rxjs/operators'\nimport { throwError } from 'rxjs';\nimport { Customer } from '../Models/Customer';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n//registerservice\nexport class RegisterService {\n  // urlfake = 'http://localhost:53981/api/Customers/GetCustomerByname'\n\n  url: string = 'http://localhost:53981//api/Customers';\n\n  constructor(private http: HttpClient) { }\n\n  //Create Customer\n  AddCustomer(customer: Customer) {\n\n    return this.http.post<any>(this.url, customer).pipe(catchError(this.errorHandler))\n  }\n\n  //Get Customer\n  GetCustomer() {\n    return this.http.get<any>(this.url).pipe(catchError(this.errorHandler))\n  }\n  \n  //Get Customer By Id\n  GetCustomerById(id: number) {\n    return this.http.get<any>(this.url + `/${id}`).pipe(catchError(this.errorHandler))\n  }\n\n  //update Customer\n  UpdateCustmomer(id: number, customer: Customer) {\n    return this.http.put<any>(this.url + `/${id}`, customer).pipe(catchError(this.errorHandler))\n  }\n\n  //Delete Customer\n  DeleteCustomer(id: number) {\n    return this.http.delete<any>(this.url + `/${id}`).pipe(catchError(this.errorHandler))\n\n  }\n  \n  //method to get Customer by Email\n\n  // getCustomerByName(name:string)\n  // { \n  //   // const options = name ?{ params: new HttpParams().set('name', name) } : {};\n  //   const httpOptions = {\n  //     headers: new HttpHeaders({\n\n  //       'name': '${this.name}'\n  //     })\n  //   };\n  //   return this.http.get<any>(this.urlfake,httpOptions).pipe(catchError(this.errorHandler))\n  // }\n\n  //method to handle errors\n  errorHandler(error: HttpErrorResponse) {\n    return throwError(error.status);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { Passenger } from '../../Models/passenger.model';\r\nimport { PassengerService } from '../../Services/passenger.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-passenger-list',\r\n  templateUrl: './passenger-list.component.html',\r\n  styleUrls: ['./passenger-list.component.css']\r\n})\r\nexport class PassengerListComponent implements OnInit {\r\n  passengerList: Passenger[];\r\n\r\n  constructor( private service:PassengerService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.service.getPassenger().subscribe((passengerDetail: Passenger[]) => {\r\n      this.passengerList = passengerDetail;\r\n    });\r\n    // this.passengerDetails = this.service.passengerDetails;\r\n    // console.log('TEST' + this.passengerDetails['PassengerId']);\r\n    // console.log('TEST1' + this.passengerDetails.PassengerId);\r\n  }\r\n \r\n\r\n //on edit the passengers\r\n  onEditClick(){\r\n   // this.service.editPassenger(PassengerId).subscribe(passengerDetail:passenger[]=>{ console.log(this.passengerDetails['PassengerId']);});\r\n  }\r\n\r\n//on delete the passengers\r\n  onDeleteClick(){}\r\n\r\n}\r\n","<div class=\"jumbtron\">\r\n<h1 class=\"display-4 text-center\"> Passengers  </h1>\r\n\r\n\r\n<div class=\"col-lg-6\">\r\n<table class=\"table\">\r\n\r\n    <thead style=\"text-align: center;\" class=\"thead-dark\">\r\n          <tr>\r\n          <th>PassengerId</th>\r\n          <th>BookingId</th>\r\n          <th>EmailId</th>\r\n          <th>Name</th>\r\n          <th>Gender</th>\r\n          <th>Age</th>\r\n          <th>Nationality</th>\r\n          <th colspan=\"2\">Action</th>\r\n          </tr>\r\n    </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let passenger of passengerList\">\r\n                <td>{{ passenger['PassengerId'] }}</td>\r\n                <td>{{ passenger['BookingId'] }}</td>\r\n                <td>{{ passenger['EmailId'] }}</td>\r\n                <td>{{ passenger['Name'] }}</td>\r\n                <td>{{ passenger['Gender'] }}</td>\r\n                <td>{{ passenger['Age'] }}</td>\r\n                <td>{{ passenger['Nationality'] }}</td>\r\n\r\n                <td>\r\n                    <button class=\" btn btn-success\" (click)=\"onEditClick()\" >Edit</button>\r\n                </td>\r\n                <td>\r\n                    <button class=\" btn btn-success\" (click)=\"onDeleteClick()\" >Delete</button>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    \r\n</table>\r\n</div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport {  FormGroup ,Validators,FormControl} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Passenger } from '../../Models/passenger.model';\r\nimport { PassengerService } from '../../Services/passenger.service';\r\n\r\n@Component({\r\n  selector: 'app-passenger',\r\n  templateUrl: './passenger.component.html',\r\n  styleUrls: ['./passenger.component.css']\r\n})\r\nexport class PassengerComponent implements OnInit {\r\n\r\n  //properties\r\n  passengers: Passenger;\r\n  //create property for reactive form\r\n  newForm: FormGroup;\r\n\r\n  constructor(private service : PassengerService, private router: Router)\r\n   { \r\n     this.passengers;\r\n    \r\n     //create reactive form\r\n     this.newForm=new FormGroup({\r\n      'PassengerId': new FormControl(null, [Validators.required, Validators.min(100)]),\r\n        'BookingId': new FormControl(null, [Validators.required, Validators.min(100)]),\r\n        'EmailId': new FormControl(null, [Validators.email]),\r\n        'Gender': new FormControl(null, [Validators.required, Validators.pattern('^[MFmf]$')]),\r\n        'Name': new FormControl(null, [Validators.required, Validators.pattern('^[A-Za-z .]*$')]),\r\n        'Age': new FormControl(null, [Validators.required, Validators.min(18)]),\r\n        'Nationality': new FormControl(null, [Validators.required, Validators.pattern('^[A-Za-z .]*$')]),\r\n     });\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n   //button methods\r\n   //add button\r\n\r\n     onAddClick(){\r\n        let passenger: Passenger = {\r\n          BookingId: this.newForm.get('BookingId').value,\r\n          EmailId: this.newForm.get('EmailId').value,\r\n          Gender: this.newForm.get('Gender').value,\r\n          Name: this.newForm.get('Name').value,\r\n          Age: this.newForm.get('Age').value,\r\n          Nationality: this.newForm.get('Nationality').value.substring(0, 3).toUpperCase()\r\n        };\r\n        console.log(this.newForm.value);\r\n        this.service.addPassenger(passenger).subscribe(resData => {\r\n          console.log(resData);\r\n        });\r\n        this.newForm.reset();\r\n        this.router.navigate(['/PassengerList']);\r\n\r\n    //delete button\r\n\r\n      //this.service.deletePassenger('109').subscribe(response => {\r\n      //console.log(response);\r\n    //});\r\n\r\n   }\r\n}\r\n","<div class=\"jumbtron\">\r\n    <h1 class=\"display-4 text-center\"> Passenger Details </h1>\r\n    <hr>\r\n    \r\n    <div class=\"col-md-6\" >\r\n        <form [formGroup]=\"newForm\" (ngSubmit)=\"onAddClick()\">\r\n\r\n        <!--Booking Id start-->\r\n            <div class=\"form-group\" >\r\n            <label for=\"bookingId\">Booking Id</label>\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Booking ID\" formControlName=\"BookingId\" [ngClass]=\"{\r\n                'is-valid': newForm.get('BookingId').valid && newForm.get('BookingId').touched,\r\n                'is-invalid': newForm.get('BookingId').invalid && newForm.get('BookingId').touched\r\n              }\" >\r\n              <span class=\"text-danger\" *ngIf=\"newForm.get('BookingId').invalid && newForm.get('BookingId').touched && newForm.get('BookingId').errors.required\">Booking ID can't be blank</span>\r\n              \r\n            </div>\r\n        <!--End of Booking Id-->\r\n        \r\n        <!--Email Id start-->\r\n            <div class=\"form-group\">\r\n                <label for=\"emailId\">Email Id</label>\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Email ID\" formControlName=\"EmailId\">\r\n                <span class=\"text-danger\" *ngIf=\"newForm.get('EmailId').invalid && newForm.get('EmailId').touched && newForm.get('EmailId').errors.email\">Email should be in correct format</span>\r\n            </div>\r\n        <!-- End of Email Id -->\r\n            \r\n        <!--Name start-->    \r\n            <div class=\"form-group\">\r\n                <label for=\"name\">Name</label>\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Name\" formControlName=\"Name\">\r\n                <span class=\"text-danger\" *ngIf=\"newForm.get('Name').invalid && newForm.get('Name').touched && newForm.get('Name').errors.required\">Employee Name can't be blank</span>\r\n                <span class=\"text-danger\" *ngIf=\"newForm.get('Name').invalid && newForm.get('Name').touched && newForm.get('Name').errors.pattern\">Employee Name can contain alphabets, dot (.) and space</span> \r\n\r\n            </div>\r\n        <!--End of Name-->    \r\n        \r\n        <!--Gender start-->  \r\n            <div class=\"form-group\">\r\n                 <label for=\"gender\">Gender  </label>\r\n                 <!--input type=\"text\" class=\"form-control\" placeholder=\"Gender\" formControlName=\"Gender\"-->\r\n                 <select class=\"form-control\" name=\"Gender\" formControlName=\"Gender\" >\r\n                      <option value=\"M\">Male</option>\r\n                      <option value=\"F\">Female</option>\r\n                  </select>\r\n                  <span class=\"text-danger\" *ngIf=\"newForm.get('Gender').invalid && newForm.get('Gender').touched && newForm.get('Gender').errors.required\"> Select the gender</span>\r\n            </div> \r\n        <!--End of Gender-->  \r\n\r\n        <!--Name Age start-->  \r\n            <div class=\"form-group\">\r\n                <label for=\"age\">Age</label>\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Age\" formControlName=\"Age\">\r\n                <span class=\"text-danger\" *ngIf=\"newForm.get('Age').invalid && newForm.get('Age').touched && newForm.get('Name').errors.required\">Age must be greater then or equal to 18</span>\r\n            </div>\r\n        <!--End of Age-->     \r\n\r\n        <!-- Nationality start-->  \r\n            <div class=\"form-group\">\r\n                <label for=\"nationality\">Nationality</label>\r\n                <!--input type=\"text\" class=\"form-control\" placeholder=\"Nationality\" formControlName=\"Nationality\"-->\r\n                <select class=\"form-control\" name=\"Nationality\" formControlName=\"Nationality\" >\r\n                    <option value=\"\">-- select one --</option>\r\n                    \r\n                    <option value=\"afghan\">Afghan</option>\r\n  <option value=\"albanian\">Albanian</option>\r\n  <option value=\"algerian\">Algerian</option>\r\n  <option value=\"american\">American</option>\r\n  <option value=\"andorran\">Andorran</option>\r\n  <option value=\"angolan\">Angolan</option>\r\n  <option value=\"antiguans\">Antiguans</option>\r\n  <option value=\"argentinean\">Argentinean</option>\r\n  <option value=\"armenian\">Armenian</option>\r\n  <option value=\"australian\">Australian</option>\r\n  <option value=\"austrian\">Austrian</option>\r\n  <option value=\"azerbaijani\">Azerbaijani</option>\r\n  <option value=\"bahamian\">Bahamian</option>\r\n  <option value=\"bahraini\">Bahraini</option>\r\n  <option value=\"bangladeshi\">Bangladeshi</option>\r\n  <option value=\"barbadian\">Barbadian</option>\r\n  <option value=\"barbudans\">Barbudans</option>\r\n  <option value=\"batswana\">Batswana</option>\r\n  <option value=\"belarusian\">Belarusian</option>\r\n  <option value=\"belgian\">Belgian</option>\r\n  <option value=\"belizean\">Belizean</option>\r\n  <option value=\"beninese\">Beninese</option>\r\n  <option value=\"bhutanese\">Bhutanese</option>\r\n  <option value=\"bolivian\">Bolivian</option>\r\n  <option value=\"bosnian\">Bosnian</option>\r\n  <option value=\"brazilian\">Brazilian</option>\r\n  <option value=\"british\">British</option>\r\n  <option value=\"bruneian\">Bruneian</option>\r\n  <option value=\"bulgarian\">Bulgarian</option>\r\n  <option value=\"burkinabe\">Burkinabe</option>\r\n  <option value=\"burmese\">Burmese</option>\r\n  <option value=\"burundian\">Burundian</option>\r\n  <option value=\"cambodian\">Cambodian</option>\r\n  <option value=\"cameroonian\">Cameroonian</option>\r\n  <option value=\"canadian\">Canadian</option>\r\n  <option value=\"cape verdean\">Cape Verdean</option>\r\n  <option value=\"central african\">Central African</option>\r\n  <option value=\"chadian\">Chadian</option>\r\n  <option value=\"chilean\">Chilean</option>\r\n  <option value=\"chinese\">Chinese</option>\r\n  <option value=\"colombian\">Colombian</option>\r\n  <option value=\"comoran\">Comoran</option>\r\n  <option value=\"congolese\">Congolese</option>\r\n  <option value=\"costa rican\">Costa Rican</option>\r\n  <option value=\"croatian\">Croatian</option>\r\n  <option value=\"cuban\">Cuban</option>\r\n  <option value=\"cypriot\">Cypriot</option>\r\n  <option value=\"czech\">Czech</option>\r\n  <option value=\"danish\">Danish</option>\r\n  <option value=\"djibouti\">Djibouti</option>\r\n  <option value=\"dominican\">Dominican</option>\r\n  <option value=\"dutch\">Dutch</option>\r\n  <option value=\"east timorese\">East Timorese</option>\r\n  <option value=\"ecuadorean\">Ecuadorean</option>\r\n  <option value=\"egyptian\">Egyptian</option>\r\n  <option value=\"emirian\">Emirian</option>\r\n  <option value=\"equatorial guinean\">Equatorial Guinean</option>\r\n  <option value=\"eritrean\">Eritrean</option>\r\n  <option value=\"estonian\">Estonian</option>\r\n  <option value=\"ethiopian\">Ethiopian</option>\r\n  <option value=\"fijian\">Fijian</option>\r\n  <option value=\"filipino\">Filipino</option>\r\n  <option value=\"finnish\">Finnish</option>\r\n  <option value=\"french\">French</option>\r\n  <option value=\"gabonese\">Gabonese</option>\r\n  <option value=\"gambian\">Gambian</option>\r\n  <option value=\"georgian\">Georgian</option>\r\n  <option value=\"german\">German</option>\r\n  <option value=\"ghanaian\">Ghanaian</option>\r\n  <option value=\"greek\">Greek</option>\r\n  <option value=\"grenadian\">Grenadian</option>\r\n  <option value=\"guatemalan\">Guatemalan</option>\r\n  <option value=\"guinea-bissauan\">Guinea-Bissauan</option>\r\n  <option value=\"guinean\">Guinean</option>\r\n  <option value=\"guyanese\">Guyanese</option>\r\n  <option value=\"haitian\">Haitian</option>\r\n  <option value=\"herzegovinian\">Herzegovinian</option>\r\n  <option value=\"honduran\">Honduran</option>\r\n  <option value=\"hungarian\">Hungarian</option>\r\n  <option value=\"icelander\">Icelander</option>\r\n  <option value=\"indian\">Indian</option>\r\n  <option value=\"indonesian\">Indonesian</option>\r\n  <option value=\"iranian\">Iranian</option>\r\n  <option value=\"iraqi\">Iraqi</option>\r\n  <option value=\"irish\">Irish</option>\r\n  <option value=\"israeli\">Israeli</option>\r\n  <option value=\"italian\">Italian</option>\r\n  <option value=\"ivorian\">Ivorian</option>\r\n  <option value=\"jamaican\">Jamaican</option>\r\n  <option value=\"japanese\">Japanese</option>\r\n  <option value=\"jordanian\">Jordanian</option>\r\n  <option value=\"kazakhstani\">Kazakhstani</option>\r\n  <option value=\"kenyan\">Kenyan</option>\r\n  <option value=\"kittian and nevisian\">Kittian and Nevisian</option>\r\n  <option value=\"kuwaiti\">Kuwaiti</option>\r\n  <option value=\"kyrgyz\">Kyrgyz</option>\r\n  <option value=\"laotian\">Laotian</option>\r\n  <option value=\"latvian\">Latvian</option>\r\n  <option value=\"lebanese\">Lebanese</option>\r\n  <option value=\"liberian\">Liberian</option>\r\n  <option value=\"libyan\">Libyan</option>\r\n  <option value=\"liechtensteiner\">Liechtensteiner</option>\r\n  <option value=\"lithuanian\">Lithuanian</option>\r\n  <option value=\"luxembourger\">Luxembourger</option>\r\n  <option value=\"macedonian\">Macedonian</option>\r\n  <option value=\"malagasy\">Malagasy</option>\r\n  <option value=\"malawian\">Malawian</option>\r\n  <option value=\"malaysian\">Malaysian</option>\r\n  <option value=\"maldivan\">Maldivan</option>\r\n  <option value=\"malian\">Malian</option>\r\n  <option value=\"maltese\">Maltese</option>\r\n  <option value=\"marshallese\">Marshallese</option>\r\n  <option value=\"mauritanian\">Mauritanian</option>\r\n  <option value=\"mauritian\">Mauritian</option>\r\n  <option value=\"mexican\">Mexican</option>\r\n  <option value=\"micronesian\">Micronesian</option>\r\n  <option value=\"moldovan\">Moldovan</option>\r\n  <option value=\"monacan\">Monacan</option>\r\n  <option value=\"mongolian\">Mongolian</option>\r\n  <option value=\"moroccan\">Moroccan</option>\r\n  <option value=\"mosotho\">Mosotho</option>\r\n  <option value=\"motswana\">Motswana</option>\r\n  <option value=\"mozambican\">Mozambican</option>\r\n  <option value=\"namibian\">Namibian</option>\r\n  <option value=\"nauruan\">Nauruan</option>\r\n  <option value=\"nepalese\">Nepalese</option>\r\n  <option value=\"new zealander\">New Zealander</option>\r\n  <option value=\"ni-vanuatu\">Ni-Vanuatu</option>\r\n  <option value=\"nicaraguan\">Nicaraguan</option>\r\n  <option value=\"nigerien\">Nigerien</option>\r\n  <option value=\"north korean\">North Korean</option>\r\n  <option value=\"northern irish\">Northern Irish</option>\r\n  <option value=\"norwegian\">Norwegian</option>\r\n  <option value=\"omani\">Omani</option>\r\n  <option value=\"pakistani\">Pakistani</option>\r\n  <option value=\"palauan\">Palauan</option>\r\n  <option value=\"panamanian\">Panamanian</option>\r\n  <option value=\"papua new guinean\">Papua New Guinean</option>\r\n  <option value=\"paraguayan\">Paraguayan</option>\r\n  <option value=\"peruvian\">Peruvian</option>\r\n  <option value=\"polish\">Polish</option>\r\n  <option value=\"portuguese\">Portuguese</option>\r\n  <option value=\"qatari\">Qatari</option>\r\n  <option value=\"romanian\">Romanian</option>\r\n  <option value=\"russian\">Russian</option>\r\n  <option value=\"rwandan\">Rwandan</option>\r\n  <option value=\"saint lucian\">Saint Lucian</option>\r\n  <option value=\"salvadoran\">Salvadoran</option>\r\n  <option value=\"samoan\">Samoan</option>\r\n  <option value=\"san marinese\">San Marinese</option>\r\n  <option value=\"sao tomean\">Sao Tomean</option>\r\n  <option value=\"saudi\">Saudi</option>\r\n  <option value=\"scottish\">Scottish</option>\r\n  <option value=\"senegalese\">Senegalese</option>\r\n  <option value=\"serbian\">Serbian</option>\r\n  <option value=\"seychellois\">Seychellois</option>\r\n  <option value=\"sierra leonean\">Sierra Leonean</option>\r\n  <option value=\"singaporean\">Singaporean</option>\r\n  <option value=\"slovakian\">Slovakian</option>\r\n  <option value=\"slovenian\">Slovenian</option>\r\n  <option value=\"solomon islander\">Solomon Islander</option>\r\n  <option value=\"somali\">Somali</option>\r\n  <option value=\"south african\">South African</option>\r\n  <option value=\"south korean\">South Korean</option>\r\n  <option value=\"spanish\">Spanish</option>\r\n  <option value=\"sri lankan\">Sri Lankan</option>\r\n  <option value=\"sudanese\">Sudanese</option>\r\n  <option value=\"surinamer\">Surinamer</option>\r\n  <option value=\"swazi\">Swazi</option>\r\n  <option value=\"swedish\">Swedish</option>\r\n  <option value=\"swiss\">Swiss</option>\r\n  <option value=\"syrian\">Syrian</option>\r\n  <option value=\"taiwanese\">Taiwanese</option>\r\n  <option value=\"tajik\">Tajik</option>\r\n  <option value=\"tanzanian\">Tanzanian</option>\r\n  <option value=\"thai\">Thai</option>\r\n  <option value=\"togolese\">Togolese</option>\r\n  <option value=\"tongan\">Tongan</option>\r\n  <option value=\"trinidadian or tobagonian\">Trinidadian or Tobagonian</option>\r\n  <option value=\"tunisian\">Tunisian</option>\r\n  <option value=\"turkish\">Turkish</option>\r\n  <option value=\"tuvaluan\">Tuvaluan</option>\r\n  <option value=\"ugandan\">Ugandan</option>\r\n  <option value=\"ukrainian\">Ukrainian</option>\r\n  <option value=\"uruguayan\">Uruguayan</option>\r\n  <option value=\"uzbekistani\">Uzbekistani</option>\r\n  <option value=\"venezuelan\">Venezuelan</option>\r\n  <option value=\"zambian\">Zambian</option>\r\n  <option value=\"zimbabwean\">Zimbabwean</option>\r\n                    \r\n                </select>\r\n                <span class=\"text-danger\" *ngIf=\"newForm.get('Nationality').invalid && newForm.get('Nationality').touched && newForm.get('Nationality').errors.required\">Select the Nationality</span>\r\n                \r\n            </div>\r\n        <!--End of Nationality-->  \r\n\r\n\r\n        <!--Add Button start-->  \r\n            <div class=\"text-center\">\r\n                <button type=\"submit\" class=\"btn btn-success\">Add</button>\r\n              </div>\r\n        <!--End of Button-->  \r\n\r\n        </form>\r\n        </div>\r\n\r\n</div>\r\n","\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Passenger } from '../Models/passenger.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PassengerService {\r\n\r\n  passengerDetails: Passenger;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getPassenger() {\r\n    return this.http.get<Passenger[]>('http://localhost:53981/api/Passengers');\r\n  }\r\n\r\n  addPassenger(passenger: Passenger) {\r\n    return this.http.post('http://localhost:53981/api/Passengers', passenger);\r\n  }\r\n\r\n  deletePassenger(pid: string) {\r\n    return this.http.delete('http://localhost:53981/api/Passengers/' + pid);\r\n  }\r\n\r\n  editPassenger(newPassenger: Passenger, pid: string) {\r\n    return this.http.put('http://localhost:53981/api/Passengers?PId=' + pid, newPassenger);\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PassengerComponent } from './Passengers/Components/passenger/passenger.component';\r\nimport { PassengerListComponent } from './Passengers/Components/passenger-list/passenger-list.component';\r\nimport { BookingComponent } from './Customers/Components/booking/booking.component';\r\nimport { AuthGuard } from './Customers/Services/Guard/auth.guard';\r\nimport { AdminComponent } from './Customers/Components/admin/admin.component';\r\nimport { LoginCustomerComponent } from './Customers/Components/login-customer/login-customer.component';\r\nimport { RegisterCustomerComponent } from './Customers/Components/register-customer/register-customer.component';\r\nimport { ProfileComponent } from './Customers/Components/profile/profile.component';\r\nimport { PageNotFoundComponent } from './Customers/Components/page-not-found/page-not-found.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    //ashish\r\n    { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n    { path: 'booking', component: BookingComponent, canActivate: [AuthGuard] },\r\n    { path: 'admin', component: AdminComponent, canActivate: [AuthGuard] },\r\n    { path: 'login', component: LoginCustomerComponent },\r\n    { path: 'Register', component: RegisterCustomerComponent },\r\n    { path: 'Profile', component: ProfileComponent, canActivate: [AuthGuard] },\r\n    { path: '**', component: PageNotFoundComponent },\r\n    //end\r\n  // { path: '', redirectTo: 'AddPassenger', pathMatch: 'full' },\r\n  { path: 'AddPassenger', component: PassengerComponent },\r\n  { path: 'PassengerList', component: PassengerListComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes,{useHash:true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { AuthenticateService } from './Customers/Services/Authenticate.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app works';\r\n  constructor(public authenticate : AuthenticateService){}\r\n}\r\n","<!-- <div>\r\n<a [routerLink]=\"['./passenger']\">Passenger</a> |&nbsp;\r\n<a>[routerLink]=\"['./passengerList']\">PassengerList</a> |&nbsp;\r\n</div>\r\n -->\r\n\r\n\r\n\r\n<!-- <div>\r\n  <nav class=\"dark-blue navbar navbar-dark navbar-expand-lg\">\r\n    <!-- <a class=\"navbar-brand\" [routerLink]=\" [ '/samples' ] \">Search Flight</a> &nbsp; -->\r\n    <!-- <a class=\"navbar-brand\" [routerLink]=\" [ '/booking' ] \">Book Flight</a> &nbsp;\r\n  </nav>\r\n  <div class=\"sidebar-left\">\r\n  </div>\r\n</div> -->\r\n\r\n\r\n<div style=\"height: 100%; overflow-y: scroll;\">\r\n\r\n  <nav class=\"navbar navbar-expand-sm bg-secondary navbar-dark\">\r\n    \r\n    <div id=\"main\">\r\n        <button class=\"openbtn rounded-lg\" onclick=\"openNav()\"><i class=\"material-icons\" style=\"font-size:36px\">account_circle</i></button>  \r\n        \r\n      </div>\r\n\r\n<ul class=\"navbar-nav mx-auto\">\r\n    \r\n    <li>\r\n        <h1>OARS Airline</h1>\r\n    </li>\r\n    <li> <div class=\"navbar-brand\" href=\"#\">\r\n            <img style='height: 50px;width: 80px;' src=\"\\assets\\images\\Airline.png\" alt=\"Airline\">\r\n    </div>\r\n    </li>\r\n</ul>\r\n<ul class=\"navbar-nav float-left\">\r\n    <li class=\"nav-item active \">\r\n        <a class=\"nav-link \" *ngIf = \"!authenticate.Loggedin()\" routerLink = '/login' routerLinkActive = 'Active'>Login</a>\r\n    </li>\r\n    <!-- <li class=\"nav-item active \">\r\n        <a class=\"nav-link \"  routerLink = '/booking' routerLinkActive = 'Active'>Book Ticket</a>\r\n    </li> -->\r\n    <li class=\"nav-item active \">\r\n        <a class=\"nav-link \" *ngIf = \"authenticate.Loggedin()\" (click) = \"authenticate.Logout()\" routerLink = '/login' routerLinkActive = 'Active'>Logout</a>\r\n    </li>\r\n</ul>\r\n</nav>\r\n\r\n\r\n<div id=\"mySidebar\" class=\"sidebar\">\r\n<a href=\"javascript:void(0)\" class=\"closebtn\" onclick=\"closeNav()\">×</a>\r\n<a href=\"\" routerLink = \"/Profile\" routerLinkActive = 'Active'>My Profile</a>\r\n<a href=\"\" routerLink = \"/admin\" routerLinkActive = 'Active'>Admin</a>\r\n<a href=\"\"  routerLink = '/booking' routerLinkActive = 'Active'>My Bookings</a>\r\n<a href=\"\">Contact</a>\r\n</div>\r\n\r\n\r\n\r\n\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms'\r\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { BookingDataService } from './Bookings/Services/booking-data.service';\r\nimport { PassengerComponent } from './Passengers/Components/passenger/passenger.component';\r\nimport { PassengerListComponent } from './Passengers/Components/passenger-list/passenger-list.component';\r\nimport { SafePipe } from './Bookings/pipes/safe/safe.pipe';\r\nimport { BookingDeatilsComponent } from './Bookings/Components/booking-deatils/booking-deatils.component';\r\nimport { PassengerService } from './Passengers/Services/passenger.service';\r\nimport { RegisterService } from './Customers/Services/Register.service';\r\nimport { AuthenticateService } from './Customers/Services/Authenticate.service';\r\nimport { AuthGuard } from './Customers/Services/Guard/auth.guard';\r\nimport { TokenInterceptorService } from './Customers/Services/Interceptor/token-interceptor.service';\r\nimport { LoginCustomerComponent } from './Customers/Components/login-customer/login-customer.component';\r\nimport { RegisterCustomerComponent } from './Customers/Components/register-customer/register-customer.component';\r\nimport { BookingComponent } from './Customers/Components/booking/booking.component';\r\nimport { AdminComponent } from './Customers/Components/admin/admin.component';\r\nimport { PageNotFoundComponent } from './Customers/Components/page-not-found/page-not-found.component';\r\nimport { ProfileComponent } from './Customers/Components/profile/profile.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PassengerComponent,\r\n    PassengerListComponent,\r\n    SafePipe,\r\n    BookingDeatilsComponent,\r\n    AppComponent,\r\n    LoginCustomerComponent,\r\n    RegisterCustomerComponent,\r\n    BookingComponent,\r\n    AdminComponent,\r\n    PageNotFoundComponent,\r\n    ProfileComponent\r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    \r\n  ],\r\n  providers: [PassengerService, BookingDataService,RegisterService, AuthenticateService,AuthGuard,\r\n    {provide: HTTP_INTERCEPTORS,\r\n    useClass : TokenInterceptorService,\r\n  multi : true} ],\r\n\r\n  bootstrap: [AppComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}