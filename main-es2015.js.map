{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Authenticate.service.ts","./src/app/Customer.ts","./src/app/Register.service.ts","./src/app/User.ts","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/booking/booking.component.ts","./src/app/booking/booking.component.html","./src/app/login-customer/login-customer.component.ts","./src/app/login-customer/login-customer.component.html","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/register-customer/register-customer.component.ts","./src/app/register-customer/register-customer.component.html","./src/app/token-interceptor.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { User } from './User';\nimport {  HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport {catchError} from \"rxjs/operators\"\nimport {throwError} from \"rxjs\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticateService {\n\n  url :string = 'http://localhost:53981/api/Authenticate';\n\n  constructor(private http : HttpClient) { }\n\n\n    AuthenticateUser(user : User)\n    {\n       return this.http.post<any>(this.url,user).pipe(catchError(this.errorHandler))\n    }\n\n    errorHandler(error:HttpErrorResponse)\n    {\n      return throwError(error)\n    }\n//isLoggedin\n    Loggedin(){\n      return !!(localStorage.getItem('token') )\n      \n    }\n\n    getToken(){\n      localStorage.getItem('token');\n    }\n  \n}\n","\r\n\r\nexport class Customer\r\n{\r\n    constructor(\r\n        public Name:string = '',\r\n        public Email:string = '',\r\n        public Pwd:string = '',\r\n        public DOB:Date = null,\r\n        public WalletBalance:number = null,\r\n        public ResidingAddress = ''\r\n    ){}\r\n}\r\n\r\n","import { Injectable, ErrorHandler } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http'\nimport { Customer } from './Customer';\nimport { catchError } from 'rxjs/operators'\nimport { throwError } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n//registerservice\nexport class Register {\n  // urlfake = 'http://localhost:53981/api/Customers/GetCustomerByname'\n\n  url: string = 'http://localhost:53981//api/Customers';\n\n  constructor(private http: HttpClient) { }\n\n  //Create Customer\n  AddCustomer(customer: Customer) {\n\n    return this.http.post<any>(this.url, customer).pipe(catchError(this.errorHandler))\n  }\n\n  //Get Customer By Id\n  GetCustomerById(id: number) {\n    return this.http.get<any>(this.url + `/${id}`).pipe(catchError(this.errorHandler))\n  }\n\n  //update Customer\n  UpdateCustmomer(id: number, customer: Customer) {\n    return this.http.put<any>(this.url + `/${id}`, customer).pipe(catchError(this.errorHandler))\n  }\n\n  //Delete Customer\n  DeleteCustomer(id: number) {\n    return this.http.delete<any>(this.url + `/${id}`).pipe(catchError(this.errorHandler))\n\n  }\n  \n  //method to get Customer by Email\n\n  // getCustomerByName(name:string)\n  // { \n  //   // const options = name ?{ params: new HttpParams().set('name', name) } : {};\n  //   const httpOptions = {\n  //     headers: new HttpHeaders({\n\n  //       'name': '${this.name}'\n  //     })\n  //   };\n  //   return this.http.get<any>(this.urlfake,httpOptions).pipe(catchError(this.errorHandler))\n  // }\n\n  //method to handle errors\n  errorHandler(error: HttpErrorResponse) {\n    return throwError(error.status);\n  }\n}\n","export class User\r\n{\r\n\r\n    constructor(\r\n        public Email:string = '' ,\r\n        public Password:string = ''\r\n        \r\n    )\r\n    {}\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginCustomerComponent } from './login-customer/login-customer.component';\nimport { RegisterCustomerComponent } from './register-customer/register-customer.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { BookingComponent } from './booking/booking.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { AuthGuard } from './auth.guard';\nimport { ProfileComponent } from './profile/profile.component';\n\n\nconst routes: Routes = [\n  {path:'',redirectTo:'/login' ,pathMatch: 'full' },\n  {path:'booking',component: BookingComponent,canActivate : [AuthGuard]},\n  {path:'admin',component: AdminComponent , canActivate : [AuthGuard]},\n  {path:'login',component: LoginCustomerComponent},\n  {path: 'Register',component: RegisterCustomerComponent  },\n  {path: 'Profile' , component : ProfileComponent ,canActivate : [AuthGuard] },\n  {path: '**' ,component:PageNotFoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{useHash:true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthenticateService } from './Authenticate.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'OARSWebUI';\n  constructor(private authenticate : AuthenticateService){}\n}\n","<div >\n <!-- <app-login-customer></app-login-customer> -->\n<!--<app-register-customer></app-register-customer> -->\n<nav class=\"navbar navbar-expand-sm bg-secondary navbar-dark\">\n    \n        <div id=\"main\">\n            <button class=\"openbtn rounded-lg\" onclick=\"openNav()\"><i class=\"material-icons\" style=\"font-size:36px\">account_circle</i></button>  \n            \n          </div>\n    \n    <ul class=\"navbar-nav mx-auto\">\n        \n        <li>\n            <h1>OARS Airline</h1>\n        </li>\n        <li> <div class=\"navbar-brand\" href=\"#\">\n                <img style='height: 50px;width: 80px;' src=\"\\assets\\Images\\Airline.png\" alt=\"Airline\">\n        </div>\n        </li>\n    </ul>\n    <ul class=\"navbar-nav float-left\">\n        <li class=\"nav-item active \">\n            <a class=\"nav-link \"  routerLink = '/login' routerLinkActive = 'Active'>Login</a>\n        </li>\n        <li class=\"nav-item active \">\n            <a class=\"nav-link \"  routerLink = '/booking' routerLinkActive = 'Active'>Book Ticket</a>\n        </li>\n    </ul>\n</nav>\n\n\n<div id=\"mySidebar\" class=\"sidebar\">\n    <a href=\"javascript:void(0)\" class=\"closebtn\" onclick=\"closeNav()\">×</a>\n    <a href=\"#\">My Profile</a>\n    <a href=\"#\">Admin</a>\n    <a href=\"#\">My Bookings</a>\n    <a href=\"#\">Contact</a>\n  </div>\n  \n  \n\n\n<router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginCustomerComponent } from './login-customer/login-customer.component';\nimport { RegisterCustomerComponent } from './register-customer/register-customer.component';\nimport { from } from 'rxjs';\nimport { BookingComponent } from './booking/booking.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { Register } from './Register.service';\nimport { HttpClientModule ,HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { AuthenticateService } from './Authenticate.service';\nimport { AuthGuard } from './auth.guard';\nimport { TokenInterceptorService } from './token-interceptor.service';\nimport { ProfileComponent } from './profile/profile.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginCustomerComponent,\n    RegisterCustomerComponent,\n    BookingComponent,\n    AdminComponent,\n    PageNotFoundComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n    \n  ],\n  providers: [Register,AuthenticateService,AuthGuard,\n  {provide: HTTP_INTERCEPTORS,\n  useClass : TokenInterceptorService,\nmulti : true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router} from '@angular/router';\nimport { AuthenticateService } from './Authenticate.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authenticate : AuthenticateService, private router : Router){}\n  canActivate():boolean{\n    if(this.authenticate.Loggedin()){return true}\n    else{\n      this.router.navigate(['/login']);\n      return false;\n\n    }\n  }\n \n}\n  \n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-booking',\n  templateUrl: './booking.component.html',\n  styleUrls: ['./booking.component.css']\n})\nexport class BookingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  \n\n}\n","<p>booking works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../User';\nimport { AuthenticateService } from '../Authenticate.service';\nimport { stringify } from 'querystring';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login-customer',\n  templateUrl: './login-customer.component.html',\n  styleUrls: ['./login-customer.component.css']\n})\nexport class LoginCustomerComponent implements OnInit {\n\n  constructor(private authenticate : AuthenticateService, private router : Router) { }\n  token = \"\";\n\n  ngOnInit(): void {\n  }\n  UserCred:User = new User();\n\n  onLogin()\n  {\n    \n    this.authenticate.AuthenticateUser(this.UserCred).subscribe(\n     \n      res => {\n        localStorage.setItem(\"token\",JSON.stringify(res))\n        console.log(res)\n        this.router.navigate(['/booking']);\n\n      },\n      error => {\n        window.alert(\"Wrong User Credentials\");\n        console.log(error)\n      }\n    )\n  }\n\n\n\n\n\n\n}\n","<!-- <nav class=\"navbar navbar-expand-sm bg-secondary navbar-dark\">\n\n    <ul class=\"navbar-nav mx-auto\">\n        <li>\n            <h1>OARS Airline</h1>\n        </li>\n        <li> <a class=\"navbar-brand\" href=\"#\">\n                <img style='height: 50px;width: 80px;' src=\"\\assets\\Images\\Airline.png\" alt=\"Airline\">\n            </a>\n        </li>\n    </ul>\n    <ul class=\"navbar-nav float-left\">\n        <li class=\"nav-item active \">\n            <a class=\"nav-link \"  routerLink = '/login' routerLinkActive = 'Active'>Login</a>\n        </li>\n        <li class=\"nav-item active \">\n            <a class=\"nav-link \"  routerLink = '/booking' routerLinkActive = 'Active'>Book Ticket</a>\n        </li>\n    </ul>\n</nav> -->\n<div class=\"row \" style=\"margin: 100px;\">\n    <div class=\"column mx-auto\">\n        <div class=\"card border-primary shadow bg-white\">\n            <div class=\"card header \">\n                <img class=\"card-img-top w-25 h-25  mx-auto\" src=\"/assets/Images/User.jpg\" alt=\"User\">\n            </div>\n            <div class=\"card-body\">\n                <form #userform='ngForm'>\n                    <h4 class=\"text-center \">Login</h4>\n                    <div class=\"form-group\">\n\n                        <label for=\"email\">Email:</label>\n                        <input class=\"form-control \" name=\"email\" #email='ngModel' type=\"text\"\n                            pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" placeholder=\"exmaple123@gmail.com\"\n                            [class.is-invalid]=\"email.invalid && email.touched\" required [(ngModel)]='UserCred.Email'>\n                        <!-- <small class=\"text-danger\" [class.d-none]=\"email.untouched || email.valid\">Invalid\n                            Username</small> -->\n                        <div *ngIf=\"email.errors && email.touched\">\n                            <small class=\"text-danger\" *ngIf=\"email.errors.pattern\">pattern is wrong</small>\n                            <small class=\"text-danger\" *ngIf=\"email.errors.required\">email is required</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"password\">Password</label>\n                        <input class=\"form-control\" name=\"password\" #password=\"ngModel\" type=\"password\"\n                            [class.is-invalid]=\"password.invalid && password.touched\" required\n                            [(ngModel)]='UserCred.Password'>\n                        <small class=\"text-danger\" [class.d-none]=\"password.valid || password.untouched\">Invalid\n                            password</small>\n                    </div>\n\n                    <button [disabled]=\"userform.form.invalid\" type=\"submit\" class=\" btn btn-primary mx-auto\" (click) = \"onLogin()\">Login</button>\n\n                </form>\n            </div>\n            <div class=\"crad-footer  bg-secondary\">\n                <h6 class=\"text-center\" style=\"color: aliceblue;\">New User? <a  routerLink = '/Register' routerLinkActive = 'Active'>SignUp</a></h6>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"text-center\">404</h1>\n<h1 class=\"text-center\">PageNotFOUND</h1>\n","import { Component, OnInit } from '@angular/core';\nimport { Customer } from '../Customer';\nimport { Register } from '../Register.service';\nimport { Router } from '@angular/router';\nimport { strict } from 'assert';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  id:number ;\n  \n\n\n  customerModel: Customer = new Customer();\n  constructor(private custservice: Register , private router : Router ) { \n    this.id = 100;\n  }\n\n\n\n  ngOnInit(): void {\n    this.custservice.GetCustomerById(this.id).subscribe(\n      req => { this.customerModel = req ;},\n      error => {console.log(error)}\n      )\n\n  }\n\n  \n  UpdateCust() {\n\n    this.custservice.UpdateCustmomer(this.id,this.customerModel)\n      .subscribe(\n        \n        req => { console.log(req) ; window.alert(\"Customer Updated\")},\n        error => {console.log(error) ;}\n         \n      )\n  }\n\n  DeleteCust(){\n    this.custservice.DeleteCustomer(this.id).subscribe(\n      req => {console.log(req) ;  window.alert(\"Customer Deleted\")},\n      error => console.log(error)\n      \n    )\n  }\n\n\n}\n","<div class=\"container-fluid \">\n{{customerModel | json}}\n    <div class=\"row\">\n        <!-- {{customerModel | json}} -->\n        <div class=\" card mx-auto w-75 rounded-lg border border-success shadow  border-top-0 mt-1 mb-3\">\n\n            <div class=\"row\">\n                            <div class=\"col card-body w-50  \">\n\n\n                <form #userform=\"ngForm\" novalidate (ngSubmit)=UpdateCust()>\n\n                    <div class=\"form-group\">\n                        <label for=\"name\">Name:</label>\n                        <input type=\"text\" name=\"name\" #name=\"ngModel\" class=\"form-control\"\n                            [class.is-invalid]=\"name.invalid && name.touched\" required [(ngModel)]=\"customerModel.Name\">\n                        <small class=\"text-danger\" [class.d-none]=\"name.valid || name.untouched\">invalid\n                            Name</small>\n                    </div>\n\n\n                    <div class=\"form-group\">\n                        <label class=\"mt-2\" for=\"email\">Email:</label>\n                        <input disabled type=\"text\" name=\"email\" pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                            #email=\"ngModel\" class=\"form-control\" [class.is-invalid]=\"email.invalid && email.touched\"\n                            required [(ngModel)]=\"customerModel.Email\">\n                        <div *ngIf=\"email.errors && email.touched\">\n                            <small class=\"text-danger\" *ngIf=\"email.errors.pattern\">pattern is wrong</small>\n                            <small class=\"text-danger\" *ngIf=\"email.errors.required\">email is required</small>\n                        </div>\n                    </div>\n\n\n                    <div class=\"form-group\">\n                        <label class=\"mt-2\" for=\"password\">Password:</label>\n                        <input type=\"password\" name=\"password\" #password=\"ngModel\" class=\"form-control\"\n                            [class.is-invalid]=\"password.invalid && password.touched\" required\n                            [(ngModel)]=\"customerModel.Pwd\">\n                        <small class=\"text-danger\" [class.d-none]=\"password.valid || password.untouched\">invalid\n                            Password</small>\n                    </div>\n\n\n                    <div class=\"form-group\">\n                        <label class=\"mt-2\" for=\"dob\">DateOfBirth:</label>\n                        <input type=\"date\" name=\"dob\" #dob=\"ngModel\" class=\"form-control\"\n                            [class.is-invalid]=\"dob.invalid && dob.touched\" required [(ngModel)]=\"customerModel.DOB \">\n                        <small class=\"text-danger\" [class.d-none]=\"dob.valid || dob.untouched\">invalid             \n                            Dateofbirth</small>\n                    </div>\n\n\n                    <div class=\"form-group\">\n                        <label class=\"mt-2\" for=\"balance\">WalletBalance:</label>\n                        <input type=\"number\" name=\"balance\" #balance=\"ngModel\" pattern=\"^[1-9]\\d*$\" class=\"form-control\"\n                            [class.is-invalid]=\"balance.invalid && balance.touched\" required\n                            [(ngModel)]=\"customerModel.WalletBalance\">\n                        <small class=\"text-danger\" [class.d-none]=\"balance.valid || balance.untouched\">invalid\n                            Amount</small>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"mt-2\" for=\"address\">Address:</label>\n                        <input type=\"text\" name=\"address\" #address=\"ngModel\" class=\"form-control\"\n                            [class.is-invalid]=\"address.invalid && address.touched\" required\n                            [(ngModel)]=\"customerModel.ResidingAddress\">\n                        <small class=\"text-danger\" [class.d-none]=\"address.valid || address.untouched\">invalid\n                            Address</small>\n                    </div>\n\n                    <div class=\" mx-auto\" style=\"width: 300px;\">\n                        <button type=\"submit\" [disabled]=\"userform.form.invalid \" class=\"btn btn-primary\">Update\n                            Account</button>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col\">\n                <h1  class=\"mt-5 ml-3\">My Profile</h1>\n                <img class=\"pt-4\" src=\"assets\\Images\\User.jpg\" alt=\"profile\">\n                <button style=\"margin-top: 200px;margin-left: 40px;\" class=\"btn btn-primary \">Delete Account</button>\n            \n        </div>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Customer } from '../Customer';\nimport { Register } from '../Register.service';\nimport { error } from 'protractor';\nimport { Route } from '@angular/compiler/src/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register-customer',\n  templateUrl: './register-customer.component.html',\n  styleUrls: ['./register-customer.component.css']\n})\nexport class RegisterCustomerComponent implements OnInit {\n  public EmailAlreadyExists: boolean = false;\n  Registered: boolean = false;\n  customerModel: Customer = new Customer();\n  constructor(private custservice: Register , private router : Router ) { }\n\n\n\n  ngOnInit(): void {\n  }\n\n  CreateCust() {\n\n    this.custservice.AddCustomer(this.customerModel)\n      .subscribe(\n        \n        data => { \n          \n          if(data == 409){window.alert('Email Already Exists')};\n          if(data == 201){this.Registered = true;window.alert('User Account Created')};\n           console.log(\"Success\",data) \n\n        },\n        error => {console.log(error)  }\n         \n      )\n\n      if(this.Registered){\n        this.router.navigate(['login']);\n      }\n  }\n\n\n}\n\n\n\n\n\n","<!-- <nav class=\"navbar navbar-expand-sm bg-secondary navbar-dark\">\n\n    <ul class=\"navbar-nav mx-auto\">\n        <li>\n            <h1>OARS Airline</h1>\n        </li>\n        <li> <a class=\"navbar-brand\" href=\"#\">\n                <img style='height: 50px;width: 80px;' src=\"\\assets\\Images\\Airline.png\" alt=\"Airline\">\n            </a>\n        </li>\n    </ul>\n    <ul class=\"navbar-nav float-left\">\n        <li class=\"nav-item active \">\n            <a class=\"nav-link \"  routerLink = '/login' routerLinkActive = 'Active'>Login</a>\n        </li>\n\n    </ul>\n</nav> -->\n<div class=\"container-fluid \">\n    \n   <div class=\"row\">\n       <!-- {{customerModel | json}} -->\n       <div  class=\" card mx-auto w-75 rounded-lg border border-success shadow  border-top-0 mt-1 mb-3\">\n           <div class=\"card-header bg-primary\">\n               <h1>Create Account</h1>\n           </div>\n           \n           <div class=\"card-body w-50 mx-auto \">\n<form #userform = \"ngForm\" novalidate (ngSubmit)=CreateCust() >\n    \n    <div class=\"form-group\">\n        <label for=\"name\">Name:</label>\n        <input type=\"text\" name=\"name\" #name = \"ngModel\" class=\"form-control\"  [class.is-invalid] = \"name.invalid && name.touched\" required [(ngModel)] = \"customerModel.Name\">\n        <small class=\"text-danger\" [class.d-none] = \"name.valid || name.untouched\">invalid Name</small>\n    </div>\n\n\n    <div class=\"form-group\">\n        <label class=\"mt-2\"  for=\"email\">Email:</label>\n        <input type=\"text\" name=\"email\"  pattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"  #email = \"ngModel\" class=\"form-control\"  [class.is-invalid] = \"email.invalid && email.touched\" required [(ngModel)] = \"customerModel.Email\">\n        <div *ngIf = \"email.errors && email.touched\">\n            <small class=\"text-danger\" *ngIf = \"email.errors.pattern\">pattern is wrong</small> \n            <small class=\"text-danger\" *ngIf = \"email.errors.required\">email is required</small>\n        </div>\n    </div>\n\n\n    <div class=\"form-group\">\n        <label class=\"mt-2\"  for=\"password\">Password:</label>\n         <input type=\"password\" name=\"password\" #password = \"ngModel\" class=\"form-control\"  [class.is-invalid] = \"password.invalid && password.touched\" required [(ngModel)] = \"customerModel.Pwd\">\n        <small class=\"text-danger\" [class.d-none] = \"password.valid || password.untouched\">invalid Password</small>\n    </div>\n\n \n       <div class=\"form-group\">\n        <label class=\"mt-2\" for=\"dob\">DateOfBirth:</label>\n        <input type=\"date\" name=\"dob\" #dob = \"ngModel\" class=\"form-control\"  [class.is-invalid] = \"dob.invalid && dob.touched\" required [(ngModel)] = \"customerModel.DOB\">\n        <small class=\"text-danger\" [class.d-none] = \"dob.valid || dob.untouched\">invalid Dateofbirth</small>\n    </div>\n\n\n        <div class=\"form-group\">\n        <label class=\"mt-2\" for=\"balance\">WalletBalance:</label>\n        <input type=\"number\" name=\"balance\" #balance = \"ngModel\" pattern = \"^[1-9]\\d*$\" class=\"form-control\"  [class.is-invalid] = \"balance.invalid && balance.touched\" required [(ngModel)] = \"customerModel.WalletBalance\">\n        <small class=\"text-danger\" [class.d-none] = \"balance.valid || balance.untouched\">invalid Amount</small>\n    </div>\n\n    <div class=\"form-group\">\n        <label class=\"mt-2\" for=\"address\">Address:</label>\n        <input type=\"text\" name=\"address\" #address = \"ngModel\" class=\"form-control\"  [class.is-invalid] = \"address.invalid && address.touched\" required [(ngModel)] = \"customerModel.ResidingAddress\">\n        <small class=\"text-danger\" [class.d-none] = \"address.valid || address.untouched\">invalid Address</small>\n    </div>\n\n    <div class=\" mx-auto\" style=\"width: 300px;\">\n        <button type=\"submit\" [disabled]=\"userform.form.invalid \" class=\"btn btn-primary\" >Create Account</button>\n    </div>\n</form>\n</div>\n</div>\n</div> \n</div>\n\n","import { Injectable ,Injector} from '@angular/core';\nimport { HttpInterceptor } from \"@angular/common/http\"\nimport { AuthenticateService } from './Authenticate.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private injector : Injector) { }\n \n  intercept(req, next) {\n    let authService = this.injector.get(AuthenticateService)\n    let modifiedReq = req.clone(\n      {\n        setHeaders: {\n          Authorization: `Bearer ${authService.getToken()}`\n        }\n      }\n    )\n    \n    return next.handle(modifiedReq);\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}