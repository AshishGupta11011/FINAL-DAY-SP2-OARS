{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Sample/samples/samples.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/component/booking-deatils/booking-deatils.component.ts","./src/app/component/booking-deatils/booking-deatils.component.html","./src/app/pipes/safe/safe.pipe.ts","./src/app/services/booking-data.service.ts","./src/app/transform.directive.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAkD;;AAO3C,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;IACD,aAAa;QAEX,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,OAAO,IAAI,CAAC;IACd,CAAC;;gFAVU,gBAAgB;gGAAhB,gBAAgB;6FAAhB,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACyC;AAC1B;;;AAGtE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,4GAAuB,EAAE;IACvD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,kFAAgB,EAAE;CAEjD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACfD;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,SAAS,CAAC;KACnB;;wEAFY,YAAY;4FAAZ,YAAY;QCNzB,sEACE;QAAA,yEACE;QACA,uEAAwD;QAAA,sEAAW;QAAA,4DAAI;QAAC,mEAC1E;QAAA,4DAAM;QACN,oEACM;QACP,4DAAM;QAEP,2EAA+B;;QANH,0DAA+B;QAA/B,6IAA+B;;6FDG9C,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACY;AACT;AAC8C;AAE9B;AACV;AACuB;AACZ;AACN;AACQ;AACC;;AAyB/D,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,kFAAkB,CAAE,YAVvB;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,kEAAmB;YACnB,qEAAgB;YAChB,4FAAuB;YACvB,iFAAmB;YACnB,2EAAmB;SACpB;mIAIU,SAAS,mBApBlB,2DAAY;QACZ,uEAAkB;QAClB,8DAAQ;QACR,4GAAuB;QACvB,mFAAgB,aAIhB,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,kEAAmB;QACnB,qEAAgB;QAChB,4FAAuB;QACvB,iFAAmB;QACnB,2EAAmB;6FAKV,SAAS;cAtBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,uEAAkB;oBAClB,8DAAQ;oBACR,4GAAuB;oBACvB,mFAAgB;iBAEjB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;oBACX,kEAAmB;oBACnB,qEAAgB;oBAChB,4FAAuB;oBACvB,iFAAmB;oBACnB,2EAAmB;iBACpB;gBACD,SAAS,EAAE,CAAC,kFAAkB,CAAE;gBAChC,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACvCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAEW;;;;;;;ICU1D,2EAEE;IAAA,uFACF;IAAA,4DAAO;;;IAuCV,qEACG;IAAA,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC5B,qEAAI;IAAA,uDAAkB;IAAA,4DAAK;IAC3B,qEAAI;IAAA,uDAAc;IAAA,4DAAK;IACvB,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC5B,qEAAI;IAAA,wDAAqB;IAAA,4DAAK;IAC9B,sEAAI;IAAA,wDAAmB;IAAA,4DAAK;IAC5B,sEAAI;IAAA,wDAAoB;IAAA,4DAAK;IAC7B,sEAAI;IAAA,wDAAsB;IAAA,4DAAK;IAEjC,4DAAK;;;IATC,0DAAmB;IAAnB,mFAAmB;IACnB,0DAAkB;IAAlB,kFAAkB;IAClB,0DAAc;IAAd,8EAAc;IACd,0DAAmB;IAAnB,mFAAmB;IACnB,0DAAqB;IAArB,qFAAqB;IACrB,0DAAmB;IAAnB,mFAAmB;IACnB,0DAAoB;IAApB,oFAAoB;IACpB,0DAAsB;IAAtB,sFAAsB;;;IApClC,wEAEA;IAAA,4EACE;IAAA,wEACE;IAAA,yEACE;IAAA,qEAAI;IAAA,oEAAS;IAAA,4DAAK;IAClB,qEAAI;IAAA,sEAAW;IAAA,4DAAK;IACpB,qEAAI;IAAA,iEAAM;IAAA,4DAAK;IACf,sEAAI;IAAA,uEAAW;IAAA,4DAAK;IACpB,sEAAI;IAAA,yEAAa;IAAA,4DAAK;IACtB,sEAAI;IAAA,wEAAY;IAAA,4DAAK;IACrB,sEAAI;IAAA,wEAAY;IAAA,4DAAK;IACrB,sEAAI;IAAA,0EAAc;IAAA,4DAAK;IAEzB,4DAAK;IACP,4DAAQ;IACR,sEACE;IAAA,iEAAS;IACT,iEAAS;IACT,iEAAS;IACT,iEAAS;IACT,iEAAS;IACT,iEAAS;IACT,iEAAS;IACT,iEAAS;IAEX,4DAAK;IACL,yEACG;IAAA,qIACG;IAUJ,4DAAQ;IACZ,4DAAQ;IACR,qEAAe;;;IAbN,2DAA2B;IAA3B,mFAA2B;;;IAuC1B,2EAEE;IAAA,uFAA2B;IAAA,4DAAO;;;IASpC,2EAEE;IAAA,4FACF;IAAA,4DAAO;;;IAUP,2EAEE;IAAA,4FAAgC;IAAA,4DAAO;;;IAQzC,2EAEE;IAAA,+EAAmB;IAAA,4DAAO;;;IAS5B,2EAEE;IAAA,iFAAqB;IAAA,4DAAO;;;;;IArExC,wEACE;IAAA,0EACE;IAAA,yEAAoC;IAAA,mFAAwB;IAAA,4DAAK;IAEjE,0EAEE;IAAA,yEACE;IAAA,4EAAoD;IAAA,uEAAY;IAAA,4DAAQ;IACxE,4EAAyD;IAAA,qEAAU;IAAA,4DAAQ;IAC3E,6EAA4D;IAAA,6EAAiB;IAAA,4DAAQ;IACrF,6EAAmD;IAAA,kEAAM;IAAA,4DAAQ;IACjE,6EAAuD;IAAA,uEAAW;IAAA,4DAAQ;IAC5E,4DAAM;IAEN,0EACE;IAAA,0EACE;IAAA,wEAMA;IAAA,uIAEE;IACJ,4DAAM;IAEN,0EACE;IAAA,wEAKA;IAAA,uIAEE;IAEJ,4DAAM;IACN,2EACE;IAAA,wEAKA;IAAA,wFAAgF;IAChF,uFAAiD;IACjD,uIAEE;IACJ,4DAAM;IACN,2EACE;IAAA,wEAKA;IAAA,uIAEE;IACJ,4DAAM;IAEN,2EACE;IAAA,wEAKA;IAAA,wIAEE;IACJ,4DAAM;IACR,4DAAM;IACN,0EACE;IAGA,2EACE;IAAA,6EAAkE;IAA1B,6UAAyB;IAAC,2EAAe;IAAA,4DAAS;IAC5F,4DAAM;IACR,4DAAM;IACN,uEACE;IAAA,wDACF;;IAAA,4DAAM;IAMR,4DAAO;IACT,4DAAM;IACR,qEAAe;;;;IAtFL,0DAAqB;IAArB,qFAAqB;IAanB,2DAGI;IAHJ,qSAGI;IAGJ,0DAA+G;IAA/G,8LAA+G;IAMjF,0DAG1B;IAH0B,yTAG1B;IAEJ,0DAA8H;IAA9H,6MAA8H;IAKhH,0DAAgC;IAAhC,8EAAgC;IAKf,0DAAsB;IAAtB,oEAAsB;IAGrD,0DAAoI;IAApI,mNAAoI;IAKpI,0DAGF;IAHE,iSAGF;IAEE,0DAA4G;IAA5G,2LAA4G;IAMhF,0DAG5B;IAH4B,iTAG5B;IAEA,0DAAwH;IAAxH,uMAAwH;IAa5H,0DACF;IADE,mKACF;;;IAUN,wEACE;IAAA,0EACE;IAAA,yEAAoC;IAAA,gFAAqB;IAAA,4DAAK;IAC9D,sEACE;IAAA,iEACF;IAAA,4DAAM;IACN,sEACE;IAAA,sEAAM;IAAA,uDAAuC;IAAA,4DAAM;IACnD,sEAAM;IAAA,wDAA0C;IAAA,4DAAM;IACtD,uEAAM;IAAA,wDAAkD;IAAA,4DAAM;IAC9D,uEAAM;IAAA,wDAAgC;IAAA,4DAAM;IAC5C,uEAAM;IAAA,wDAA+C;IAAA,4DAAM;IAE7D,4DAAM;IAER,4DAAM;IAER,qEAAe;;;IAVH,0DAAuC;IAAvC,qHAAuC;IACvC,0DAA0C;IAA1C,wHAA0C;IAC1C,0DAAkD;IAAlD,gIAAkD;IAClD,0DAAgC;IAAhC,8GAAgC;IAChC,0DAA+C;IAA/C,6HAA+C;;ADnKtD,MAAM,uBAAuB;IAelC,aAAa;IACb,YAAoB,eAAmC;QAAnC,oBAAe,GAAf,eAAe,CAAoB;QAfvD,sBAAiB,GAAY,IAAI,CAAC;QAClC,uBAAkB,GAAY,IAAI,CAAC;QACnC,uBAAkB,GAAY,IAAI,CAAC;QAcjC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAElB,iBAAiB;QACjB,IAAI,CAAC,aAAa,GAAG,IAAI,wDAAS,CAAC;YAEjC,QAAQ,EAAE,IAAI,0DAAW,CAAC,GAAG,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpD,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YACjC,MAAM,EAAE,IAAI,0DAAW,CAAC,KAAK,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrD,WAAW,EAAE,IAAI,0DAAW,CAAC,KAAK,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC1D,aAAa,EAAE,IAAI,0DAAW,CAAC,0BAA0B,CAAC;YAC1D,WAAW,EAAE,IAAI,0DAAW,CAAC,0BAA0B,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC9E,SAAS,EAAE,IAAI,0DAAW,CAAC,CAAC,EAAC,CAAC,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACpE,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACjC,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAEpC,CAAC,CAAC;QAEH,eAAe;QACf,IAAI,CAAC,OAAO,GAAG,IAAI,wDAAS,CAAC;YAE3B,QAAQ,EAAE,IAAI,0DAAW,CAAC,GAAG,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpD,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC5B,MAAM,EAAE,IAAI,0DAAW,CAAC,KAAK,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrD,WAAW,EAAE,IAAI,0DAAW,CAAC,KAAK,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC1D,aAAa,EAAE,IAAI,0DAAW,CAAC,0BAA0B,CAAC;YAC1D,aAAa,EAAE,IAAI,0DAAW,CAAC,0BAA0B,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAChF,SAAS,EAAE,IAAI,0DAAW,CAAC,CAAC,EAAC,CAAC,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACpE,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YACjC,UAAU,EAAE,IAAI,0DAAW,CAAC,GAAG,CAAC;SAEjC,CAAC,CAAC;IAGL,CAAC;IAED,QAAQ;IAGR,CAAC;IAED,yDAAyD;IACzD,4CAA4C;IAC5C,kCAAkC;IAClC,YAAY;QAGV,oBAAoB;QACpB,IAAG,IAAI,CAAC,iBAAiB,EACrB;YAAC,IAAI,CAAC,aAAa,EAAE,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;SAC3B;;YAEJ,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;IAE3C,CAAC;IAED,yDAAyD;IACzD,aAAa;QAGX,oBAAoB;QACpB,IAAG,IAAI,CAAC,kBAAkB,EACtB;YAAC,IAAI,CAAC,aAAa,EAAE,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;SAC3B;;YAEJ,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;IAE3C,CAAC;IAGD,sBAAsB;IACtB,aAAa;QAEX,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,EAAE;YAC9B,iFAAiF;YACjF,IAAI,CAAC,eAAe,CAAC,0BAA0B,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,CAAC;iBACpF,SAAS,CACR,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAC3B,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CACzB;YACH,mBAAmB;YACnB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;SACtB;aACI;YACH,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;SAC7B;IAEH,CAAC;IAED,aAAa;QACX,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,EAAE;YAC9B,oDAAoD;YACpD,OAAO,CAAC,GAAG,CACT,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAE,IAAI;gBAC7C,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,GAAE,IAAI;gBACvD,oBAAoB,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa,GAAE,IAAI;gBAC7D,oBAAoB,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa,GAAE,IAAI;gBAC7D,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAGnD,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,CACvE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAC3B,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CACzB;YACH,iBAAiB;YACjB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;SACtB;aACI;YACH,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;SAC7B;IACH,CAAC;;8FAlIU,uBAAuB;uGAAvB,uBAAuB;QCXpC,yEACE;QACC,yEACC;QAAA,wEAA2B;QAAA,uFAA4B;QAAA,4DAAK;QAC5D,0EACE;QAAA,yEACE;QAAA,yEACE;QAAA,sEAKA;QAAA,qHAEE;QAGJ,4DAAM;QACN,yEACE;QAAA,6EAAkE;QAAzB,gJAAS,kBAAc,IAAC;QAAC,yEAAa;QAAA,4DAAS;QAC1F,4DAAM;QACR,4DAAM;QACR,4DAAO;QACT,4DAAM;QAGN,yIAEA;QA2CA,0IACE;QA2FF,yIACE;QAkBJ,4DAAM;;QAlLI,0DAA2B;QAA3B,wFAA2B;QAIK,0DAG1B;QAH0B,4SAG1B;QAEJ,0DAA8H;QAA9H,oMAA8H;QAa1H,0DAAyB;QAAzB,uFAAyB;QA6CxB,0DAA0B;QAA1B,wFAA0B;QA4F3B,0DAA0B;QAA1B,wFAA0B;;6FDxJ7B,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAoD;;AAK7C,MAAM,QAAQ;IAEnB,SAAS,CAAC,KAAc,EAAE,GAAG,IAAe;QAC1C,OAAO,IAAI,CAAC;IACd,CAAC;;gEAJU,QAAQ;kGAAR,QAAQ;6FAAR,QAAQ;cAHpB,kDAAI;eAAC;gBACJ,IAAI,EAAE,MAAM;aACb;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAIA;AACE;;;AAKtC,MAAM,kBAAkB;IAE7B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAE1C,cAAS,GAAW,yBAAyB,CAAC;IAFA,CAAC;IAI/C,uBAAuB;IACvB,0BAA0B,CAAC,WAAmB;QAC5C,8IAA8I;QAC9I,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,2BAA2B,WAAW,EAAE,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAE5H,CAAC;IACD,sBAAsB;IACtB,uBAAuB,CAAC,QAAgB;QACtC,8IAA8I;QAC9I,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,wBAAwB,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAEtH,CAAC;IACD,4BAA4B;IAC5B,sBAAsB,CAAC,QAAiB;QACtC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAU,IAAI,CAAC,SAAS,GAAG,cAAc,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IACtH,CAAC;IAED,YAAY,CAAC,KAAwB;QACnC,OAAO,uDAAU,CAAC,KAAK,CAAC,MAAM,CAAC;IACjC,CAAC;;oFAzBU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAA0C;;AAKnC,MAAM,kBAAkB;IAE7B,gBAAgB,CAAC;;oFAFN,kBAAkB;kGAAlB,kBAAkB;6FAAlB,kBAAkB;cAH9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;aAC3B;;;;;;;;;;;;;;ACJD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-samples',\n  templateUrl: './samples.component.html',\n  styleUrls: ['./samples.component.css']\n})\nexport class SamplesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  onSearchClick()\n  {\n    console.log(\"CLICKED\");\n    return true;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BookingDeatilsComponent } from './component/booking-deatils/booking-deatils.component';\nimport { SamplesComponent } from './Sample/samples/samples.component';\n\n\nconst routes: Routes = [\n  { path: \"booking\", component: BookingDeatilsComponent },\n  { path: \"samples\", component: SamplesComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'new-app';\n}\n","\n<div >\n  <nav class=\"dark-blue navbar navbar-dark navbar-expand-lg\">\n    <!-- <a class=\"navbar-brand\" [routerLink]=\" [ '/samples' ] \">Search Flight</a> &nbsp; -->\n    <a class=\"navbar-brand\" [routerLink]=\" [ '/booking' ] \">Book Flight</a> &nbsp;\n  </nav>\n  <div class=\"sidebar-left\">\n  </div>  \n </div>\n \n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TransformDirective } from './transform.directive';\nimport { SafePipe } from './pipes/safe/safe.pipe';\nimport { BookingDeatilsComponent } from './component/booking-deatils/booking-deatils.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { BookingDataService } from './services/booking-data.service';\nimport { SamplesComponent } from './Sample/samples/samples.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TransformDirective,\n    SafePipe,\n    BookingDeatilsComponent,\n    SamplesComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n  ],\n  providers: [BookingDataService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Booking } from 'src/app/model/booking';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { BookingDataService } from 'src/app/services/booking-data.service';\nimport { Flight } from 'src/app/model/flight';\n\n@Component({\n  selector: 'app-booking-deatils',\n  templateUrl: './booking-deatils.component.html',\n  styleUrls: ['./booking-deatils.component.css']\n})\nexport class BookingDeatilsComponent implements OnInit {\n  showFlightDetails: boolean = true;\n  showBookingContent: boolean = true;\n  showBookingDetails: boolean = true;\n\n  // pipe \n  //@Input() today;\n  //properties\n  bookings: Booking[];\n  flights : Flight[];\n  //create property for reactive form\n  newForm: FormGroup;\n  newFlightForm: FormGroup;\n \n\n  //constructor\n  constructor(private bookingsService: BookingDataService) {\n    this.bookings = [];\n    this.flights = [];\n   \n    // reactive form \n    this.newFlightForm = new FormGroup({\n      \n      FlightId: new FormControl(100,[Validators.required]),\n      FlightName: new FormControl(\"FC\"),\n      Source: new FormControl(\"DEL\", [Validators.required]),\n      Destination: new FormControl(\"JAI\", [Validators.required]),\n      DepartureTime: new FormControl(\"2020-05-18T18:30:00.000Z\"),\n      ArrivalTime: new FormControl(\"2020-05-18T18:30:00.000Z\",[Validators.required]),\n      NoOfSeats: new FormControl(1,[Validators.max(5), Validators.min(1)]),\n      BaggageLimit: new FormControl(50),\n      AvailableSeats: new FormControl(10),\n      \n    });\n\n    //reactive form\n    this.newForm = new FormGroup({\n      \n      FlightId: new FormControl(100,[Validators.required]),\n      Class: new FormControl(\"FC\"),\n      Source: new FormControl(\"DEL\", [Validators.required]),\n      Destination: new FormControl(\"JAI\", [Validators.required]),\n      DateOfBooking: new FormControl(\"2020-05-18T18:30:00.000Z\"),\n      DateOfJourney: new FormControl(\"2020-05-18T18:30:00.000Z\",[Validators.required]),\n      NoOfSeats: new FormControl(1,[Validators.max(5), Validators.min(1)]),\n      TicketFare: new FormControl(5000),\n      CustomerId: new FormControl(100),\n      \n    });\n\n\n  }\n  \n  ngOnInit() {\n    \n   \n  }\n\n  // Directive for showing after button click after search \n  // public showFlightDetails:boolean = false;\n  // public buttonName:any = 'Show';\n  toggleSearch()\n  { \n\n    // CHANGE THE Button\n    if(this.showFlightDetails)  \n        {this.onSearchClick();\n      console.log(\"Search Clicked\");\n        }\n    else\n     console.log(\"Search Clicked Else Part\");    \n\n  }\n\n  // Directive for showing after button click after booking\n  toggleBooking()\n  { \n\n    // CHANGE THE Button\n    if(this.showBookingDetails)  \n        {this.onSubmitClick();\n      console.log(\"Submit Clicked\");\n        }\n    else\n     console.log(\"Submit Clicked Else Part\");    \n\n  }\n  \n\n  // Search Flight by id\n  onSearchClick()\n  {\n    console.log(\" Part\");\n    if (this.newForm.valid == true) {\n      //this.bookingsService.searchFlightsToDatabase(this.newFlightForm.value.FlightId)\n      this.bookingsService.searchFlightsByDestination(this.newFlightForm.value.Destination)\n      .subscribe(\n        error => console.log(error),\n        data => console.log(data))\n        ;\n      //clear textboxes//\n      this.newForm.reset();\n    }\n    else {\n      console.log(\"Invalid data\");\n    }\n\n  }\n  \n  onSubmitClick() {\n    if (this.newForm.valid == true) {\n      //accessing value of any form control (textbox etc.)\n      console.log(\n        \"Source : \" + this.newForm.value.Source +'\\n' + \n        \"Destination : \" + this.newForm.value.Destination +'\\n' +\n        \"Date Of Booking : \" + this.newForm.value.DateOfBooking +'\\n' +\n        \"Date of Joining : \" + this.newForm.value.DateOfJourney +'\\n' +\n        \"No of Seats : \" + this.newForm.value.NoOfSeats);\n\n\n      this.bookingsService.postBookingsToDatabase(this.newForm.value).subscribe(\n        error => console.log(error),\n        data => console.log(data))\n        ;\n      //clear textboxes\n      this.newForm.reset();\n    }\n    else {\n      console.log(\"Invalid data\");\n    }\n  }\n\n}\n","<div class=\"container\">\n  <!-- flight deatils from flight table are shown here  -->\n   <div class=\"container py-6\" >\n    <h3 class=\"text-uppercase\">Search Flight by Destination</h3>\n    <form [formGroup]=\"newFlightForm\">\n      <div class=\"form-group form-row \">\n        <div class=\"col-md-3\">\n          <input type=\"text\" min=\"100\" class=\"form-control\" placeholder=\" Enter Destination \" name=\"Destination\"\n            formControlName=\"Destination\" [ngClass]=\"{\n                'is-valid': newForm.get('Destination').valid && newForm.get('Destination').touched,\n                'is-invalid': newForm.get('Destination').invalid && newForm.get('Destination').touched               \n              }\">\n          <span class=\"text-danger\"\n            *ngIf=\"newForm.get('Destination').invalid && newForm.get('Destination').touched && newForm.get('Destination').errors.required\">\n            Please Enter Destination .\n          </span>\n          \n        </div>\n        <div class=\"text-center col-md-2\">\n          <button class=\"btn btn-blue text-white \" (click)=\"toggleSearch()\">Search Flight</button>\n        </div>\n      </div>\n    </form>\n  </div> \n  <!-- flight details ended here  -->\n\n  <ng-container *ngIf=\"showFlightDetails\">\n    \n  <table class=\"table table-bordered table-striped\">\n    <thead>\n      <tr class=\"text-center text-uppercase\">\n        <th>Flight Id</th>\n        <th>Flight Name</th>\n        <th>Source</th>\n        <th>Destination</th>\n        <th>DepartureTime</th>\n        <th>Arrival Time</th>\n        <th>BaggageLimit</th>\n        <th>AvailableSeats</th>\n\n      </tr>\n    </thead>\n    <tr>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td></td>\n      \n    </tr>\n    <tbody>  \n       <tr *ngFor=\"let fly of flights\">\n          <td>{{fly.Destination}}</td>  \n          <td>{{fly.FlightName}}</td>  \n          <td>{{fly.Source}}</td>  \n          <td>{{fly.Destination}}</td>  \n          <td>{{fly.DepartureTime}}</td>  \n          <td>{{fly.Destination}}</td>  \n          <td>{{fly.BaggageLimit}}</td>  \n          <td>{{fly.AvailableSeats}}</td>  \n\n        </tr>  \n      </tbody>   \n  </table> \n  </ng-container>\n  <!-- flight Bookings are shown here  -->\n\n  \n  <ng-container  *ngIf=\"showBookingDetails\">\n    <div class=\"col-md-12 text-blue \">\n      <h2 class=\"border-bottom pb-2 mb-2\">Book Your Flight with us</h2>\n\n      <form [formGroup]=\"newForm\">\n\n        <div class=\"form-group form-row \">\n          <label for=\"source\" class=\"col-md-3 col-form-label\">Flying From:</label>\n          <label for=\"destination\" class=\"col-md-3 col-form-label\">Flying To:</label>\n          <label for=\"deptDatepicker\" class=\"col-md-2 col-form-label\">Date of Journey :</label>\n          <label for=\"class\" class=\"col-md-2 col-form-label\">Class:</label>\n          <label for=\"noOfSeats\" class=\"col-md-2 col-form-label\">Travellers:</label>\n        </div>\n\n        <div class=\"form-group form-row \">\n          <div class=\"col-md-3\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Flying from\" name=\"Source\" formControlName=\"Source\"\n              [ngClass]=\"{\n                  'is-valid': newForm.get('Source').valid && newForm.get('Source').touched,\n                  'is-invalid': newForm.get('Source').invalid && newForm.get('Source').touched\n                }\">\n\n            <span class=\"text-danger\"\n              *ngIf=\"newForm.get('Source').invalid && newForm.get('Source').touched && newForm.get('Source').errors.required\">\n              Please Enter your location </span>\n          </div>\n\n          <div class=\"col-md-3\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Destination \" name=\"destination\"\n              formControlName=\"Destination\" [ngClass]=\"{\n                  'is-valid': newForm.get('Destination').valid && newForm.get('Destination').touched,\n                  'is-invalid': newForm.get('Destination').invalid && newForm.get('Destination').touched               \n                }\">\n            <span class=\"text-danger\"\n              *ngIf=\"newForm.get('Destination').invalid && newForm.get('Destination').touched && newForm.get('Destination').errors.required\">\n              Please Enter your Destination .\n            </span>\n          </div>\n          <div class=\"col-md-2\">\n            <input matInput [matDatepicker]=\"deptDatepicker\" formControlName=\"DateOfJourney\" class=\"form-control\"\n              [ngClass]=\"{\n            'is-valid': newForm.get('DateOfJourney').valid && newForm.get('DateOfJourney').touched,\n            'is-invalid': newForm.get('DateOfJourney').invalid && newForm.get('DateOfJourney').touched\n          }\">\n            <mat-datepicker-toggle matSuffix [for]=\"deptDatepicker\"></mat-datepicker-toggle>\n            <mat-datepicker #deptDatepicker></mat-datepicker>\n            <span class=\"text-danger\"\n              *ngIf=\"newForm.get('DateOfJourney').invalid && newForm.get('DateOfJourney').touched && newForm.get('DateOfJourney').errors.required\">\n              Please Enter your DateOfJourney </span>\n          </div>\n          <div class=\"col-md-2\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Enter Class \" name=\"class\" formControlName=\"Class\"\n              [ngClass]=\"{\n            'is-valid': newForm.get('Class').valid && newForm.get('Class').touched,\n            'is-invalid': newForm.get('Class').invalid && newForm.get('Class').touched\n          }\">\n            <span class=\"text-danger\"\n              *ngIf=\"newForm.get('Class').invalid && newForm.get('Class').touched && newForm.get('Class').errors.required\">\n              Please Enter Class </span>\n          </div>\n\n          <div class=\"col-md-2\">\n            <input type=\"number\" min=\"0\" class=\"form-control\" placeholder=\"No of Seats \" name=\"noOfSeats\"\n              formControlName=\"NoOfSeats\" [ngClass]=\"{\n              'is-valid': newForm.get('NoOfSeats').valid && newForm.get('NoOfSeats').touched,\n              'is-invalid': newForm.get('NoOfSeats').invalid && newForm.get('NoOfSeats').touched \n            }\">\n            <span class=\"noOfSeats\"\n              *ngIf=\"newForm.get('NoOfSeats').invalid && newForm.get('NoOfSeats').touched && newForm.get('NoOfSeats').errors.required\">\n              Please Enter b/w 1-5 </span>\n          </div>\n        </div>\n        <div class=\"form-group form-row\">\n          <!-- <div class=\"text-center col-md-3\">\n          <button class=\"btn btn-blue text-white\" (click)=\"onSearchClick()\">Search</button>\n        </div> -->\n          <div class=\"text-center col-md-3\">\n            <button class=\"btn btn-blue text-white\" (click)=\"toggleBooking()\">Confirm Booking</button>\n          </div>\n        </div>\n        <div>\n          {{this.newForm.value | json}}\n        </div>\n\n        <!-- is-valid    : green\n            is-invalid : red -->\n\n\n      </form>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"showBookingDetails\">\n    <div class=\"col-md-12 text-blue \">\n      <h2 class=\"border-bottom pb-2 mb-2\">Booking Deatails are </h2>\n      <div>\n        Data\n      </div>\n      <div>\n        <div> Flying from : {{newForm.value.Source}} </div>\n        <div> Flying To : {{newForm.value.Destination}} </div>\n        <div> Date Of Journey : {{newForm.value.DateOfJourney}} </div>\n        <div> Class : {{newForm.value.Class}} </div>\n        <div> No of Travellers : {{newForm.value.NoOfSeats}} </div>\n                \n      </div>\n\n    </div>\n\n  </ng-container>\n\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n\n  transform(value: unknown, ...args: unknown[]): unknown {\n    return null;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Booking } from '../model/booking';\nimport { Flight } from '../model/flight';\nimport { catchError } from 'rxjs/operators'\nimport { throwError, Observable } from 'rxjs'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookingDataService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  apiPrefix: string = \"http://localhost:53981/\";\n\n  //Search by flight name\n  searchFlightsByDestination(Destination: string): Observable<any> {\n    //return this.httpClient.get(this.apiPrefix + `api/bookings?Source=${Source}&Destination=${Destination}`).pipe(catchError(this.errorHandler));\n    return this.httpClient.get(this.apiPrefix + `api/Flights?Destination=${Destination}`).pipe(catchError(this.errorHandler));\n\n  }\n  //Search by flight id \n  searchFlightsToDatabase(FlightId: number): Observable<any> {\n    //return this.httpClient.get(this.apiPrefix + `api/bookings?Source=${Source}&Destination=${Destination}`).pipe(catchError(this.errorHandler));\n    return this.httpClient.get(this.apiPrefix + `api/Flights?FlightId=${FlightId}`).pipe(catchError(this.errorHandler));\n\n  }\n  // post Bookings To Database\n  postBookingsToDatabase(bookings: Booking) {\n    return this.httpClient.post<Booking>(this.apiPrefix + `api/bookings`, bookings).pipe(catchError(this.errorHandler));\n  }\n\n  errorHandler(error: HttpErrorResponse) {\n    return throwError(error.status)\n  }\n}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[appTransform]'\n})\nexport class TransformDirective {\n\n  constructor() { }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}